msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Using JWT RBAC"
msgstr "JWT RBAC の使用"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://github.com/smallrye/smallrye-jwt/[SmallRye JWT]\n"
"to verify https://tools.ietf.org/html/rfc7519[JSON Web Token]s, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`\n"
"and provide secured access to the Quarkus HTTP endpoints using Bearer Token Authorization and https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr "このガイドでは、Quarkusアプリケーションが https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] を利用して、 link:https://tools.ietf.org/html/rfc7519[JSON Web Token] を検証し、MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` として表現し、Bearer Token Authorizationと link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control] を使用してQuarkus HTTPエンドポイントへのセキュアなアクセスを提供する方法について説明します。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Quarkus OpenID Connect `quarkus-oidc` extension also supports Bearer Token Authorization and uses `smallrye-jwt` to represent the bearer tokens as `JsonWebToken`.\n"
"For more information, read the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide.\n"
"OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow.\n"
"For more information, see xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr ""
"Quarkus OpenID Connect `quarkus-oidc` エクステンションは、ベアラートークン認証にも対応しており、 `smallrye-jwt` を使用して、ベアラートークンを `JsonWebToken` として表します。\n"
"詳細については、 xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン認証] ガイドを参照してください。\n"
"Quarkus アプリケーションで OIDC 認可コードフローを使用してユーザーを認証する必要がある場合は、OpenID Connect エクステンションを使用する必要があります。\n"
"詳細については、 xref:security-oidc-code-flow-authentication.adoc[Webアプリケーションを保護するためのOIDCコードフロー] メカニズムを参照してください。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Quickstart"
msgstr "クイックスタート"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、すぐに完成した例に飛んでも構いません。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "ソリューションは `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリ] にあります。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "First, create a new project with the following command:"
msgstr "まず、以下のコマンドで新規プロジェクトを作成します:"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、{mp-jwt} サポートを含む `smallrye-jwt` エクステンションをインポートします。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `smallrye-jwt` エクステンションを追加することができます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr "RESTエンドポイントを `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` に以下の内容で作成します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "REST Endpoint V1"
msgstr "REST エンドポイント V1"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Here we inject the JsonWebToken interface, an extension of the java.security.\n"
"Principal interface that provides access to the claims associated with the current authenticated token."
msgstr "ここでは、java.security.PrincipalのエクステンションであるJsonWebTokenインターフェイスを注入しています。これは、現在の認証済みトークンに関連するクレームへのアクセスを提供する、java.security.Principalインターフェースの拡張です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "@PermitAll is a JSR 250 common security annotation that indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "@PermitAll は、JSR 250 の一般的なセキュリティーアノテーションであり、認証されているかどうかに関係なく、特定のエンドポイントにすべての呼び出し元がアクセスできることを示します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject the Jakarta REST SecurityContext to inspect the security state of the call and use a `getResponseString()` function to populate a response string."
msgstr "ここでは、Jakarta REST SecurityContext を注入して呼び出しのセキュリティ状態を検査し、 `getResponseString()` 関数を使用して応答文字列を入力しています。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we check if the call is insecure by checking the request user/caller `Principal` against null."
msgstr "ここでは、リクエストのユーザー/呼び出し元の `Principal` を null と照合して、呼び出しが安全でないかどうかを確認します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we check that the Principal and JsonWebToken have the same name since JsonWebToken does represent the current Principal."
msgstr "ここでは、JsonWebToken が現在の Principal を表しているため、Principal と JsonWebToken が同じ名前であることを確認します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we get the Principal name."
msgstr "ここで、Principal の名前を取得します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "構築した応答では、呼び出し元の名前、リクエスト `SecurityContext` の `isSecure()` と `getAuthenticationScheme()` の状態、null 以外の `JsonWebToken` が挿入されたかどうかを利用します。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now we are ready to run our application. Use:"
msgstr "これで、アプリケーションを実行する準備が整いました。以下を使用してください。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "and you should see output similar to:"
msgstr "次のような出力が得られるはずです。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "quarkus:dev Output"
msgstr "quarkus:dev 出力"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "REST エンドポイントが実行されているので、curl のようなコマンドラインツールを使ってアクセスすることができます。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "curl command for /secured/permit-all"
msgstr " /secured/permit-all に対するcurl コマンド"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"We have not provided any JWT in our request, so we would not expect that there is any security state seen by the endpoint,\n"
"and the response is consistent with that:"
msgstr "このリクエストではJWTを設定していませんので、エンドポイントから見たセキュリティーステートがあるとは期待できず、レスポンスもそれに沿ったものとなっています。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "username is anonymous"
msgstr "ユーザー名は anonymous (匿名) です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "isHttps is false as https is not used"
msgstr "isHttps は https を使用しないので false です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "authScheme is null"
msgstr "authScheme は null です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "hasJWT is false"
msgstr "hasJWTは false です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "Ctrl-Cを使用してQuarkusサーバーを停止します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "では実際に何かをセキュア化してみましょう。下記の新しいエンドポイントメソッド `helloRolesAllowed` を見てみましょう。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "REST Endpoint V2"
msgstr "REST エンドポイント V2"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject `JsonWebToken`"
msgstr "ここでは、`JsonWebToken` を挿入します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This new endpoint will be located at /secured/roles-allowed"
msgstr "この新しいエンドポイントは /secured/roles-allowed に存在します。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"@RolesAllowed is a JSR 250 common security annotation that indicates that the given endpoint is accessible by a caller if\n"
"they have either a \"User\" or \"Admin\" role assigned."
msgstr "@RolesAllowed は、\"User\" または \"Admin\" ロールが割り当てられている場合は呼び出し元が特定のエンドポイントにアクセスできることを示す JSR 250 の一般的なセキュリティーアノテーションです。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we build the reply the same way as in the `hello` method but also add a value of the JWT `birthdate` claim by directly calling the injected `JsonWebToken`."
msgstr "ここでは、`hello` メソッドと同じ方法で応答を作成しますが、挿入された `JsonWebToken` を直接呼び出すことで JWT `birthdate` クレームの値を追加します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw compile quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr "`TokenSecuredResource` にこの追加を行った後 、 `./mvnw compile quarkus:dev` コマンドを再実行し、次のように `curl -v http://127.0.0.1:8080/secured/roles-allowed ; echo` を使用して、新しいエンドポイントへのアクセスを試行してみてください。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Your output should be as follows:"
msgstr "出力は以下のようになるはずです:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "curl command for /secured/roles-allowed"
msgstr "/secured/roles-allowed の curl コマンド"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Excellent, we have not provided any JWT in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error.\n"
"We need to obtain and pass in a valid JWT to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate a JWT, and 2) generating a matching JWT with the appropriate claims."
msgstr "素晴らしいですね。リクエストに JWT トークンを提供していないため、エンドポイントにはアクセスできないはずであり、実際にアクセスできませんでした。代わりに HTTP 401 Unauthorized エラーを受け取りました。エンドポイントにアクセスするためには、有効な JWT を取得して渡す必要があります。これには 2 つのステップがあります。1) {extension-name} エクステンションに JWT の検証方法に関する情報を設定し、2) 適切なクレームを持つ適合する JWT を生成します。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Configuring the {extension-name} Extension Security Information"
msgstr "{extension-name} エクステンションセキュリティー情報の設定"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "次の内容で `security-jwt-quickstart/src/main/resources/application.properties` を作成します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "application.properties for TokenSecuredResource"
msgstr "TokenSecuredResource の application.properties"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We are setting public key location to point to a classpath publicKey.pem location. We will add this key in part B, xref:add-public-key[Adding a Public Key]."
msgstr "公開鍵の場所は、クラスパスのpublicKey.pemの場所を指すように設定しています。この鍵は、パートB xref:add-public-key[公開鍵の追加] で追加します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We are setting the issuer to the URL string `https://example.com/issuer`."
msgstr "発行者を URL 文字列 `https://example.com/issuer` に設定しています。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We are including the public key as a resource in the native executable."
msgstr "ネイティブ実行可能ファイルのリソースとして公開鍵を含めています。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Adding a Public Key"
msgstr "公開鍵の追加"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires that JWTs that are signed with the RSA-256 signature algorithm. This in\n"
"turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public\n"
"key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured\n"
"previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr "https://tools.ietf.org/html/rfc7519[JWT 仕様] は、使用できる JWT のさまざまなレベルのセキュリティーを定義しています。{mp-jwt} 仕様では、RSA-256 署名アルゴリズムで署名された JWT が必要です。これには、RSA 公開鍵ペアが必要です。REST エンドポイントサーバー側では、リクエストとともに送信された JWT を検証するために使用する RSA 公開鍵の場所を設定する必要があります。以前に設定され た `mp.jwt.verify.publickey.location=publicKey.pem` 設定は、公開鍵がクラスパスで `publicKey.pem` として使用可能であることを想定しています。これを行うには、次のコンテンツを `security-jwt-quickstart/src/main/resources/publicKey.pem` ファイルにコピーします。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "RSA Public Key PEM Content"
msgstr "RSA 公開鍵 PEM コンテンツ"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Generating a JWT"
msgstr "JWT の生成"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Often one obtains a JWT from an identity manager like https://www.keycloak.org/[Keycloak], but for this quickstart we will generate our own using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "多くの場合、 link:https://www.keycloak.org/[Keycloak] のようなIDマネージャからJWTを取得しますが、このクイックスタートでは、 `smallrye-jwt` が提供するJWT生成APIを使用して独自に生成することにします。詳細は、xref:security-jwt-build.adoc[SmallRye JWTでJWTトークンを生成] を参照してください。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Take the code from the following listing and place into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "次のリストからコードを取得し、`security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java` に配置します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "GenerateToken main Driver Class"
msgstr "GenerateToken メインドライバークラス"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The `iss` claim is the issuer of the JWT. This needs to match the server side `mp.jwt.verify.issuer`.\n"
"in order for the token to be accepted as valid."
msgstr "`iss` クレームは JWT の発行者です。トークンが有効であると認められるためには、これがサーバー側の `mp.jwt.verify.issuer` と一致する必要があります。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The `upn` claim is defined by the {mp-jwt} spec as preferred claim to use for the\n"
"`Principal` seen via the container security APIs."
msgstr "`upn` クレームは、{mp-jwt} 仕様で、コンテナーセキュリティー API を介して表示される `Principal` に使用する優先クレームとして定義されています。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The `group` claim provides the groups and top-level roles associated with the JWT bearer."
msgstr "`group` クレームは、JWT ベアラーに関連付けられたグループとトップレベルのロールを提供します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The `birthday` claim. It can be considered to be a sensitive claim, so you may want to consider encrypting the claims, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "`birthday` クレームです。機密性の高いクレームと見なすことができるため、クレームの暗号化を検討したくなるかもしれません。 xref:security-jwt-build.adoc[SmallRye JWT を使用した JWT トークンの生成] を参照してください。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note for this code to work we need the content of the RSA private key that corresponds to the public key we have in the TokenSecuredResource application. Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr "このコードが機能するには、TokenSecuredResource アプリケーションにある公開鍵に対応する RSA 秘密鍵のコンテンツが必要であることに注意してください。次の PEM コンテンツを取得し、`security-jwt-quickstart/src/test/resources/privateKey.pem` に配置します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "RSA Private Key PEM Content"
msgstr "RSA 秘密鍵 PEM コンテンツ"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We will use a `smallrye.jwt.sign.key.location` property to point to this private signing key."
msgstr "`smallrye.jwt.sign.key.location` プロパティーを使用して、この秘密署名鍵を指します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Generating Keys with OpenSSL"
msgstr "OpenSSL を使用した鍵の生成"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "It is also possible to generate a public and private key pair using the OpenSSL command line tool."
msgstr "OpenSSL コマンドラインツールを使用して、公開鍵と秘密鍵のペアを生成することもできます。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "openssl commands for generating keys"
msgstr "鍵を生成するための openssl コマンド"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "An additional step is needed for generating the private key for converting it into the PKCS#8 format."
msgstr "秘密鍵を生成して PKCS#8 形式に変換するには、追加の手順が必要です。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "openssl command for converting private key"
msgstr "秘密鍵を変換するための openssl コマンド"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can use the generated pair of keys instead of the keys used in this quickstart."
msgstr "このクイックスタートで使用される鍵の代わりに、生成された鍵のペアを使用できます。"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now we can generate a JWT to use with `TokenSecuredResource` endpoint. To do this, run the following command:"
msgstr "これで、`TokenSecuredResource` エンドポイントで使用する JWT を生成できます。これを行うには、次のコマンドを実行します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Sample JWT Generation Output"
msgstr "JWT 生成出力のサンプル"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The JWT string is the Base64 URL encoded string that has 3 parts separated by '.' characters.\n"
"First part - JWT headers, second part - JWT claims, third part - JWT signature."
msgstr "JWT 文字列は Base64 URL でエンコードされた文字列で、'.' で区切られた 3 つのパートで構成されています。最初のパートは JWT ヘッダー、2 つ目のパートは JWT クレーム、3 つ目のパートは JWT シグネチャーです。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Finally, Secured Access to /secured/roles-allowed"
msgstr "/secured/roles-allowed へのセキュリティーで保護されたアクセス"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now let's use this to make a secured request to the /secured/roles-allowed endpoint. Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr "これを使用して、/secured/roles-allowed エンドポイントにセキュリティーで保護されたリクエストを作成しましょう。Quarkus サーバーが引き続き開発モードで実行されていることを確認してから、次のコマンドを実行し、前の手順で生成された自分の JWT バージョンを使用していることを確認します。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "curl Command for /secured/roles-allowed With JWT"
msgstr "JWT を含む /secured/roles-allowed の curl コマンド"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Success! We now have:"
msgstr "成功! これで、以下が得られます"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "a non-anonymous caller name of jdoe@quarkus.io"
msgstr "jdoe@quarkus.io という非匿名の発信者名"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "an authentication scheme of Bearer"
msgstr "ベアラーの認証スキーム"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "a non-null JsonWebToken"
msgstr "非 null の JsonWebToken"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "birthdate claim value"
msgstr "birthdate クレームの値"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Using the JsonWebToken and Claim Injection"
msgstr "JsonWebToken とクレーム挿入の使用"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Now that we can generate a JWT to access our secured REST endpoints, let's see what more we can do with the `JsonWebToken`\n"
"interface and the JWT claims. The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal`\n"
"interface, and is in fact the type of the object that is returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call we\n"
"used previously. This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get\n"
"hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr "さて、安全なRESTエンドポイントにアクセスするためにJWTを生成できるようになったので、 `JsonWebToken` インターフェースとJWTクレームを使ってさらに何ができるかを見てみましょう。 `org.eclipse.microprofile.jwt.JsonWebToken` インターフェースは `java.security.Principal` インターフェースを拡張したもので、実際には前回使用した `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` 呼び出しによって返されるオブジェクトの型です。つまり、CDIを使用せず、RESTコンテナ `SecurityContext` にアクセスできるコードは、 `SecurityContext#getUserPrincipal()` をキャストすることで、呼び出し元の `JsonWebToken` インターフェースを取得することができます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification as well as arbitrary claims that may exist in the JWT."
msgstr "`JsonWebToken` インターフェイスは、基盤となる JWT のクレームにアクセスするためのメソッドを定義します。これは、JWT に存在する可能性のある {mp-jwt} 仕様および任意のクレームで必要な一般的クレームのアクセッサを提供します。。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint /secured/roles-allowed-admin which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr "すべての JWT クレームを挿入することもできます。`TokenSecuredResource` を別のエンドポイント /secured/roles-allowed-admin で拡張してみましょう。これは、(`JsonWebToken` から取得するのではなく) 挿入された `birthdate` クレームを使用します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject the JsonWebToken."
msgstr "ここでは、JsonWebToken を挿入します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject the `birthday` claim as `String` - this is why the `@RequestScoped` scope is now required."
msgstr "ここでは、`birthday` クレームを `String` として挿入します。これが `@RequestScoped` スコープが必要になった理由です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we use the injected `birthday` claim to build the final reply."
msgstr "ここでは、挿入された `birthday` クレームを使用して、最終的な応答を作成します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now generate the token again and run:"
msgstr "次に、トークンを再度生成して実行します。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化できます:"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "そして、 `java -jar target/quarkus-app/quarkus-run.jar` を使って実行します:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Runner jar Example"
msgstr "ランナー jar の例"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can also generate the native executable with:"
msgstr "ネイティブ実行可能ファイルを `./mvnw clean package -Pnative` で生成することもできます:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Native Executable Example"
msgstr "ネイティブ実行可能ファイル例"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Explore the Solution"
msgstr "ソリューションの探索"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The solution repository located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] contains all the versions we have worked through in this quickstart guide as well as some additional endpoints that illustrate subresources with injection of ``JsonWebToken``s and their claims into those using the CDI APIs.\n"
"We suggest that you check out the quickstart solutions and explore the `security-jwt-quickstart` directory to learn more about the {extension-name} extension features."
msgstr "`security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリ] にあるソリューションリポジトリには、このクイックスタートガイドで扱ったすべてのバージョンと、CDI API を使用した `JsonWebToken` のインジェクションとそのクレームのサブリソースを示す追加のエンドポイントが含まれています。クイックスタートのソリューションをチェックアウトし、 `security-jwt-quickstart` ディレクトリを探索し、{extension-name} エクステンションの機能についてさらに学ぶことをお勧めします。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Reference Guide"
msgstr "リファレンスガイド"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Supported Injection Scopes"
msgstr "サポートされている注入スコープ"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr "`org.eclipse.microprofile.jwt.JsonWebToken` が注入される場合、`@ApplicationScoped`、`@Singleton`、および `@RequestScoped` の外部 Bean 注入スコープがすべてサポートされます。また、現在のトークンが示されていることを確認するために、`JsonWebToken` の `@RequestScoped` スコープが適用されます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr "ただし、個々のトークンクレームが `String` などの単純な型として挿入される場合は、`@RequestScoped` を使用する必要があります。以下はその例です。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims in which case setting `@RequestScoped` is not necessary."
msgstr "注入された `JsonWebToken` を使用して個々のクレームにアクセスすることもできます。その場合、`@RequestScoped` を設定する必要はありません。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr "詳細については、 link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI 注入要件] を参照してください。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Supported Public Key Formats"
msgstr "サポートされている公開鍵形式"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Public Keys may be formatted in any of the following formats, specified in order of\n"
"precedence:"
msgstr "公開鍵には、優先順位に従って指定された次のいずれかの形式が適用さされます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "Public Key Cryptography Standards #8 (PKCS#8) PEM"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "JSON Web Key (JWK)"
msgstr "JSON Web Key (JWK)"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS)"
msgstr "JSON Web Key Set (JWKS)"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "JSON Web Key (JWK) Base64 URL エンコード"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "JSON Web Key Set (JWKS) Base64 URL エンコード"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Dealing with the verification keys"
msgstr "検証鍵の処理"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you need to verify the token signature using the asymmetric RSA or Elliptic Curve (EC) key then use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr "非対称 RSA または楕円曲線 (EC) 鍵を使用してトークンの署名を検証する必要がある場合は、`mp.jwt.verify.publickey.location` プロパティーを使用してローカルまたはリモートの検証鍵を参照します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`), for example, set it to `ES256` when working with the EC keys."
msgstr "`mp.jwt.verify.publickey.algorithm` を使用して検証アルゴリズムをカスタマイズします (デフォルトは `RS256`)。たとえば、EC 鍵を操作する場合は `ES256` に設定します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you need to verify the token signature using the symmetric secret key then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr "対称秘密鍵を使用してトークン署名を検証する必要がある場合は、JSON Web 鍵 (JWK) または JSON Web 鍵セット (JWK セット) 形式のいずれかを使用して、この秘密鍵を表す必要があります。以下はその例です。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"This secret key JWK will also need to be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr "この秘密鍵 JWK も、`smallrye.jwt.verify.key.location` で参照する必要があります。`smallrye.jwt.verify.algorithm` は `HS256`/`HS384`/`HS512` に設定する必要があります。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Parse and Verify JsonWebToken with JWTParser"
msgstr "JWTParser を使用した JsonWebToken の解析と検証"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "JWT トークンを挿入できない場合、たとえば、サービスリクエストペイロードに埋め込まれていたり、サービスエンドポイントが別の経路でトークンを取得する場合、`JWTParser` を使用できます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can also use it to customize the way the token is verified or decrypted. For example, one can supply a local `SecretKey`:"
msgstr "これを使用して、トークンの検証または復号化の方法をカスタマイズすることもできます。たとえば、ローカルの `SecretKey` を指定できます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Please also see the xref:add-smallrye-jwt[How to Add SmallRye JWT directly] section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr "また、 `quarkus-smallrye-jwt` が提供する `HTTP` サポート無しで `JWTParser` を使用する方法については、SmallRye xref:add-smallrye-jwt[JWT を直接追加する方法] を参照してください。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Token Decryption"
msgstr "トークン復号化"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"If your application needs to accept the tokens with the encrypted claims or the encrypted inner-signed claims, all you have to do is set\n"
"`smallrye.jwt.decrypt.key.location` pointing to the decryption key."
msgstr "アプリケーションが暗号化されたクレームや暗号化・内部署名付きクレームを持つトークンを受け入れる必要がある場合は、必要な作業は、復号化キーを指す `smallrye.jwt.decrypt.key.location` を設定することだけです。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"If this is the only key property that is set, the incoming token is expected to contain the encrypted claims only.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "この鍵プロパティのみが設定されている場合、受信トークンには暗号化クレームのみが含まれることが期待されます。 `mp.jwt.verify.publickey` または `mp.jwt.verify.publickey.location` のいずれかの検証プロパティも設定されている場合、受信トークンには暗号化・内部署名付きトークンが含まれることが期待されます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens fast."
msgstr "xref:security-jwt-build.adoc[SmallRye JWT を使用した JWT トークンの生成] を参照し、暗号化または内部署名されてから暗号化されたトークンをすぐに生成する方法を確認してください。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Custom Factories"
msgstr "カスタムファクトリー"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is used by default to parse and verify JWT tokens and convert them to `JsonWebToken` principals.\n"
"It uses `MP JWT` and `smallrye-jwt` properties listed in the `Configuration` section to verify and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` は、デフォルトで JWT トークンを解析および検証し、それらを `JsonWebToken` プリンシパルに変換するために使用されます。設定セクションにリストされている `MP JWT` および `smallrye-jwt` プロパティーを使用して、JWT トークンを検証およびカスタマイズします。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you need to provide your own factory, for example, to avoid verifying the tokens again which have already been verified by the firewall, then you can either use a `ServiceLoader` mechanism by providing a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource or simply have an `Alternative` CDI bean implementation like this one:"
msgstr "たとえば、ファイアウォールによってすでに検証されているトークンの再検証を回避するために独自のファクトリーを提供する必要がある場合は、`META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` リソースを提供すして `ServiceLoader` メカニズムを使用するか、単純に次のような `Alternative` CDI Bean 実装を持つことができます。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Token Propagation"
msgstr "トークンの伝播"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Please see the xref:security-openid-connect-client.adoc#token-propagation[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "下流サービスへのベアラアクセストークンの伝搬については、 xref:security-openid-connect-client.adoc#token-propagation[トークンの伝搬] の項を参照してください。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Testing"
msgstr "テスト"

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP based JsonWebKey (JWK) set then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "もし、 `mp.jwt.verify.publickey.location` が HTTPS または HTTP ベースの JsonWebKey (JWK) セットを指すように設定している場合は、 xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token結合テスト] `Wiremock` のセクションで説明したのと同じアプローチが使えますが、代わりに MP JWT 設定プロパティを使うように `application.properties` を変更するだけです："

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP based JsonWebKey (JWK) set then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "Keycloakと連携し、 `mp.jwt.verify.publickey.location` 、HTTPSまたはHTTPベースのJsonWebKey (JWK)セットを指すように設定している場合は、 xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token結合テスト] Keycloakセクションで説明したのと同じアプローチを使用できますが、代わりにMP JWT設定プロパティを使用するように `application.properties` を変更するだけです："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr "Keycloakが発行したトークンは、レルムエンドポイントアドレスが `iss` （発行者）クレームに設定されていることに注目してください。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If your Quarkus application is running in a docker container, it may share a network interface with a Keycloak docker container launched by DevServices for Keycloak, with the Quarkus application and Keycloak communicating with each other via an internal shared docker network."
msgstr "QuarkusアプリケーションがDockerコンテナで実行されている場合、DevServices for Keycloakによって起動されたKeycloak dockerコンテナとネットワークインターフェースを共有し、QuarkusアプリケーションとKeycloakは内部の共有Dockerネットワークを通じて互いに通信することができます。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "In such cases, use the following configuration instead:"
msgstr "そのような場合は、代わりに以下のような設定にしてください。"

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Local Public Key"
msgstr "ローカル公開鍵"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] `Local Public Key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token結合テスト] `Local Public Key` のセクションで説明したのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティを使用するように `application.properties` を変更するだけです："

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "TestSecurity annotation"
msgstr "TestSecurity アノテーション"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Add the following dependency:"
msgstr "以下の依存関係を追加します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "and write a test code like this one:"
msgstr "次のようなテストコードを作成します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "where `ProtectedResource` class may look like this:"
msgstr "ここで、`ProtectedResource` クラスは次のようになります。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Note that `@TestSecurity` annotation must always be used and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr "`@TestSecurity` アノテーションは常に使用する必要があり、その `user` プロパティーは `JsonWebToken.getName()` として返され、`roles` プロパティーは `JsonWebToken.getGroups()` として返されることに注意してください。`@JwtSecurity` アノテーションはオプションであり、追加のトークンクレームを設定するために使用できます。"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr "`@TestSecurity` と `@JwtSecurity` は、次のようにメタアノテーションで組み合わせることができます："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "これは、同じセキュリティ設定のセットを複数のテストメソッドで使用する必要がある場合に特に便利です。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "How to check the errors in the logs"
msgstr "ログでエラーを確認する方法"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr "トークンの検証または復号化エラーの詳細を確認するには、`io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` レベルのログを有効にしてください。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Proactive Authentication"
msgstr "プロアクティブ認証"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr "パブリックエンドポイントメソッド呼び出し時のトークン検証を省略したい場合は、 xref:security-proactive-authentication.adoc[プロアクティブ認証] を無効にします。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note that you can't access the injected `JsonWebToken` in the public methods if the token verification has not been done."
msgstr "トークンの検証が実行されていない場合、パブリックメソッドで挿入された `JsonWebToken` にアクセスできないことに注意してください。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "How to Add SmallRye JWT directly"
msgstr "SmallRye JWT を直接追加する方法"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "To xref:jwt-parser[parse and verify JsonWebToken with JWTParser], use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr "xref:jwt-parser[JWTParserでJsonWebTokenを解析・検証] するには、以下のような状況では、 `quarkus-smallrye-jwt` の代わりに `smallrye-jwt` を直接使用します:"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr "`HTTP` をサポートしていないQuarkusエクステンション、例えば `Quarkus GRPC` などを使用している場合。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus Amazon Lambda`."
msgstr "あなたが提供するエクステンション固有の `HTTP` は、 `quarkus-smallrye-jwt` や `Vert.x HTTP` が提供する `Quarkus Amazon Lambda` などのサポートと競合します。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr "まず、 `smallrye-jwt` の依存関係を追加することから始めます:"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "and update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr "さらに、`application.properties` を更新して、`smallrye-jwt` によって提供されるすべての CDI プロデューサーを次のように含めます。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Quarkus configuration"
msgstr "Quarkus の設定"

#: _versions/3.2/guides/security-jwt.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "MicroProfile JWT configuration"
msgstr "MicroProfile JWT の設定"

#: _versions/3.2/guides/security-jwt.adoc
msgid "Property Name"
msgstr "プロパティ名"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Default"
msgstr "デフォルト"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.publickey"
msgstr "mp.jwt.verify.publickey"

#: _versions/3.2/guides/security-jwt.adoc
msgid "none"
msgstr "none"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "The `mp.jwt.verify.publickey` config property allows the Public Key text itself to be supplied as a string.  The Public Key will be parsed from the supplied string in the order defined in the xref:supported-public-key-formats[Supported Public Key Formats] section."
msgstr "`mp.jwt.verify.publickey` 設定プロパティでは、公開鍵のテキストそのものを文字列として提供することができます。公開鍵は、 xref:supported-public-key-formats[サポートされる公開鍵の形式] セクションで定義された順序で、提供された文字列から解析されます。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.publickey.location"
msgstr "mp.jwt.verify.publickey.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property allows for an external or internal location of Public Key to be specified.  The value may be a relative path or a URL. If the value points to an HTTPS based JWK set then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`, see xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr "Config プロパティーを使用すると、公開鍵の外部または内部の場所を指定できます。値は相対パスまたは URL の場合があります。値が HTTPS ベースの JWK セットを指している場合、ネイティブモードで機能するには、`quarkus.ssl.native` プロパティーも `true` に設定する必要があります。詳細については xref:native-and-ssl.adoc[ネイティブ実行可能ファイルで SSL を使用する場合] を参照してください。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "mp.jwt.verify.publickey.algorithm"
msgstr "mp.jwt.verify.publickey.algorithm"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`RS256`"
msgstr "`RS256`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Signature algorithm. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "署名アルゴリズム。 `ES256` に設定して、楕円曲線署名アルゴリズムをサポートします。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.decrypt.key.location"
msgstr "mp.jwt.decrypt.key.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified."
msgstr "Config プロパティーを使用すると、秘密復号化鍵の外部または内部の場所を指定できます。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.issuer"
msgstr "mp.jwt.verify.issuer"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server will accept as valid."
msgstr "Config プロパティーは、サーバーが有効として受け入れる JWT の `iss` (発行者) クレームの値を指定します。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "mp.jwt.verify.audiences"
msgstr "mp.jwt.verify.audiences"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma separated list of the audiences that a token `aud` claim may contain."
msgstr "トークン `aud` クレームに含まれる可能性のあるオーディエンスのコンマ区切りリスト。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.clock.skew"
msgstr "mp.jwt.verify.clock.skew"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`60`"
msgstr "`60`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr "トークンの有効期限と年齢確認時に使用されるクロックスキュー（秒）。トークンの有効期限切れ後、現在時刻がこのプロパティで指定された秒数以内であれば、期限切れのトークンは受理されます。デフォルト値は60秒です。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "mp.jwt.verify.token.age"
msgstr "mp.jwt.verify.token.age"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr "トークン発行時刻 `iat` から経過してはならない秒数です。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.token.header"
msgstr "mp.jwt.token.header"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`Authorization`"
msgstr "`Authorization`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property if another header such as `Cookie` is used to pass the token."
msgstr "`Cookie` などの別のヘッダーを使用してトークンを渡す場合は、このプロパティーを設定します。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "mp.jwt.token.cookie"
msgstr "mp.jwt.token.cookie"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Name of the cookie containing a token. This property will be effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr "トークンを含む Cookie の名前。このプロパティーは、`mp.jwt.token.header` が `Cookie` に設定されている場合にのみ有効になります。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Additional SmallRye JWT configuration"
msgstr "追加の SmallRye JWT 設定"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "SmallRye JWT provides more properties which can be used to customize the token processing:"
msgstr "SmallRye JWTには、トークン処理をカスタマイズするために使用できる、より多くのプロパティーが用意されています。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.key.location"
msgstr "smallrye.jwt.verify.key.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "NONE"
msgstr "NONE"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Location of the verification key which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' will be ignored if this property is set."
msgstr "公開鍵と秘密鍵の両方を指すことができる検証鍵の場所。秘密鍵は JWK 形式でのみ使用できます。このプロパティーが設定されている場合、'mp.jwt.verify.publickey.location' は無視されることに注意してください。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.verify.algorithm"
msgstr "smallrye.jwt.verify.algorithm"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Signature algorithm. This property should only be used for setting a required symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr "署名アルゴリズム。このプロパティーは、`HS256` などの必要な対称アルゴリズムを設定するためにのみ使用する必要があります。`ES256` などの非対称アルゴリズムの設定に使用することは推奨されません。代わりに 'mp.jwt.verify.publickey.algorithm' を使用してください。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.key-format"
msgstr "smallrye.jwt.verify.key-format"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`ANY`"
msgstr "`ANY`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "このプロパティーを `PEM_KEY`、`PEM_CERTIFICATE`、`JWK`、`JWK_BASE64URL` などの特定のキー鍵形式に設定して、検証鍵のロード方法を最適化します。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.relax-key-validation"
msgstr "smallrye.jwt.verify.relax-key-validation"

#: _versions/3.2/guides/security-jwt.adoc
msgid "false"
msgstr "false"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Relax the validation of the verification keys, setting this property to `true` will allow public RSA keys with the length less than 2048 bit."
msgstr "検証鍵の検証を緩和します。このプロパティーを `true` に設定すると、2048 ビット未満の長さの公開 RSA 鍵が許可されます。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.certificate-thumbprint"
msgstr "smallrye.jwt.verify.certificate-thumbprint"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "If this property is enabled then a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats in this case. JWK keys must have a 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "このプロパティーが有効になっている場合、署名されたトークンには 'x5t' または 'x5t#S256' X509Certificatex5t 拇印ヘッダーが含まれている必要があります。この場合、検証鍵は JWK または PEM 証明書鍵形式でのみ使用できます。JWK 鍵には、'x5c' (Base64 でエンコードされた X509Certificate) プロパティーが設定されている必要があります。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.token.header"
msgstr "smallrye.jwt.token.header"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property if another header such as `Cookie` is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr "`Cookie` などの別のヘッダーを使用してトークンを渡す場合は、このプロパティーを設定します。このプロパティーは推奨されていません。'mp.jwt.token.header' を使用してください。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.token.cookie"
msgstr "smallrye.jwt.token.cookie"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Name of the cookie containing a token. This property will be effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use 'mp.jwt.token.cookie`."
msgstr "トークンを含む Cookie の名前。このプロパティーは、`smallrye.jwt.token.header` が `Cookie` に設定されている場合にのみ有効になります。このプロパティーは推奨されていません。'mp.jwt.token.cookie` を使用してください。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.always-check-authorization"
msgstr "smallrye.jwt.always-check-authorization"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property to `true` for `Authorization` header be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "`smallrye.jwt.token.header` が `Cookie` に設定されていても、名前が `smallrye.jwt.token.cookie` の Cookie が存在しない場合、`Authorization` ヘッダーがチェックされるようにこのプロパティーを `true` に設定します。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.token.schemes"
msgstr "smallrye.jwt.token.schemes"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma-separated list containing an alternative single or multiple schemes, for example, `DPoP`."
msgstr "`DPoP` などの単一または複数の代替スキームを含むコンマ区切りのリスト。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.token.kid"
msgstr "smallrye.jwt.token.kid"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Key identifier. If it is set then the verification JWK key as well every JWT token must have a matching `kid` header."
msgstr "鍵の識別子。設定されている場合、検証 JWK 鍵とすべての JWT トークンには、一致する `kid` ヘッダーが必要です。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.time-to-live"
msgstr "smallrye.jwt.time-to-live"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "The maximum number of seconds that a JWT may be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr "JWT を使用するために発行できる最大秒数。事実上、JWT の有効期限と発行日との差はこの値を超えてはなりません。このプロパティーを正でない値に設定すると、トークンが有効な 'iat' (で発行された) クレームを持つための要件が緩和されます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.require.named-principal"
msgstr "smallrye.jwt.require.named-principal"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`true`"
msgstr "`true`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "If an application relies on `java.security.Principal` returning a name then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property will result in SmallRye JWT throwing an exception if none of these claims is available for the application code to reliably deal with a non-null `Principal` name."
msgstr "アプリケーションが名前を返す `java.security.Principal` に依存している場合、トークンには `upn` または `preferred_username` または `sub` クレームが設定されている必要があります。このプロパティーを設定すると、アプリケーションコードが null 以外の `Principal` 名を確実に処理するためにこれらのクレームのいずれも使用できない場合に、SmallRye JWT は例外を出力します。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.path.sub"
msgstr "smallrye.jwt.path.sub"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Path to the claim containing the subject name. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "件名を含むクレームへのパス。これはトップレベルの JSON オブジェクトから始まり、複数のセグメントを含めることができます。各セグメントは JSON オブジェクト名のみを表します (例: `realms/subject`)。このプロパティーは、トークンに sub クレームがないが、サブジェクトが別のクレームに設定されている場合に使用できます。namespace で修飾されたクレームには二重引用符を使用します。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.claims.sub"
msgstr "smallrye.jwt.claims.sub"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively this property can be used to customize `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "現在のトークンに使用可能な標準またはカスタムの `sub` クレームがない場合に、このプロパティーを使用して、デフォルトのサブクレーム値を設定できます。事実上、このプロパティーを使用して、`upn`、`preferred_username`、`sub`クレームが設定されていない場合に `java.security.Principal` 名をカスタマイズできます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.path.groups"
msgstr "smallrye.jwt.path.groups"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Path to the claim containing the groups. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "グループを含むクレームへのパス。これはトップレベルの JSON オブジェクトから始まり、複数のセグメントを含めることができます。各セグメントは JSON オブジェクト名のみを表します (例: `realm/groups`)。このプロパティーは、トークンに 'groups' クレームがないが、グループが別のクレームに設定されている場合に使用できます。namespace で修飾されたクレームには二重引用符を使用します。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.groups-separator"
msgstr "smallrye.jwt.groups-separator"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "' '"
msgstr "' '"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Separator for splitting a string which may contain multiple group values. It will only be used if the `smallrye.jwt.path.groups` property points to a custom claim whose value is a string. The default value is a single space because a standard OAuth2 `scope` claim may contain a space separated sequence."
msgstr "複数のグループ値を含む可能性のある文字列を分割するためのセパレーター。これは、`smallrye.jwt.path.groups` プロパティーが値が文字列のカスタムクレームを指している場合にのみ使用されます。標準の OAuth2 `scope` クレームにはスペースで区切られたシーケンスが含まれている可能性があるため、デフォルト値はスペース 1 個です。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.claims.groups"
msgstr "smallrye.jwt.claims.groups"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "このプロパティーを使用して、現在のトークンに使用可能な標準またはカスタムのグループクレームがない場合に、デフォルトのグループクレーム値を設定できます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.jwks.refresh-interval"
msgstr "smallrye.jwt.jwks.refresh-interval"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "60"
msgstr "60"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "JWK cache refresh interval in minutes. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr "JWK キャッシュの更新間隔 (分単位)。`mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指し、正の `max-age` パラメーター値を持つ HTTP `Cache-Control` レスポンスヘッダーが JWK HTTPS エンドポイントから返されない限り無視されます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.jwks.forced-refresh-interval"
msgstr "smallrye.jwt.jwks.forced-refresh-interval"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "30"
msgstr "30"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Forced JWK cache refresh interval in minutes which is used to restrict the frequency of the forced refresh attempts which may happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL based JWK set."
msgstr "強制 JWK キャッシュ更新間隔 (分単位)。現在のトークンの `kid` ヘッダーと一致する `kid` プロパティーを持つ JWK キーがキャッシュにないためにトークンの検証が失敗した場合に発生する可能性がある強制更新の試行頻度を制限するために使用されます。`mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指していない限り、無視されます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.expiration.grace"
msgstr "smallrye.jwt.expiration.grace"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "0"
msgstr "0"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Expiration grace in seconds. By default an expired token will still be accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr "有効期限を秒単位で指定します。デフォルトでは、現在時刻がトークンの有効期限から1分以内であれば、期限切れのトークンはまだ受け入れられます。このプロパティは非推奨です。代わりに `mp.jwt.verify.clock.skew` を使用してください。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.verify.aud"
msgstr "smallrye.jwt.verify.aud"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma separated list of the audiences that a token `aud` claim may contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr "トークン `aud` クレームに含まれる可能性のあるオーディエンスのコンマ区切りリスト。このプロパティーは推奨されません。`mp.jwt.verify.audiences` を使用してください。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.required.claims"
msgstr "smallrye.jwt.required.claims"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma separated list of the claims that a token must contain."
msgstr "トークンに含める必要のあるクレームのコンマ区切りリスト。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.decrypt.key.location"
msgstr "smallrye.jwt.decrypt.key.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified. This property is deprecated - use 'mp.jwt.decrypt.key.location'."
msgstr "Config プロパティーを使用すると、秘密復号化鍵の外部または内部の場所を指定できます。このプロパティーは推奨されません。'mp.jwt.decrypt.key.location' を使用してください。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.decrypt.algorithm"
msgstr "smallrye.jwt.decrypt.algorithm"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`RSA_OAEP`"
msgstr "`RSA_OAEP`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption algorithm."
msgstr "復号化アルゴリズム。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.decrypt.key"
msgstr "smallrye.jwt.decrypt.key"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption key supplied as a string."
msgstr "文字列として提供される復号化キー。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.token.decryption.kid"
msgstr "smallrye.jwt.token.decryption.kid"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "復号化キー識別子。設定されている場合、復号化 JWK キーとすべての JWT トークンには、一致する `kid` ヘッダーが必要です。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.client.tls.certificate.path"
msgstr "smallrye.jwt.client.tls.certificate.path"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Path to TLS trusted certificate which may need to be configured if the keys have to be fetched over `HTTPS`."
msgstr "キーを `HTTPS` 経由でフェッチする必要がある場合は、TLS の信頼できる証明書へのパスを設定する必要があります。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.client.tls.trust-all"
msgstr "smallrye.jwt.client.tls.trust-all"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr "すべてのホスト名を信頼します。キーを `HTTPS` 経由でフェッチする必要があり、このプロパティーが `true` に設定されている場合、デフォルトですべてのホスト名が信頼されます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.client.tls.hosts"
msgstr "smallrye.jwt.client.tls.hosts"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr "信頼できるホスト名のセット。キーを `HTTPS` 経由でフェッチする必要があり、`smallrye.jwt.client.tls.trust-all` が `false` に設定されている場合、このプロパティーを使用して信頼できるホスト名を設定できます。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.http.proxy.host"
msgstr "smallrye.jwt.http.proxy.host"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy host."
msgstr "HTTP プロキシーホスト。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.http.proxy.port"
msgstr "smallrye.jwt.http.proxy.port"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "80"
msgstr "80"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy port."
msgstr "HTTP プロキシーポート。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.keystore.type"
msgstr "smallrye.jwt.keystore.type"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`JKS`"
msgstr "`JKS`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set then the file name will be checked to determine the keystore type before defaulting to `JKS`."
msgstr "`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、このプロパティーを使用してキーストアタイプをカスタマイズできます。設定されていない場合は、ファイル名がチェックされ、`JKS` がデフォルトで設定される前にキーストアタイプが決定されます。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.keystore.provider"
msgstr "smallrye.jwt.keystore.provider"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、このプロパティーを使用して `KeyStore` プロバイダーをカスタマイズできます。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.keystore.password"
msgstr "smallrye.jwt.keystore.password"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` then this property has be set."
msgstr "キーストアのパスワード。`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` の場合、このプロパティーが設定されています。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.keystore.verify.key.alias"
msgstr "smallrye.jwt.keystore.verify.key.alias"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property has to be set to identify a public verification key which will be extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr "このプロパティーは、`mp.jwt.verify.publickey.location`が `KeyStore`ファイルを指している場合に、`KeyStore` から抽出される公開検証鍵を一致する証明書から識別するために設定する必要があります。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.keystore.decrypt.key.alias"
msgstr "smallrye.jwt.keystore.decrypt.key.alias"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、プライベートな復号鍵を特定するために設定する必要があります。"

#: _versions/3.2/guides/security-jwt.adoc
msgid "smallrye.jwt.keystore.decrypt.key.password"
msgstr "smallrye.jwt.keystore.decrypt.key.password"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property may be set if a private decryption key's password in `KeyStore` is different to `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指しているときに、 `KeyStore` にある秘密鍵のパスワードが `smallrye.jwt.keystore.password` と異なる場合に設定されることがあります。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[JSONウェブトークン (JWT) のビルド、署名、暗号化]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[認証メカニズムの組み合わせ]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
