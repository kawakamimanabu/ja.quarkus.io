msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Using OpenTelemetry"
msgstr "OpenTelemetryの使用"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] (OTel) to provide\n"
"distributed tracing for interactive web applications."
msgstr "このガイドでは、Quarkusアプリケーションで link:https://opentelemetry.io/[OpenTelemetry] （OTel）を利用して、インタラクティブなWebアプリケーションに分散トレースを提供する方法について説明します。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "OpenTelemetry Metrics and Logging are not yet supported."
msgstr "OpenTelemetry MetricsとLoggingはまだサポートされていません。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Quarkus now supports the OpenTelemetry Autoconfiguration for Traces. The configurations match what you can see at\n"
"https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure]\n"
"with the `quarkus.*` prefix."
msgstr "QuarkusがOpenTelemetry Autoconfiguration for Tracesをサポートするようになりました。設定は、 link:https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure] で確認できるものと一致し、 `quarkus.*` プレフィックスを使用しています。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Extensions and the libraries they provide, are directly instrumented in Quarkus. The *use of the https://opentelemetry.io/docs/instrumentation/java/automatic/[OpenTelemetry Agent] is not needed nor recommended* due to context propagation issues between imperative and reactive libraries."
msgstr "エクステンションとそれが提供するライブラリは、Quarkusで直接インストルメント化されます。命令型ライブラリとリアクティブ型ライブラリの間のコンテキスト伝播の問題があるため、 *link:https://opentelemetry.io/docs/instrumentation/java/automatic/[OpenTelemetryエージェント] の使用は必要なく、推奨もされていません* 。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr "このガイドでは、分散トレースを実証するための簡単なRESTアプリケーションを作成します。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、すぐに完成した例に飛んでも構いません。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The solution is located in the `opentelemetry-quickstart` link:{quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr "ソリューションは `opentelemetry-quickstart` link:{quickstarts-tree-url}/opentelemetry-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"This command generates the Maven project and imports the `quarkus-opentelemetry` extension,\n"
"which includes the default OpenTelemetry support,\n"
"and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr "このコマンドはMavenプロジェクトを生成し、 `quarkus-opentelemetry` エクステンションをインポートします。このエクステンションには、デフォルトのOpenTelemetryサポートと、 https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]のgRPC spanエクスポーターが含まれています。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "Quarkusプロジェクトがすでに設定されている場合、プロジェクトのベースディレクトリで次のコマンドを実行することで、 `quarkus-opentelemetry` エクステンションをプロジェクトに追加できます："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr "`src/main/java/org/acme/opentelemetry/TracedResource.java` のファイルを開くと、以下の内容が表示されます。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Notice that there is no tracing specific code included in the application. By default, requests sent to this\n"
"endpoint will be traced without any required code changes."
msgstr "このアプリケーションには、トレースのためのコードが含まれていないことに注意してください。デフォルトでは、このエンドポイントに送信されたリクエストは、コードの変更を必要とせずにトレースされます。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "There are no mandatory configurations for the extension to work."
msgstr "エクステンションを動作させるために必須の設定はありません。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "If you need to change any of the default property values, here is an example on how to configure the default OTLP gRPC Exporter within the application, using the `src/main/resources/application.properties` file:"
msgstr "デフォルトのプロパティ値を変更する必要がある場合、 `src/main/resources/application.properties` ファイルを使用して、アプリケーション内でデフォルトの OTLP gRPC Exporter を設定する方法の例を以下に示します:"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "All spans created from the application will include an OpenTelemetry `Resource` indicating the span was created by the `myservice` application. If not set, it will default to the artifact id."
msgstr "このアプリケーションから作成されたすべてのスパンには、そのスパンが `myservice` アプリケーションによって作成されたことを示す OpenTelemetry `Resource` が含まれます。設定されていない場合は、デフォルトでアーティファクトIDが設定されます。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "gRPC endpoint to send spans. If not set, it will default to `http://localhost:4317`."
msgstr "スパンを送信するためのgRPCエンドポイント。設定されていない場合、デフォルトは `http://localhost:4317` ."

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Optional gRPC headers commonly used for authentication"
msgstr "認証によく使われるオプションのgRPCヘッダー"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Add tracing information into log messages."
msgstr "ログメッセージにトレース情報を追加する。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "You can also only put the trace info into the access log. In this case you must omit the info in the console log format."
msgstr "また、アクセスログにのみトレース情報を記載することもできます。この場合、コンソールログ形式の情報を省略する必要があります。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "All configurations have been updated from `quarkus.opentelemetry.\\*` -> `quarkus.otel.*`"
msgstr "すべての設定は、 `quarkus.opentelemetry.*` から `quarkus.otel.*` に更新されています。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The legacy configurations are now deprecated but will still work during a transition period."
msgstr "レガシー設定は現在非推奨となっていますが、移行期間中は引き続き使用できます。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The first step is to configure and start the https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] to receive, process and export telemetry data to https://www.jaegertracing.io/[Jaeger] that will display the captured traces."
msgstr "最初のステップは、テレメトリデータを受信して処理し、キャプチャしたトレースを表示する link:https://www.jaegertracing.io/[Jaeger]にエクスポートするための link:https://opentelemetry.io/docs/collector/[OpenTelemetry Collector]の設定と起動です。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Jaeger-all-in-one includes the Jaeger agent, an OTel collector, and the query service/UI.\n"
"You do not need to install a separated collector. You can directly send the trace data to Jaeger (after enabling OTLP receivers there, see e.g. this\n"
"https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[blog entry] for details)."
msgstr "Jaeger-all-in-oneは、Jaegerエージェント、OTelコレクター、クエリサービス/UIを含みます。分離型コレクタをインストールする必要はありません。トレースデータを直接Jaegerに送ることができます（OTLPレシーバーを有効にした後、詳細はこちらの link:https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[ブログエントリ] などをご覧ください）。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Start the OpenTelemetry Collector and Jaeger system via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "`docker-compose up -d` OpenTelemetry CollectorとJaegerシステムを、以下の `docker-compose.yml` ファイルを介して起動します。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "You should remove the optional ports you don't need them."
msgstr "オプションのポートは必要ないものは外しておいた方が良いです。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr "これでアプリケーションを実行する準備が整いました。トレーサーの設定に `application.properties` を使用している場合:"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "or if configuring the OTLP gRPC endpoint via JVM arguments:"
msgstr "または、JVM引数でOTLP gRPCエンドポイントを設定する場合:"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "With the OpenTelemetry Collector, the Jaeger system and the application running, you can make a request to the provided endpoint:"
msgstr "OpenTelemetry Collector、Jaegerシステム、アプリケーションが動作している状態で、提供されているエンドポイントにリクエストを出すことができます。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "When the first request has been submitted, you will be able to see the tracing information in the logs:"
msgstr "最初のリクエストが送信された時点で、ログにトレース情報が表示されるようになります:"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr "その後、 link:http://localhost:16686[Jaeger UI] にアクセスしてトレース情報を確認します。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Hit `CTRL+C` or type `q` to stop the application."
msgstr "`CTRL+C` を押すか、 `q` と入力して、アプリケーションを停止してください。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "JDBC"
msgstr "JDBC"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] will add a span for each JDBC queries done by your application, to enable it, add the following dependency to your build file:"
msgstr "link:https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBCインスツルメンテーション]は、アプリケーションによって実行される各JDBCクエリのためにスパンを追加します。これを有効にするには、次の依存関係をビルドファイルに追加します。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "As it uses a dedicated JDBC datasource wrapper, you must enable telemetry for your datasource:"
msgstr "専用のJDBCデータソースラッパーを使用するため、データソースのテレメトリーを有効にする必要があります:"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional configuration"
msgstr "追加設定"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Some use cases will require custom configuration of OpenTelemetry.\n"
"These sections will outline what is necessary to properly configure it."
msgstr "一部のユースケースでは、OpenTelemetryのカスタム設定が必要になります。 これらのセクションでは、適切に構成するために必要なものについて概説します。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "ID Generator"
msgstr "IDジェネレーター"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"The OpenTelemetry extension will use by default a random https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID Generator]\n"
"when creating the trace and span identifier."
msgstr "OpenTelemetry エクステンションでは、トレースおよびスパンの識別子を作成する際に、デフォルトでランダムな link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID ジェネレーター]を使用します。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Some vendor-specific protocols need a custom ID Generator, you can override the default one by creating a producer.\n"
"The OpenTelemetry extension will detect the `IdGenerator` CDI bean and will use it when configuring the tracer producer."
msgstr "ベンダー固有のプロトコルの中には、カスタム ID ジェネレーターを必要とするものがありますが、プロデューサーを作成することで、デフォルトの ID ジェネレーターを上書きすることができます。OpenTelemetryエクステンションは、 `IdGenerator` CDI Beanを検出し、トレーサープロデューサーを構成する際にそれを使用します。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Propagators"
msgstr "プロパゲーター"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"OpenTelemetry propagates cross-cutting concerns through https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagators] that will share an underlying `Context` for storing state and accessing\n"
"data across the lifespan of a distributed transaction."
msgstr "OpenTelemetry は、 https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[プロパゲーター] を介して分野横断的な関心事を伝播し、状態を保存するための基になる\"コンテキスト\"を共有します 分散トランザクションの存続期間全体にわたってデータにアクセスします。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"By default, the OpenTelemetry extension enables the https://www.w3.org/TR/trace-context/[W3C Trace Context] and the https://www.w3.org/TR/baggage/[W3C Baggage]\n"
"propagators, you can however choose any of the supported OpenTelemetry propagators by setting the `propagators` config that is described in the xref:configuration-reference[OpenTelemetry Configuration Reference]."
msgstr "デフォルトでは、OpenTelemetryエクステンションは link:https://www.w3.org/TR/trace-context/[W3C Trace Context] と link:https://www.w3.org/TR/baggage/[W3C Baggage] プロパゲーターを有効にしますが、OpenTelemetry xref:configuration-reference[設定リファレンス] で説明されている `propagators` 設定を設定すれば、サポートされているOpenTelemetryプロパゲータのどれかを選択することができます。"

#. type: Title ====
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional Propagators"
msgstr "追加プロパゲーター"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"The `b3`, `b3multi`, `jaeger` and `ottrace` propagators will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]\n"
"extension to be added as a dependency to your project."
msgstr "`b3`, `b3multi`, `jaeger`, `ottrace` のプロパゲータは、プロジェクトに link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]エクステンションを依存関係として追加する必要があります。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"The `xray` propagator will need the https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-xray-propagator[aws]\n"
"extension to be added as a dependency to your project."
msgstr "`xray` プロパゲーターは、お客様のプロジェクトに link:https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-xray-propagator[aws] エクステンションを依存関係として追加することを必要とします。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Resource"
msgstr "リソース"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[resource] is a representation\n"
"of the entity that is producing telemetry, it adds attributes to the exported trace to characterize who is producing the trace."
msgstr "link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[リソース]は、テレメトリを生成しているエンティティの表現であり、誰がトレースを生成しているかを特徴づけるために、エクスポートされたトレースに属性を追加します。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"You can add attributes by setting the `resource-attributes` tracer config that is described in the xref:configuration-reference[OpenTelemetry Configuration Reference].\n"
"Since this property can be overridden at runtime, the OpenTelemetry extension will pick up its value following the order of precedence that\n"
"is described in the xref:config-reference.adoc#configuration-sources[Quarkus Configuration Reference]."
msgstr "OpenTelemetry xref:configuration-reference[設定リファレンス] に記載されている `resource-attributes` tracer configを設定することで、属性を追加することができます。このプロパティは実行時にオーバーライドできるため、OpenTelemetryエクステンションは、 xref:config-reference.adoc#configuration-sources[Quarkus 設定リファレンス] に記載されている優先順位に従って値をピックアップします。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"If by any means you need to use a custom resource or one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create multiple resource producers. The OpenTelemetry extension will detect the `Resource` CDI beans and will merge them when configuring the tracer producer."
msgstr "カスタムリソースや link:https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]で提供されているリソースを使用する必要がある場合は、複数のリソースプロデューサーを作成することができます。OpenTelemetryエクステンションは、 `Resource` CDI Beanを検出し、トレーサー・プロデューサーを構成する際にそれらをマージします。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Sampler"
msgstr "サンプラー"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[sampler] decides whether\n"
"a trace should be sampled and exported, controlling noise and overhead by reducing the number of sample of traces collected and sent\n"
"to the collector."
msgstr "link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[サンプラー]は、トレースをサンプリングしてエクスポートするかどうかを決定し、収集してコレクターに送信するトレースのサンプル数を減らすことで、ノイズやオーバーヘッドを制御します。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"You can set a https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[built-in sampler]\n"
"simply by setting the desired sampler config described in the xref:configuration-reference[OpenTelemetry Configuration Reference]."
msgstr "OpenTelemet xref:configuration-reference[ry Configuration Reference] に記載されている目的のサンプラー設定を設定するだけで、 link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[内蔵サンプラー] を設定することができます。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Quarkus 3.0 introduced breaking changes on the configuration."
msgstr "Quarkus 3.0では、設定に大きな変更が加えられました。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid "Sampler related property names and values change to comply with the latest Java OpenTelemetry SDK. During a transition period it will be possible to set the new configuration values in the old property because we are mapping  `quarkus.opentelemetry.tracer.sampler` -> `quarkus.otel.traces.sampler`."
msgstr "最新のJava OpenTelemetry SDKに準拠するため、Sampler関連のプロパティ名と値が変更されます。移行期間中は、 `quarkus.opentelemetry.tracer.sampler` → `quarkus.otel.traces.sampler` をマッピングしているため、古いプロパティに新しい設定値を設定することが可能です。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "If the sampler is parent based, there is no need to set, the now dropped property, `quarkus.opentelemetry.tracer.sampler.parent-based`."
msgstr "サンプラーが親ベースである場合、現在廃止されたプロパティ `quarkus.opentelemetry.tracer.sampler.parent-based` を設定する必要はありません。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The values you need to set on `quarkus.opentelemetry.tracer.sampler` are now:"
msgstr "`quarkus.opentelemetry.tracer.sampler` で設定する必要がある値は、現在、以下の通りです:"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Old Sampler config value"
msgstr "旧サンプラーの設定値"

#: _versions/3.2/guides/opentelemetry.adoc
msgid "New Sampler config value"
msgstr "新サンプラーの設定値"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "New Sampler config value (Parent based)"
msgstr "新サンプラーの設定値（親ベース）"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`on`"
msgstr "`on`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`always_on`"
msgstr "`always_on`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`parentbased_always_on`"
msgstr "`parentbased_always_on`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`off`"
msgstr "`off`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`always_off`"
msgstr "`always_off`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`parentbased_always_off`"
msgstr "`parentbased_always_off`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`ratio`"
msgstr "`ratio`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`traceidratio`"
msgstr "`traceidratio`"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "`parentbased_traceidratio`"
msgstr "`parentbased_traceidratio`"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "If you need to use a custom sampler there are now 2 different ways:"
msgstr "カスタムサンプラーを使用する必要がある場合、現在2種類の方法があります:"

#. type: Title ====
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Sampler CDI Producer"
msgstr "サンプラー CDI プロデューサー"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
msgid "You can create a sampler CDI producer. The Quarkus OpenTelemetry extension will detect the `Sampler` CDI bean and will use it when configuring the Tracer."
msgstr "サンプラー CDI プロデューサーを作成できます。Quarkus OpenTelemetry エクステンションは `Sampler` CDI Bean を検出し、Tracer を設定するときにそれを使用します。"

#. type: Title ====
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "OTel Sampler SPI"
msgstr "OTelサンプラーSPI"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"This will use the SPI hooks available with the OTel Autoconfiguration.\n"
"You can create a simple Sampler class:"
msgstr ""
"これにより、OTel 自動設定で使用可能な SPI フックが使用されます。\n"
"シンプルな Sampler クラスを作成できます。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Then a Sampler Provider:"
msgstr "次に Sampler Provider を作成できます。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Write the SPI loader text file at `resources/META-INF/services` with name `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider` containing the full qualified name of the `CustomSPISamplerProvider` class."
msgstr "`resources/META-INF/services` に `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider` という名前の SPI ローダーテキストファイルを作成し、その中に `CustomSPISamplerProvider` クラスの完全修飾名を記述します。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Then activate on the configuration:"
msgstr "次に、設定を有効にします。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "As you can see, CDI is much simpler to work with."
msgstr "ご覧のとおり、CDI の方が操作がはるかに簡単です。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional instrumentation"
msgstr "追加の計器"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.\n"
"These sections will outline what is necessary to propagate traces across process boundaries."
msgstr "Quarkusエクステンションの中には、トレースが後続の実行に伝搬されることを保証するために追加のコードを必要とするものがあります。これらのセクションでは、プロセスの境界を越えてトレースを伝搬するために必要なことを説明します。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr "このセクションで説明されている計器は、Quarkusでテストされており、標準モードとネイティブモードの両方で動作します。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "CDI"
msgstr "CDI"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Annotating a method in any CDI aware bean with the `io.opentelemetry.instrumentation.annotations.WithSpan`\n"
"annotation will create a new Span and establish any required relationships with the current Trace context."
msgstr ""
"CDI 対応の任意の Bean のメソッドに `io.opentelemetry.instrumentation.annotations.WithSpan` \n"
"アノテーションを付与すると、新しい Span が作成され、現在の Trace コンテキストとの必要な関係が確立されます。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Method parameters can be annotated with the `io.opentelemetry.instrumentation.annotations.SpanAttribute` annotation to\n"
"indicate which method parameters should be part of the Trace."
msgstr "メソッドパラメータには、 `io.opentelemetry.instrumentation.annotations.SpanAttribute` アノテーションを付けることができ、どのメソッドパラメータがトレースの一部となるかを示すことができます。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Example:"
msgstr "例:"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Available OpenTelemetry CDI injections"
msgstr "使用可能なOpenTelemetry CDI依存関係注入"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"As per MicroProfile Telemetry Tracing specification, Quarkus supports the CDI injections of the\n"
"following classes:"
msgstr "MicroProfile Telemetry Tracingの仕様に基づき、Quarkusは以下のクラスのCDI依存関係注入をサポートしています。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "`io.opentelemetry.api.OpenTelemetry`"
msgstr "`io.opentelemetry.api.OpenTelemetry`"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "`io.opentelemetry.api.trace.Tracer`"
msgstr "`io.opentelemetry.api.trace.Tracer`"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "`io.opentelemetry.api.trace.Span`"
msgstr "`io.opentelemetry.api.trace.Span`"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "`io.opentelemetry.api.baggage.Baggage`"
msgstr "`io.opentelemetry.api.baggage.Baggage`"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "You can inject these classes in any CDI enabled bean. For instance, the `Tracer` is particularly useful to start custom spans:"
msgstr "これらのクラスは、CDIが有効なBeanに注入することができます。例えば、 `Tracer` は、カスタムスパンを開始するために特に有用です。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "SmallRye Reactive Messaging - Kafka"
msgstr "SmallRye Reactive Messaging - Kafka"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"When using the SmallRye Reactive Messaging extension for Kafka,\n"
"we are able to propagate the span into the Kafka Record with:"
msgstr "SmallRye Reactive Messaging extension for Kafkaを使用すると、スパンをKafka Recordに伝搬させることができます。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"The above creates a `TracingMetadata` object we can add to the `Message` being produced,\n"
"which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr "上記は、生成されている `Message` に追加できる `TracingMetadata` オブジェクトを作成し、OpenTelemetry `Context` を取得して、伝播のために現在のスパンを抽出しています。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Exporters"
msgstr "エクスポーター"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Quarkus OpenTelemetry defaults to the standard OTLP exporter defined in OpenTelemetry."
msgstr "Quarkus OpenTelemetryのデフォルトは、OpenTelemetryで定義されている標準的なOTLPエクスポーターです。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Additional exporters will be available in the Quarkiverse https://github.com/quarkiverse/quarkus-opentelemetry-exporter/blob/main/README.md[quarkus-opentelemetry-exporter] project."
msgstr "追加のエクスポーターは、Quarkiverseの link:https://github.com/quarkiverse/quarkus-opentelemetry-exporter/blob/main/README.md[quarkus-opentelemetry-exporter] プロジェクトで利用できるようになる予定です。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "OpenTelemetry Configuration Reference"
msgstr "OpenTelemetry 設定リファレンス"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Quarkus supports the OpenTelemetry Autoconfiguration for Traces.\n"
"The configurations match what you can see at\n"
"https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure]\n"
"adding the usual `quarkus.*` prefix."
msgstr "Quarkusは、OpenTelemetryのAutoconfiguration for Tracesをサポートしています。設定は、 link:https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure] で確認できるものと一致し、 `quarkus.*` プレフィックスを追加しています。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Quarkus OpenTelemetry configuration properties now have the `quarkus.otel.*` prefix."
msgstr "Quarkus OpenTelemetryの設定プロパティに `quarkus.otel.*` プレフィックスが付くようになりました。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid "*The legacy properties* with prefix `quarkus.opentelemetry.*` are currently being mapped to the new ones as a default, during a transition period. See Default column in the details below."
msgstr "プレフィックスが `quarkus.opentelemetry.*` の *レガシープロパティは* 、現在、移行期間中、デフォルトとして新しいプロパティにマッピングされています。詳細は以下の「デフォルト」欄を参照してください。\n"

#: _versions/3.2/guides/opentelemetry.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される設定プロパティ - 他のすべての設定プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
