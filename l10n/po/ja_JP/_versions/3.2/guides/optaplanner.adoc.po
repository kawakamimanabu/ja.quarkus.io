msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "OptaPlanner - Using AI to optimize a schedule with OptaPlanner"
msgstr "OptaPlanner - OptaPlanner での AI を使用したスケジュールの最適化"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"This guide walks you through the process of creating a Quarkus application\n"
"with https://www.optaplanner.org/[OptaPlanner]'s constraint solving Artificial Intelligence (AI)."
msgstr "このガイドでは、 https://www.optaplanner.org/[OptaPlanner] の制約解決人工知能 (AI) を使用して Quarkus アプリケーションを作成するプロセスについて説明します。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "What you will build"
msgstr "何を構築するか"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "You will build a REST application that optimizes a school timetable for students and teachers:"
msgstr "生徒と教師の時間割を最適化する REST アプリケーションを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Your service will assign `Lesson` instances to `Timeslot` and `Room` instances automatically\n"
"by using AI to adhere to hard and soft scheduling _constraints_, such as the following examples:"
msgstr "サービスは、ハードおよびソフトスケジューリング _制約_ に従い、AI を使用して自動的に `Lesson` インスタンスを `Timeslot` および `Room` インスタンスに割り当てます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A room can have at most one lesson at the same time."
msgstr "教室は同時に最大 1 つのレッスンを持つことができます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A teacher can teach at most one lesson at the same time."
msgstr "教師は同時に最大 1 つのレッスンを教えることができます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A student can attend at most one lesson at the same time."
msgstr "生徒は同時に最大 1 つのレッスンに参加できます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A teacher prefers to teach all lessons in the same room."
msgstr "教師はすべてのレッスンを同じ教室で教えることを好みます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A teacher prefers to teach sequential lessons and dislikes gaps between lessons."
msgstr "教師は連続してレッスンを教えることを好み、レッスン間に空き時間があることを嫌います。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A student dislikes sequential lessons on the same subject."
msgstr "生徒は連続して同じテーマのレッスンに出席することを嫌います。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Mathematically speaking, school timetabling is an _NP-hard_ problem.\n"
"This means it is difficult to scale.\n"
"Simply brute force iterating through all possible combinations takes millions of years\n"
"for a non-trivial dataset, even on a supercomputer.\n"
"Luckily, AI constraint solvers such as OptaPlanner have advanced algorithms\n"
"that deliver a near-optimal solution in a reasonable amount of time."
msgstr "数学的に言えば、学校の時間割は _NP-hard_ な問題です。これは、スケーリングが難しいことを意味します。考えられるすべての組み合わせを総当たり攻撃で繰り返すだけでは、スーパーコンピューターであっても重要なデータセットだけで数百万年かかります。幸い、OptaPlanner などの AI 制約ソルバーには、妥当な時間内に最適に近いソリューションを提供できる高度なアルゴリズムがあります。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
#, fuzzy
msgid "The solution is located in link:{quickstarts-tree-url}/optaplanner-quickstart[the `optaplanner-quickstart` directory]."
msgstr "ソリューションは link:{quickstarts-tree-url}/optaplanner-quickstart[optaplanner-quickstart ディレクトリ] にあります。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "The build file and the dependencies"
msgstr "ビルドファイルと依存関係"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Use https://code.quarkus.io/[code.quarkus.io] to generate an application\n"
"with the following extensions, for Maven or Gradle:"
msgstr "https://code.quarkus.io/[code.quarkus.io] を使用して、Maven または Gradle 用に次のエクステンションを備えたアプリケーションを生成します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "RESTEasy Reactive (`quarkus-resteasy-reactive`)"
msgstr "RESTEasy Reactive (`quarkus-resteasy-reactive`)"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "RESTEasy Reactive Jackson (`quarkus-resteasy-reactive-jackson`)"
msgstr "RESTEasy Reactive Jackson (`quarkus-resteasy-reactive-jackson`)"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "OptaPlanner (`optaplanner-quarkus`)"
msgstr "OptaPlanner (`optaplanner-quarkus`)"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "OptaPlanner Jackson (`optaplanner-quarkus-jackson`)"
msgstr "OptaPlanner Jackson (`optaplanner-quarkus-jackson`)"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Alternatively, generate it from the command line:"
msgstr "または、コマンドラインから生成します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "This will include the following dependencies in your build file:"
msgstr "これには、ビルドファイルの次の依存関係が含まれます。"

#. type: Block title
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Model the domain objects"
msgstr "ドメインオブジェクトのモデル化"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Your goal is to assign each lesson to a time slot and a room.\n"
"You will create these classes:"
msgstr "目標は、各レッスンをタイムスロットと教室に割り当てることです。次のクラスを作成します。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Timeslot"
msgstr "タイムスロット"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `Timeslot` class represents a time interval when lessons are taught,\n"
"for example, `Monday 10:30 - 11:30` or `Tuesday 13:30 - 14:30`.\n"
"For simplicity's sake, all time slots have the same duration\n"
"and there are no time slots during lunch or other breaks."
msgstr "`Timeslot` クラスは、たとえば `月曜日 10:30 - 11:30` または `火曜日 13:30 - 14:30` のように、レッスンが行われる時間の間隔を表します。簡単にするために、すべてのタイムスロットは同じ時間間隔で、昼食やその他の休憩時間のタイムスロットはありません。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"A time slot has no date, because a high school schedule just repeats every week.\n"
"So there is no need for https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#continuousPlanning[continuous planning]."
msgstr "高校の時間割は毎週同じものが繰り返されるため、タイムスロットに日付はありません。したがって、 https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#continuousPlanning[継続的な計画作成] は必要ありません。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/main/java/org/acme/optaplanner/domain/Timeslot.java` class:"
msgstr "`src/main/java/org/acme/optaplanner/domain/Timeslot.java` クラスを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Because no `Timeslot` instances change during solving, a `Timeslot` is called a _problem fact_.\n"
"Such classes do not require any OptaPlanner specific annotations."
msgstr "解決する間は `Timeslot` インスタンスは変更されないため、 `Timeslot` は_問題の事実_と呼ばれます。このようなクラスに、OptaPlanner 固有のアノテーションは必要ありません。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Notice the `toString()` method keeps the output short,\n"
"so it is easier to read OptaPlanner's `DEBUG` or `TRACE` log, as shown later."
msgstr "`toString()` メソッドは出力を短く保つため、後で示すように、OptaPlanner の `DEBUG` または `TRACE` のログは読みやすくなっています。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Room"
msgstr "教室"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `Room` class represents a location where lessons are taught,\n"
"for example, `Room A` or `Room B`.\n"
"For simplicity's sake, all rooms are without capacity limits\n"
"and they can accommodate all lessons."
msgstr "`Room` クラスは、 `Room A` や `Room B` のように、レッスンが実施される場所を表します。わかりやすくするために、すべての教室に定員制限はなく、すべてのレッスンに対応できます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/main/java/org/acme/optaplanner/domain/Room.java` class:"
msgstr "`src/main/java/org/acme/optaplanner/domain/Room.java` クラスを作成します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "`Room` instances do not change during solving, so `Room` is also a _problem fact_."
msgstr "解決の間、 `Room` インスタンスは変更されないため、 `Room`も_問題の事実_です。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Lesson"
msgstr "レッスン"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"During a lesson, represented by the `Lesson` class,\n"
"a teacher teaches a subject to a group of students,\n"
"for example, `Math by A.Turing for 9th grade` or `Chemistry by M.Curie for 10th grade`.\n"
"If a subject is taught multiple times per week by the same teacher to the same student group,\n"
"there are multiple `Lesson` instances that are only distinguishable by `id`.\n"
"For example, the 9th grade has six math lessons a week."
msgstr "`Lesson` クラスで表されるレッスンでは、 `Math by A.Turing for 9th grade` または `Chemistry by M.Curie for 10th grade` のように、教師は生徒グループにいずれかの教科を教えます。同じ教師が週に複数回、その教科を同じ生徒グループに教える場合、 `id` のみ異なる複数の `Lesson` インスタンスがあります。たとえば、9 年生には週に 6 回の数学の授業があります。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"During solving, OptaPlanner changes the `timeslot` and `room` fields of the `Lesson` class,\n"
"to assign each lesson to a time slot and a room.\n"
"Because OptaPlanner changes these fields, `Lesson` is a _planning entity_:"
msgstr "解決中に、OptaPlanner は `Lesson` クラスの `timeslot` フィールドと `room` フィールドを変更し、各レッスンをタイムスロットと教室に割り当てます。OptaPlanner はこれらのフィールドを変更するため、 `Lesson` は _プランニングエンティティー_ です。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Most of the fields in the previous diagram contain input data, except for the orange fields:\n"
"A lesson's `timeslot` and `room` fields are unassigned (`null`) in the input data\n"
"and assigned (not `null`) in the output data.\n"
"OptaPlanner changes these fields during solving.\n"
"Such fields are called planning variables.\n"
"In order for OptaPlanner to recognize them,\n"
"both the `timeslot` and `room` fields require an `@PlanningVariable` annotation.\n"
"Their containing class, `Lesson`, requires an `@PlanningEntity` annotation."
msgstr "前の図のほとんどのフィールドには、オレンジ色のフィールドを除いて、入力データが含まれています。レッスンの `timeslot` フィールドと `room` フィールドは、入力データでは割り当てられておらず (`null`)、出力データでは割り当てられています (非 `null`)。OptaPlanner は、解決中にこれらのフィールドを変更します。このようなフィールドは、プランニング変数と呼ばれます。OptaPlanner がそれらを認識するためには、 `timeslot` フィールドと `room` フィールドの両方に `@PlanningVariable` アノテーションが必要です。それらを含むクラス `Lesson` には、 `@PlanningEntity` アノテーションが必要です。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/main/java/org/acme/optaplanner/domain/Lesson.java` class:"
msgstr "`src/main/java/org/acme/optaplanner/domain/Lesson.java` クラスを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `Lesson` class has an `@PlanningEntity` annotation,\n"
"so OptaPlanner knows that this class changes during solving\n"
"because it contains one or more planning variables."
msgstr "`Lesson` クラスには `@PlanningEntity` アノテーションがあり、このクラスには 1 つ以上のプランニング変数が含まれているため、OptaPlanner はこのクラスが解決中に変更されることを認識しています。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `timeslot` field has an `@PlanningVariable` annotation, so OptaPlanner knows that it can change its value.\n"
"In order to find potential Timeslot instances to assign to this field, OptaPlanner uses the variable type to connect to a value range provider that provides a List<Timeslot> to pick from."
msgstr "`timeslot` フィールドには `@PlanningVariable` アノテーションがあるので、OptaPlanner はその値を変更することができることを知っています。このフィールドに割り当てるTimeslotインスタンスの候補を見つけるために、OptaPlannerは変数タイプを使用して、List<Timeslot>から選択することを提供する値域プロバイダーに接続します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "The `room` field also has an `@PlanningVariable` annotation, for the same reasons."
msgstr "同じ理由で、 `room` フィールドにも `@PlanningVariable` アノテーションがあります。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Determining the `@PlanningVariable` fields for an arbitrary constraint solving use case\n"
"is often challenging the first time.\n"
"Read https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#domainModelingGuide[the domain modeling guidelines]\n"
"to avoid common pitfalls."
msgstr "任意制約解決のユースケースの `@PlanningVariable` フィールドを初めて決定する場合、それは簡単ではありません。一般的な落とし穴を避けるために、 https://docs.optaplanner.org/latestFinal/optaplanner-docs/html_single/index.html#domainModelingGuide[ドメインのモデル化ガイドライン] をお読みください。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Define the constraints and calculate the score"
msgstr "制約の定義とスコアの計算"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"A _score_ represents the quality of a specific solution.\n"
"The higher, the better.\n"
"OptaPlanner looks for the best solution, which is the solution with the highest score found in the available time.\n"
"It might be the _optimal_ solution."
msgstr "_スコア_ は、特定のソリューションの品質を表します。スコアが高ければ品質が高いことを表しています。OptaPlanner は使用できる時間内に見つかった最高スコアのソリューションを最良のソリューションとして探します。それは _最適な_ ソリューションかもしれません。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Because this use case has hard and soft constraints,\n"
"use the `HardSoftScore` class to represent the score:"
msgstr "このユースケースにはハードとソフトの制約があるため、スコアを表すためには `HardSoftScore` クラスを使用します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Hard constraints must not be broken. For example: _A room can have at most one lesson at the same time._"
msgstr "ハード制約を破ってはいけません。例: _教室は同時に最大 1 つのレッスンを持つことができます。_"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Soft constraints should not be broken. For example: _A teacher prefers to teach in a single room._"
msgstr "ソフト制約を破ってはいけません。例: _教師は 1 つの教室で教えることを好みます。_"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Hard constraints are weighted against other hard constraints.\n"
"Soft constraints are weighted too, against other soft constraints.\n"
"*Hard constraints always outweigh soft constraints*, regardless of their respective weights."
msgstr "ハード制約は、他のハード制約に対して重み付けされます。ソフト制約も、他のソフト制約に対して重み付けされます。*それぞれの重みに関係なく、ハード制約は常にソフト制約の重みを上回ります*。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "To calculate the score, you could implement an `EasyScoreCalculator` class:"
msgstr "スコアを計算するには、 `EasyScoreCalculator` クラスを実装します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Unfortunately **that does not scale well**, because it is non-incremental:\n"
"every time a lesson is assigned to a different time slot or room,\n"
"all lessons are re-evaluated to calculate the new score."
msgstr "残念ながら、増分ではないため、**それはうまくスケーリングされません**。レッスンが異なるタイムスロットまたは教室に割り当てられるたびに、すべてのレッスンが再評価されて新しいスコアが計算されます。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Instead, create a `src/main/java/org/acme/optaplanner/solver/TimeTableConstraintProvider.java` class\n"
"to perform incremental score calculation.\n"
"It uses OptaPlanner's ConstraintStream API which is inspired by Java Streams and SQL:"
msgstr "代わりに、 `src/main/java/org/acme/optaplanner/solutioner/TimeTableConstraintProvider.java` クラスを作成して、増分スコア計算を実行します。これは、JavaStreams と SQL に触発された OptaPlanner の ConstraintStreamAPI を使用します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "The `ConstraintProvider` scales an order of magnitude better than the `EasyScoreCalculator`: __O__(n) instead of __O__(n²)."
msgstr "`ConstraintProvider` は、のスケーリングは `EasyScoreCalculator` より桁違いに優れており、__O__(n²) ではなく __O __(n) です。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Gather the domain objects in a planning solution"
msgstr "プランニングソリューションでドメインオブジェクトを収集します"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"A `TimeTable` wraps all `Timeslot`, `Room`, and `Lesson` instances of a single dataset.\n"
"Furthermore, because it contains all lessons, each with a specific planning variable state,\n"
"it is a _planning solution_ and it has a score:"
msgstr "`TimeTable` は、単一データセットのすべての `Timeslot`、 `Room`、および `Lesson` インスタンスをラップします。さらに、これにはすべてのレッスンが含まれており、各レッスンには特定のプランニング変数があるため、これは _plannning solution_ であり、スコアがあります。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"If lessons are still unassigned, then it is an _uninitialized_ solution,\n"
"for example, a solution with the score `-4init/0hard/0soft`."
msgstr "レッスンがまだ割り当てられていない場合、それは _uninitialized_ ソリューションです。たとえば、スコアが `-4init/0hard/0soft` のソリューションです。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"If it breaks hard constraints, then it is an _infeasible_ solution,\n"
"for example, a solution with the score `-2hard/-3soft`."
msgstr "ハード制約を破る場合、それは _infeasible_ ソリューションです。たとえば、スコアが `-2hard/-3soft` のソリューションです。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"If it adheres to all hard constraints, then it is a _feasible_ solution,\n"
"for example, a solution with the score `0hard/-7soft`."
msgstr "すべてのハード制約に準拠している場合、それは _feasible_ ソリューションです。たとえば、スコアが `0hard/-7soft` のソリューションです。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/main/java/org/acme/optaplanner/domain/TimeTable.java` class:"
msgstr "`src/main/java/org/acme/optaplanner/domain/TimeTable.java` クラスを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `TimeTable` class has an `@PlanningSolution` annotation,\n"
"so OptaPlanner knows that this class contains all the input and output data."
msgstr "`TimeTable` クラスに `@PlanningSolution` アノテーションがあるため、OptaPlanner はこのクラスにすべての入力データと出力データが含まれていると認識します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Specifically, this class is the input of the problem:"
msgstr "具体的には、このクラスは問題の入力です。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A `timeslotList` field with all time slots"
msgstr "すべてのタイムスロットを含む `timeslotList` フィールド"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "This is a list of problem facts, because they do not change during solving."
msgstr "解決中に変更されないため、これは問題の事実のリストです。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A `roomList` field with all rooms"
msgstr "すべての教室を含む `roomList` フィールド"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A `lessonList` field with all lessons"
msgstr "すべてのレッスンを含む `lessonList` フィールド"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "This is a list of planning entities, because they change during solving."
msgstr "解決中に変更されるため、これはプランニングエンティティーのリストです。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Of each `Lesson`:"
msgstr "各 `レッスン` の:"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The values of the `timeslot` and `room` fields are typically still `null`, so unassigned.\n"
"They are planning variables."
msgstr "`timeslot` フィールドと `room` フィールドの値は、通常の場合はまだ `null` であるため割り当てられていません。それはプランニング変数です。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The other fields, such as `subject`, `teacher` and `studentGroup`, are filled in.\n"
"These fields are problem properties."
msgstr "`subject`、 `Teacher`、 `studentGroup` などの他のフィールドが入力されます。これらのフィールドは、問題のプロパティーです。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "However, this class is also the output of the solution:"
msgstr "ただし、このクラスはソリューションの出力でもあります。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A `lessonList` field for which each `Lesson` instance has non-null `timeslot` and `room` fields after solving"
msgstr "解決した後、各 `Lesson` インスタンスに null 以外の `timeslot` フィールドと `room` フィールドがある `lessonList` フィールド"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A `score` field that represents the quality of the output solution, for example, `0hard/-5soft`"
msgstr "出力ソリューションの品質を表す `score` フィールド (例: `0hard/-5soft`)"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "The value range providers"
msgstr "値の範囲プロバイダー"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `timeslotList` field is a value range provider.\n"
"It holds the `Timeslot` instances which OptaPlanner can pick from to assign to the `timeslot` field of `Lesson` instances.\n"
"The `timeslotList` field has an `@ValueRangeProvider` annotation to connect the `@PlanningVariable` with the `@ValueRangeProvider`,\n"
"by matching the type of the planning variable with the type returned by the value range provider."
msgstr "`timeslotList` フィールドは、値域プロバイダーです。これは `Timeslot` インスタンスを保持し、OptaPlanner が `timeslot` フィールドの `Lesson` インスタンスに割り当てるために選択することができます。 `timeslotList` フィールドには `@ValueRangeProvider` アノテーションがあり、計画変数の型と値域プロバイダーが返す型を一致させて、 `@PlanningVariable` と `@ValueRangeProvider` を接続します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Following the same logic, the `roomList` field also has an `@ValueRangeProvider` annotation."
msgstr "同じロジックに従って、 `roomList` フィールドにも `@ValueRangeProvider` アノテーションがあります。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "The problem fact and planning entity properties"
msgstr "問題の事実とプランニングエンティティーのプロパティー"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Furthermore, OptaPlanner needs to know which `Lesson` instances it can change\n"
"as well as how to retrieve the `Timeslot` and `Room` instances used for score calculation\n"
"by your `TimeTableConstraintProvider`."
msgstr "さらに、OptaPlanner は、変更できる `Lesson` インスタンスと、 `TimeTableConstraintProvider` がスコア計算に使用する `Timeslot` および `Room` インスタンスを取得する方法を知る必要があります。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `timeslotList` and `roomList` fields have an `@ProblemFactCollectionProperty` annotation,\n"
"so your `TimeTableConstraintProvider` can select _from_ those instances."
msgstr "`timeslotList` フィールドと `roomList` フィールドには `@ProblemFactCollectionProperty` アノテーションがあるため、 `TimeTableConstraintProvider` はこれらのインスタンス_から_選択できます。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `lessonList` has an `@PlanningEntityCollectionProperty` annotation,\n"
"so OptaPlanner can change them during solving\n"
"and your `TimeTableConstraintProvider` can select _from_ those too."
msgstr "`lessonList` には `@PlanningEntityCollectionProperty` アノテーションがあるため、OptaPlanner は解決中にそれらを変更でき、 `TimeTableConstraintProvider` はそれら_から_も選択できます。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Create the solver service"
msgstr "ソルバーサービスの作成"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Now you are ready to put everything together and create a REST service.\n"
"But solving planning problems on REST threads causes HTTP timeout issues.\n"
"Therefore, the Quarkus extension injects a `SolverManager` instance,\n"
"which runs solvers in a separate thread pool\n"
"and can solve multiple datasets in parallel."
msgstr "これで、すべてをまとめて REST サービスを作成する準備が整いました。ただし、REST スレッドの planning problem を解決すると、HTTP タイムアウトの問題が発生します。したがって、Quarkus エクステンションは `SolverManager` インスタンスを挿入します。これにより、別のスレッドプールでソルバーが実行され、複数のデータセットを並行して解決できます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/main/java/org/acme/optaplanner/rest/TimeTableResource.java` class:"
msgstr "`src/main/java/org/acme/optaplanner/rest/TimeTableResource.java` クラスを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"For simplicity's sake, this initial implementation waits for the solver to finish,\n"
"which can still cause an HTTP timeout.\n"
"The _complete_ implementation avoids HTTP timeouts much more elegantly."
msgstr "分かりやすくするために、この最初の実装はソルバーが終了するのを待ちますが、それでも HTTP タイムアウトが発生する可能性があります。_完全な_実装では、HTTP タイムアウトはさらにスムーズに回避されます。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Set the termination time"
msgstr "終了時刻の設定"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Without a termination setting or a termination event, the solver runs forever.\n"
"To avoid that, limit the solving time to five seconds.\n"
"That is short enough to avoid the HTTP timeout."
msgstr "終了設定または終了イベントがない場合、ソルバーは永久に実行されます。これを回避するには、解決時間を 5 秒に制限します。これは、HTTP タイムアウトを回避するのに十分な短さです。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/main/resources/application.properties` file:"
msgstr "`src/main/resources/application.properties` ファイルを作成します。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "First start the application:"
msgstr "最初にアプリケーションを起動します。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Try the application"
msgstr "アプリケーションの試行"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Now that the application is running, you can test the REST service.\n"
"You can use any REST client you wish.\n"
"The following example uses the Linux command `curl` to send a POST request:"
msgstr "これでアプリケーションが実行されたため、REST サービスをテストできます。任意の REST クライアントを使用できます。次の例では、Linux コマンド `curl` を使用して POST 要求を送信します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"After about five seconds, according to the termination spent time defined in your `application.properties`,\n"
"the service returns an output similar to the following example:"
msgstr "約 5 秒後に、 `application.properties` で定義された終了時間に応じて、サービスは次の例のような出力を返します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Notice that your application assigned all four lessons to one of the two time slots and one of the two rooms.\n"
"Also notice that it conforms to all hard constraints.\n"
"For example, M. Curie's two lessons are in different time slots."
msgstr "アプリケーションが 4 つのレッスンすべてを 2 つのタイムスロットのいずれか 1 つと、2 つの教室のいずれか 1 つに割り当てていることに注意してください。また、すべてのハード制約に準拠していることにも注意してください。たとえば、M. Curie の 2 つのレッスンは異なるタイムスロットにあります。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "On the server side, the `info` log show what OptaPlanner did in those five seconds:"
msgstr "サーバー側では、 `info` ログに OptaPlanner が 5 秒間で何をしたかが示されます。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Test the application"
msgstr "アプリケーションのテスト"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "A good application includes test coverage."
msgstr "優れたアプリケーションには、テストカバレッジが含まれます。"

#. type: Title ====
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Test the constraints"
msgstr "制約のテスト"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"To test each constraint in isolation, use a `ConstraintVerifier` in unit tests.\n"
"It tests each constraint's corner cases in isolation from the other tests,\n"
"which lowers maintenance when adding a new constraint with proper test coverage."
msgstr "各制約を個別にテストするには、単体テストで `ConstraintVerifier` を使用します。各制約のコーナーケースを他のテストとは別にテストします。これにより、適切なテストカバレッジで新しい制約を追加する際のメンテナーンスが軽減されます。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Add a `optaplanner-test` dependency in your build file:"
msgstr "ビルドファイルに `optaplanner-test` 依存関係を追加します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/test/java/org/acme/optaplanner/solver/TimeTableConstraintProviderTest.java` class:"
msgstr "`src/test/java/org/acme/optaplanner/solutioner/TimeTableConstraintProviderTest.java` クラスを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"This test verifies that the constraint `TimeTableConstraintProvider::roomConflict`,\n"
"when given three lessons in the same room, where two lessons have the same timeslot,\n"
"it penalizes with a  match weight of `1`.\n"
"So with a constraint weight of `10hard` it would reduce the score by `-10hard`."
msgstr "このテストは、制約 `TimeTableConstraintProvider::roomConflict` が、同じ教室に 3 つのレッスンが指定され、2 つのレッスンのタイムスロットが同じ場合に、一致の重み `1` でペナルティを課すことを確認します。したがって、制約の重みが `10hard` の場合、スコアは `-10hard` 減少します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Notice how `ConstraintVerifier` ignores the constraint weight during testing - even\n"
"if those constraint weights are hard coded in the `ConstraintProvider` - because\n"
"constraints weights change regularly before going into production.\n"
"This way, constraint weight tweaking does not break the unit tests."
msgstr "制約の重みは本番環境に入る前に定期的に変更されるため、 `ConstraintVerifier` は (その制約の重みが `ConstraintProvider` にハードコーディングされている場合でも) テスト中は制約の重みを無視することに注意してください。このように、制約の重みを微調整してもユニットテストが中断されることはありません。"

#. type: Title ====
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Test the solver"
msgstr "ソルバーのテスト"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "In a JUnit test, generate a test dataset and send it to the `TimeTableResource` to solve."
msgstr "JUnit テストでは、テストデータセットを生成し、それを `TimeTableResource` に送信して解決します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Create the `src/test/java/org/acme/optaplanner/rest/TimeTableResourceTest.java` class:"
msgstr "`src/test/java/org/acme/optaplanner/rest/TimeTableResourceTest.java` クラスを作成します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"This test verifies that after solving, all lessons are assigned to a time slot and a room.\n"
"It also verifies that it found a feasible solution (no hard constraints broken)."
msgstr "このテストは、解決した後、すべてのレッスンがタイムスロットと教室に割り当てられていることを確認します。また、実行可能なソリューション (厳しい制約が破られていない) が見つかったことを確認します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Add test properties to the `src/main/resources/application.properties` file:"
msgstr "テストプロパティーを `src/main/resources/application.properties` ファイルに追加します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Normally, the solver finds a feasible solution in less than 200 milliseconds.\n"
"Notice how the `application.properties` overwrites the solver termination during tests\n"
"to terminate as soon as a feasible solution (`0hard/*soft`) is found.\n"
"This avoids hard coding a solver time, because the unit test might run on arbitrary hardware.\n"
"This approach ensures that the test runs long enough to find a feasible solution, even on slow machines.\n"
"But it does not run a millisecond longer than it strictly must, even on fast machines."
msgstr "通常、ソルバーは 200 ミリ秒未満で実行可能なソリューションを見つけます。 `application.properties` は、実行可能なソリューション (`0hard/* soft`) が見つかり次第すぐに終了するように、テスト中にソルバーの終了を上書きすることに注意してください。これにより、ユニットテストが任意のハードウェアで実行される可能性があるため、ソルバー時間をハードコーディングする必要がなくなります。このアプローチにより、低速マシンでも実行可能なソリューションを見つけるのに十分な時間、テストが実行されます。ただし、高速マシンであっても、厳密に必要な時間より 1 ミリ秒も長く実行されることはありません。"

#. type: Title ===
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Logging"
msgstr "ロギング"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"When adding constraints in your `ConstraintProvider`,\n"
"keep an eye on the _score calculation speed_ in the `info` log,\n"
"after solving for the same amount of time, to assess the performance impact:"
msgstr "`ConstraintProvider` に制約を追加するときは、同じ時間で解決した後、 `info` ログでの_スコア計算速度_に注意してパフォーマンスへの影響を評価してください。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"To understand how OptaPlanner is solving your problem internally,\n"
"change the logging in the `application.properties` file or with a `-D` system property:"
msgstr "OptaPlanner が内部で問題をどのように解決しているかを理解するには、 `application.properties` ファイルまたは `-D` システムプロパティーのロギングを変更します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Use `debug` logging to show every _step_:"
msgstr "`debug` ロギングを使用して、すべての _ステップ_ を表示します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Use `trace` logging to show every _step_ and every _move_ per step."
msgstr "`trace` ロギングを使用して、すべての _ステップ_ と、ステップごとのすべての _動き_ を表示します。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Congratulations!\n"
"You have just developed a Quarkus application with https://www.optaplanner.org/[OptaPlanner]!"
msgstr "これで、 https://www.optaplanner.org/[OptaPlanner] を使用して Quarkus アプリケーションを開発しました。"

#. type: Title ==
#: _versions/3.2/guides/optaplanner.adoc
#, no-wrap
msgid "Further improvements: Database and UI integration"
msgstr "さらなる改善: データベースと UI の統合"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Now try adding database and UI integration:"
msgstr "次に、データベースと UI の統合を追加しましょう。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Store `Timeslot`, `Room`, and `Lesson` in the database with xref:hibernate-orm-panache.adoc[Hibernate and Panache]."
msgstr "`Timeslot`、 `Room`、 `Lesson` を xref:hibernate-orm-panache.adoc[Hibernate および Panache] を使用してデータベースに保存します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "xref:rest-json.adoc[Expose them through REST]."
msgstr "xref:rest-json.adoc[REST で公開します] 。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Adjust the `TimeTableResource` to read and write a `TimeTable` instance in a single transaction\n"
"and use those accordingly:"
msgstr "`TimeTableResource` を調整して、単一のトランザクションで `TimeTable` インスタンスを読み書きし、適切にそれらを使用します。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"For simplicity's sake, this code handles only one `TimeTable` instance,\n"
"but it is straightforward to enable multi-tenancy and handle multiple `TimeTable` instances of different high schools in parallel."
msgstr "わかりやすくするために、このコードは 1 つの `TimeTable` インスタンスのみを処理しますが、簡単にマルチテナンシーを有効にして、異なる高校の複数の `TimeTable` インスタンスを並行処理できます。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `getTimeTable()` method returns the latest timetable from the database.\n"
"It uses the `ScoreManager` (which is automatically injected)\n"
"to calculate the score of that timetable, so the UI can show the score."
msgstr "`getTimeTable()` メソッドは、データベースから最新のタイムテーブルを返します。 `ScoreManager` (自動的に挿入されます) を使用してそのタイムテーブルのスコアを計算するため、UI でスコアを表示できます。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"The `solve()` method starts a job to solve the current timetable and store the time slot and room assignments in the database.\n"
"It uses the `SolverManager.solveAndListen()` method to listen to intermediate best solutions\n"
"and update the database accordingly.\n"
"This enables the UI to show progress while the backend is still solving."
msgstr "`solve()` メソッドは、現在のタイムテーブルを解決し、タイムスロットと教室の割り当てをデータベースに保存するジョブを開始します。 `SolverManager.solveAndListen()` メソッドを使用して、中間の最適ソリューションをリッスンし、それに応じてデータベースを更新します。これにより、バックエンドが解決している間も、UI に進行状況を表示できます。"

#: _versions/3.2/guides/optaplanner.adoc
msgid ""
"Adjust the `TimeTableResourceTest` instance accordingly, now that the `solve()` method returns immediately.\n"
"Poll for the latest solution until the solver finishes solving:"
msgstr "`TimeTableResourceTest` インスタンスを適切に調整します。これで、 `solve()` メソッドがすぐに返されます。ソルバーが解決を完了するまで、最新のソリューションをポーリングします。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
msgid "Build an attractive web UI on top of these REST methods to visualize the timetable."
msgstr "これらの REST メソッドに魅力的な Web UI を構築して、タイムテーブルを視覚化します。"

#. type: Plain text
#: _versions/3.2/guides/optaplanner.adoc
#, fuzzy
msgid "Take a look at link:{quickstarts-tree-url}/optaplanner-quickstart[the quickstart source code] to see how this all turns out."
msgstr "link:{quickstarts-tree-url}/optaplanner-quickstart[クイックスタートのソースコードを見て] みよう。"
