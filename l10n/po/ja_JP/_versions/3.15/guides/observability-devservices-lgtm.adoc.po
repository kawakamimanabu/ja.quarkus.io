msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Observability Dev Services with Grafana OTel LGTM"
msgstr "Observability Dev Services と Grafana OTel LGTM"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "https://github.com/grafana/docker-otel-lgtm[OTel-LGTM] is `all-in-one` Docker image containing OpenTelemetry's https://github.com/open-telemetry/opentelemetry-proto/blob/main/docs/README.md[OTLP] as the protocol to transport metrics, tracing and logging data to an https://opentelemetry.io/docs/collector[OpenTelemetry Collector] which then stores signals data into https://prometheus.io/[Prometheus] (metrics), https://github.com/grafana/tempo[Tempo] (traces) and https://github.com/grafana/loki[Loki] (logs), only to have it visualized by https://github.com/grafana/grafana[Grafana]. It's used by Quarkus Observability to provide the Grafana OTel LGTM Dev Resource."
msgstr "link:https://github.com/grafana/docker-otel-lgtm[OTel-LGTMは] `all-in-one` Dockerイメージで、OpenTelemetryの link:https://github.com/open-telemetry/opentelemetry-proto/blob/main/docs/README.md[OTLPを] プロトコルとして含み、メトリクス、トレース、ロギングデータを link:https://opentelemetry.io/docs/collector[OpenTelemetry Collectorに] 転送し、シグナルデータを link:https://prometheus.io/[Prometheus] （メトリクス）、 link:https://github.com/grafana/tempo[Tempo] （トレース）、 link:https://github.com/grafana/loki[Loki] （ログ）に保存し、 link:https://github.com/grafana/grafana[Grafanaで] 可視化します。これは、Quarkus ObservabilityがGrafana OTel LGTM Dev Resourceを提供するために使用しています。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Configuring your project"
msgstr "プロジェクトの設定"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Add the Quarkus Grafana OTel LGTM sink (where data goes) extension to your build file:"
msgstr "Quarkus Grafana OTel LGTM シンク (データが送信される場所) エクステンションをビルドファイルに追加します。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Metrics"
msgstr "メトリクス"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you need metrics, add the Micrometer OTLP registry to your build file:"
msgstr "メトリクスが必要な場合は、ビルドファイルにMicrometer OTLPレジストリを追加してください："

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "When using the https://micrometer.io/[MicroMeter's] Quarkiverse OTLP registry to push metrics to Grafana OTel LGTM, the `quarkus.micrometer.export.otlp.url` property is automatically set to OTel collector endpoint as seen from the outside of the docker container."
msgstr "link:https://micrometer.io/[MicroMeter の] Quarkiverse OTLP レジストリを使用して Grafana OTel LGTM にメトリクスをプッシュする場合、 `quarkus.micrometer.export.otlp.url` プロパティは、Docker コンテナの外側から見て OTel コレクターのエンドポイントに自動的に設定されます。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Tracing"
msgstr "トレース"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "For Tracing add the `quarkus-opentelemetry` extension to your build file:"
msgstr "トレースするには、ビルドファイルに `quarkus-opentelemetry` 拡張子を追加します："

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.endpoint` property is automatically set to OTel collector endpoint as seen from the outside of the docker container."
msgstr "`quarkus.otel.exporter.otlp.endpoint` プロパティは、ドッカー・コンテナの外側から見た OTel コレクタ・エンドポイントに自動的に設定されます。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "The `quarkus.otel.exporter.otlp.protocol` is set to `http/protobuf`."
msgstr "`quarkus.otel.exporter.otlp.protocol` は `http/protobuf` に設定されています。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Access Grafana"
msgstr "Grafanaにアクセス"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Once you start your app in dev mode:"
msgstr "アプリケーションを開発モードで起動します。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "You will see a log entry like this:"
msgstr "次のようなログエントリーが表示されます。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Remember that Grafana is accessible in an ephemeral port, so you need to check the logs to see which port is being used. In this example, the grafana endpoint is `grafana.endpoint=http://localhost:42797`."
msgstr "Grafana はエフェメラルポートでアクセス可能であるため、どのポートが使用されているかを確認するにはログを確認する必要があります。この例では、Grafana エンドポイントは `grafana.endpoint=http://localhost:42797` です。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you miss the message you can always check the port with this Docker command:"
msgstr "メッセージを見逃した場合は、このDockerコマンドでいつでもポートを確認できます："

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Additional configuration"
msgstr "追加設定"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "This extension will configure your `quarkus-opentelemetry` and `quarkus-micrometer-registry-otlp` extensions to send data to the OTel Collector bundled with the Grafana OTel LGTM image."
msgstr "このエクステンションは、Grafana OTel LGTM イメージにバンドルされている OTel Collector にデータを送信するために、`quarkus-opentelemetry` および `quarkus-micrometer-registry-otlp` エクステンションを設定します。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "If you don't want all the hassle with Dev Services (e.g. lookup and re-use of existing running containers, etc) you can simply disable Dev Services and enable just Dev Resource usage:"
msgstr "Dev Services に関する面倒な作業 (既存の実行中のコンテナーの検索や再利用など) を避ける場合は、Dev Services を無効にして、Dev Resource の使用のみを有効にすることができます。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Tests"
msgstr "テスト"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "And for the least 'auto-magical' usage in the tests, simply disable both (Dev Resources are already disabled by default):"
msgstr "テストにおいて '魔法のような自動処理' の使用を最小限に抑えるには、両方を無効します (Dev Resources はデフォルトですでに無効になっています)。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "And then explicitly list LGTM Dev Resource in the test as a `@QuarkusTestResource` resource:"
msgstr "そして、テスト内の LGTM Dev Resource を `@QuarkusTestResource` リソースとして明示的にリストします。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Testing full Grafana OTel LGTM stack - example"
msgstr "完全な Grafana OTel LGTM スタックのテスト - 例"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Use existing Quarkus MicroMeter OTLP registry"
msgstr "既存の Quarkus MicroMeter OTLP レジストリーの使用"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Simply inject the Meter registry into your code -- it will periodically push metrics to Grafana LGTM's OTLP HTTP endpoint."
msgstr "Meter レジストリーをコードに注入するだけで、メトリクスが Grafana LGTM の OTLP HTTP エンドポイントに定期的にプッシュされるようになります。"

#: _versions/3.15/guides/observability-devservices-lgtm.adoc
msgid "Where you can then check Grafana's datasource API for existing metrics data."
msgstr "その後、Grafana のデータソース API で既存のメトリクスデータを確認できます。"
