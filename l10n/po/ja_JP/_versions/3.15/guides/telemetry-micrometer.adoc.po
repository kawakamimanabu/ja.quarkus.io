msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Micrometer Metrics"
msgstr "Micrometerメトリクス"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer provides an abstraction layer for metrics collection.\n"
"It defines an API for basic meter types, like counters, gauges, timers, and distribution summaries, along with a `MeterRegistry` API that generalizes metrics collection and propagation for different backend monitoring systems."
msgstr ""
"micrometerは、メトリクス収集のための抽象化レイヤーを提供します。\n"
"カウンタ、ゲージ、タイマ、ディストリビューション・サマリなどの基本的なメータ・タイプの API と、さまざまなバックエンド監視システムのメトリクスの収集と伝達を一般化する `MeterRegistry` API を定義します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Micrometer is the recommended approach to metrics for Quarkus."
msgstr "Micrometerは、Quarkusのメトリクスとして推奨されるアプローチです。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"By default, the metrics are exposed on the main HTTP server.\n"
"If you would like to surface metrics from a separate management port, see the <<management-interface,Managed interface>> section."
msgstr ""
"デフォルトでは、メトリクスはメインの HTTP サーバで公開されます。\n"
"別の管理ポートからメトリッ クを表示したい場合は、 xref:management-interface[管理インターフェイス] のセクションを参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Micrometer and monitoring system extensions"
msgstr "マイクロメーターとモニタリングシステムのエクステンション"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"Quarkus Micrometer extensions are structured in the same way as the Micrometer project.\n"
"The `quarkus-micrometer` extension provides core Micrometer support and runtime integration.\n"
"Other Quarkus and Quarkiverse extensions use the Quarkus Micrometer extension to provide support for other monitoring systems."
msgstr ""
"Quarkus Micrometerエクステンションは、Micrometerプロジェクトと同じ構造になっています。 \n"
"`quarkus-micrometer` エクステンションは、Micrometerのコアサポートとランタイムの統合を提供します。\n"
"他のQuarkusやQuarkiverseのエクステンションは、Quarkus Micrometerエクステンションを使用して、他のモニタリングシステムのサポートを提供します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Quarkus extensions:"
msgstr "Quarkus エクステンション:"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer"
msgstr "micrometer"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-prometheus"
msgstr "micrometer-registry-prometheus"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse extensions] (may be incomplete):"
msgstr "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverseのエクステンション] （不完全かもしれません）："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-azure-monitor"
msgstr "micrometer-registry-azure-monitor"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-datadog"
msgstr "micrometer-registry-datadog"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-graphite"
msgstr "micrometer-registry-graphite"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-influx"
msgstr "micrometer-registry-influx"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-jmx"
msgstr "micrometer-registry-jmx"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-newrelic-telemetry"
msgstr "micrometer-registry-newrelic-telemetry"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-otlp"
msgstr "micrometer-registry-otlp"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-signalfx"
msgstr "micrometer-registry-signalfx"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-stackdriver"
msgstr "micrometer-registry-stackdriver"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "micrometer-registry-statsd"
msgstr "micrometer-registry-statsd"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"To add support for Prometheus metrics to your application, for example, use the `micrometer-registry-prometheus` extension.\n"
"It will bring in the Quarkus Micrometer extension and Micrometer core libraries as dependencies."
msgstr ""
"例えば、アプリケーションに Prometheus メトリクスのサポートを追加するには、 `micrometer-registry-prometheus` エクステンションを使用します。\n"
"これにより、Quarkus MicrometerエクステンションとMicrometerコアライブラリが依存ライブラリとして追加されます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Add the extension to your project using following command (from your project directory):"
msgstr "（プロジェクトディレクトリで）以下のコマンドを使用して、エクステンションをプロジェクトに追加します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "And you're all set!"
msgstr "これで準備完了です"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"A similar process applies for other meter registry extensions.\n"
"To use the Micrometer StackDriver MeterRegistry, for example, you would use the\n"
"`quarkus-micrometer-registry-stackdriver` extension from the Quarkiverse:"
msgstr "同様のプロセスは、他のメーターレジストリ拡張にも当てはまります。例えば、Micrometer StackDriver MeterRegistryを使用するには、Quarkiverseの `quarkus-micrometer-registry-stackdriver` エクステンションを使用します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Other registry implementations"
msgstr "その他のレジストリ実装"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"If the Micrometer registry you would like to use does not yet have an associated extension,\n"
"use the `quarkus-micrometer` extension and bring in the Micrometer meter registry dependency directly:"
msgstr ""
"使用する Micrometer レジストリに関連エクステンションがない場合は、 \n"
"`quarkus-micrometer` エクステンションを使用し、Micrometer メーターレジストリの依存関係を直接取り込んでください："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"You will then need to specify your own provider to configure and initialize the\n"
"MeterRegistry, as discussed in the next section."
msgstr "次に、次のセクションで説明するように、MeterRegistry を設定して初期化するために、独自のプロバイダを指定する必要があります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Create a customized MeterRegistry"
msgstr "カスタマイズされたMeterRegistryの作成"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a custom `@Produces` method to create and configure a your own `MeterRegistry` if you need to."
msgstr "必要であれば、カスタム `@Produces` メソッドを使用して、独自の `MeterRegistry` を作成および設定します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "The following example customizes the line format used for StatsD:"
msgstr "以下の例では、StatsDで使用される行フォーマットをカスタマイズしています。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The method returns a `@Singleton`."
msgstr "このメソッドは `@Singleton` を返します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The method returns the specific type of `MeterRegistry`"
msgstr "の特定の型を返します。 `MeterRegistry`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "This example corresponds to the following instructions in the Micrometer documentation: link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Customizing the Metrics Sink]"
msgstr "この例は、Micrometer ドキュメントの以下の指示に対応しています： link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD：メトリクスシンクのカスタマイズ]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Use MicroProfile Config to inject any configuration attributes you need to configure the registry.\n"
"Most Micrometer registry extensions, like `quarkus-micrometer-registry-statsd`, provide registry-specific configuration objects that are integrated with the Quarkus configuration model.\n"
"The link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] can be a useful implementation reference."
msgstr "レジストリを構成するために必要な構成属性を注入するには、MicroProfile Config を使用します。ほとんどのMicrometerレジストリエクステンション（ `quarkus-micrometer-registry-statsd` など）は、Quarkus設定モデルと統合されたレジストリ固有の設定オブジェクトを提供します。 link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repositoryは] 、実装の参考になります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Create your own metrics"
msgstr "独自のメトリクスの作成"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Metrics data is used in the aggregate to observe how data changes over time.\n"
"This data is used for trend analysis, anomaly detection, and alerting.\n"
"Data is stored by backend monitoring systems in time series databases, with new values appended to the end of the series."
msgstr "メトリックスデータは、データが時間とともにどのように変化するかを観察するために集約して使用されます。このデータは傾向分析、異常検知、アラートに使用されます。データは、バックエンドの監視システムによって時系列データベースに保存され、新しい値がシリーズの最後に追加されます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Metrics are constructed lazily. You may not see any data for the metric you're looking for until you've performed an action that will create it, like visiting an endpoint."
msgstr "メトリクスは遅延的に構築されます。エンドポイントにアクセスするなど、メトリックを作成するアクションを実行するまで、探しているメトリックのデータが表示されないことがあります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Naming conventions"
msgstr "命名規則"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Meter names should use dots to separate segments, `a.name.like.this`.\n"
"Micrometer applies naming conventions to convert registered meter names to match the expectations of backend monitoring systems."
msgstr "メーター名は、セグメントを区切るためにドットを使用する必要があります。 `a.name.like.this` 。Micrometerは、登録されたメーター名をバックエンドのモニタリングシステムの期待値と一致させるために、命名規則を適用して変換します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Given the following declaration of a timer: `registry.timer(\"http.server.requests\")`, applied naming conventions will emit the following metrics for different monitoring systems:"
msgstr "次のようなタイマーの宣言があるとします： `registry.timer(\"http.server.requests\")` 、適用される命名規則は、異なるモニタリング・システムに対して次のようなメトリクスを生成します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Prometheus: `http_server_requests_duration_seconds`"
msgstr "Prometheus: `http_server_requests_duration_seconds`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Atlas: `httpServerRequests`"
msgstr "Atlas: `httpServerRequests`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Graphite: `http.server.requests`"
msgstr "Graphite: `http.server.requests`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "InfluxDB: `http_server_requests`"
msgstr "InfluxDB: `http_server_requests`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Define dimensions for aggregation"
msgstr "集計用ディメンジョンの定義"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Metrics, single numerical measurements, often have additional data captured with them. This ancillary data is used to group or aggregate metrics for analysis.\n"
"The Micrometer API refers to this dimensional data as tags, but you may see it referred to as \"labels\" or \"attributes\" in other documentation sources."
msgstr "メトリックス（単一の数値測定値）には、多くの場合、付加的なデータが取り込まれます。この補助データは、分析のためにメトリクスをグループ化または集約するために使用されます。Micrometer API では、この次元データをタグと呼びますが、他のドキュメント・ソースでは「ラベル」または「属性」 と呼ばれることもあります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Micrometer is built primarily for backend monitoring systems that support dimensional data (metric names that are enriched with key/value pairs).\n"
"For hierarchical systems that only support a flat metric name, Micrometer will flatten the set of key/value pairs (sorted by key) and add them to the name."
msgstr "Micrometerは、主に次元データ（キーと値のペアでエンリッチされたメトリック名）をサポートするバックエンド監視システム用に構築されています。フラットなメトリック名しかサポートしない階層システムの場合、Micrometerはキー/値のペアのセットをフラットにして（キーでソートして）、名前に追加します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Tags can be specified when a meter is registered with a `MeterRegistry` or using a <<meter-filter,Meter Filter>>."
msgstr "タグは、メーターが `MeterRegistry` に登録されているとき、または xref:meter-filter[メーターフィルター] を使用して指定できます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "See the Micrometer documentation for additional advice on link:{concepts}#_tag_naming[tag naming]."
msgstr "link:{concepts}#_tag_naming[タグの命名に関する] その他のアドバイスについては、Micrometer のドキュメントを参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Each unique combination of metric name and dimension produces a unique time series.\n"
"Using an unbounded set of dimensional data can lead to a \"cardinality explosion\", an exponential increase in the creation of new time series."
msgstr "メトリック名と次元のユニークな組み合わせは、それぞれユニークな時系列を生成します。次元データの無限のセットを使用すると、新しい時系列の作成が指数関数的に増加する「カーディナリティの爆発」につながる可能性があります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Obtain a reference to a MeterRegistry"
msgstr "MeterRegistry への参照を取得します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "To register meters, you need a reference to a `MeterRegistry`, which is configured and maintained by the Micrometer extension."
msgstr "Micrometerを登録するには、 `MeterRegistry` を参照する必要があります。 はエクステンションによって設定され、管理されています。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use one of the following methods to obtain a reference to a `MeterRegistry`:"
msgstr "以下のいずれかの方法で、 `MeterRegistry` への参照を取得します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Use CDI Constructor injection:"
msgstr "CDIコンストラクタ注入の使用："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a `MeterRegistry` member variable and use `@Inject`:"
msgstr "メンバ変数 `MeterRegistry` を使用し、 `@Inject` ："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use the global `MeterRegistry`:"
msgstr "グローバル `MeterRegistry` ："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Gauges"
msgstr "ゲージ"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Gauges measure a value that can increase or decrease over time, like the speedometer on a car.\n"
"Gauges can be useful when monitoring the statistics for a cache or collection."
msgstr "ゲージは、車のスピードメーターのように、時間の経過とともに増減する値を測定します。ゲージは、キャッシュやコレクションの統計を監視するときに便利です。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Gauge values are sampled rather than set;\n"
"there is no record of how the value associated with a gauge may have changed between measurements."
msgstr "ゲージの値は設定されたものではなく、サンプリングされたものです。ゲージの値が測定の間にどのように変化したかは記録されていません。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Micrometer provides a few mechanisms for creating gauges:"
msgstr "Micrometerには、ゲージを作成するためのいくつかのメカニズムが用意されています："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Wrap construction of a collection to monitor its size:"
msgstr "コレクションをラップして、そのサイズを監視します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new gauge, `list.size`, using the dot-separated convention."
msgstr "新しいゲージ、 `list.size` をドット区切りで作成します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Associate <<define-tags,tags>> with the gauge.\n"
"Gauge tag values are constant, and must be assigned at construction time."
msgstr "xref:define-tags[タグ] をゲージに関連付けます。ゲージのタグの値は一定で、構築時に割り当てる必要があります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Construct the array list whose size should be observed."
msgstr "サイズが観測されるべき配列リストを構築します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a builder to create a Gauge that will call a function:"
msgstr "ビルダーを使用して、関数を呼び出すゲージを作成します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new gauge called `jvm.threads.peak` that will call `getPeakThreadCount` on `threadBean`, an instance of `ThreadMXBean`"
msgstr "のインスタンスである `threadBean` で `getPeakThreadCount` を呼び出す `jvm.threads.peak` という新しいゲージを作成します。 `ThreadMXBean`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Define the base unit, see link:{base-units}[BaseUnits.java] for predefined values."
msgstr "基本単位を定義します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Provide a description of the Gauge"
msgstr "ゲージの説明"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate <<define-tags,tags>> with the gauge"
msgstr "xref:define-tags[タグ] をゲージに関連付けます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Register the Gauge with the MeterRegistry"
msgstr "MeterRegistryにゲージを登録します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"See link:{concepts}#_gauges[Gauges] in the Micrometer documentation for more information and examples.\n"
"Of note are two special cases: `TimeGauge` for measuring time, and a `MultiGauge` for reporting several criteria together."
msgstr "詳細と例については、Micrometer ドキュメントの「 link:{concepts}#_gauges[ゲージ] 」を参照してください。特筆すべきは、2つの特殊なケースです。 `TimeGauge` （時間測定用）と、 `MultiGauge` （複数の基準をまとめて報告用）です。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Micrometer does not create strong references to the objects it observes by default.\n"
"Depending on the registry, Micrometer either omits gauges that observe\n"
"objects that have been garbage-collected entirely or uses `NaN` (not a number) as the observed value."
msgstr "Micrometerはデフォルトで、観測するオブジェクトへの強い参照を作成しません。レジストリによって、Micrometerはガベージコレクションされたオブジェクトを観測するゲージを完全に省略するか、 `NaN` （数値ではない）を観測値として使用します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"When should you use a gauge?\n"
"Only use a gauge when you can't use something else.\n"
"Gauges can be less straight-forward to use than other meters.\n"
"If what you are measuring can be counted (because the value always increments), use a counter instead."
msgstr "ゲージはいつ使うべきですか？ゲージを使うのは、他のものが使えないときだけです。ゲージは、他のメーターに比べて使い方が簡単ではありません。測定値をカウントできる場合は（値が常に増加するため）、代わりにカウンターを使用してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Counters"
msgstr "カウンター"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Counters measure values that only increase.\n"
"Use one of the methods below to create a counter."
msgstr "カウンタは、増加する値のみを測定します。カウンタを作成するには、以下のメソッドのいずれかを使用します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a convenience method on the `MeterRegistry`:"
msgstr "`MeterRegistry` で便利なメソッドを使用します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`example.prime.number` is the counter name."
msgstr "`example.prime.number` はカウンタ名です。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`type` is a dimensional tag with value `prime`."
msgstr "`type` は、値 を持つ次元タグです。 `prime`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `Counter.builder` to provide a description and units:"
msgstr "`Counter.builder` 、説明と単位を記入してください："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new counter called `count.me`"
msgstr "という新しいカウンターを作成します。 `count.me`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Define a custom base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "カスタムの基本単位を定義します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Provide a description for the counter"
msgstr "カウンターの説明"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate <<define-tags,tags>> with the counter"
msgstr "xref:define-tags[タグ] とカウンターの関連付け"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "<<annotations,Annotate>> a method"
msgstr "メソッドの xref:annotations[注釈]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "A CDI interceptor will create and register a counter called `counted.method`"
msgstr "CDI インターセプターは `counted.method`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The interceptor-created counter will have the \"extra\" dimension tag with value \"annotated\""
msgstr "インターセプターが作成したカウンターは、値 \"アノテーション\" を持つ \"extra\" ディメンジョンタグを持ちます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "See link:{concepts}#_counters[Counters] in the Micrometer documentation for more information and examples, including the less common `FunctionCounter` that can be used to measure the result returned by an always increasing function."
msgstr "常時増加する関数が返す結果を測定するために使用できる、あまり一般的でない `FunctionCounter` を含む、より詳細な情報と例については、Micrometer ドキュメントの link:{concepts}#_counters[カウンタ] を参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"When should you use a counter?\n"
"Use a counter if you are doing something that can not be either timed or summarized.\n"
"If you want to understand more about how a value is changing,\n"
"a timer (when the base unit of measurement is time) or a distribution summary might be\n"
"more appropriate."
msgstr "どのような場合にカウンターを使うべきですか？カウンタを使うのは、時間を計ったり要約したりできないようなことをするときです。値がどのように変化しているかをもっと理解したい場合は、タイマ（計測の基本単位が時間の場合）や分布の要約の方が適切かもしれません。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Summaries and Timers"
msgstr "サマリーとタイマー"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers and distribution summaries in Micrometer are very similar. Both meters record data, and can capture additional histogram or percentile data. While distribution summaries can be use for arbitrary types of data, timers are optimized for measuring time and durations."
msgstr "Micrometerのタイマーと分布サマリーは非常によく似ています。どちらのメーターもデータを記録し、さらにヒストグラムやパーセンタイルデータを取り込むことができます。分布サマリーは任意のタイプのデータに使用できますが、タイマーは時間と持続時間の測定に最適化されています。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers and distribution summaries store at least three values internally:"
msgstr "タイマーとディストリビューション・サマリーは、少なくとも3つの値を内部に保存します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "the aggregation of all recorded values as a sum"
msgstr "記録されたすべての値を合計したもの"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "the number of values that have been recorded (a counter)"
msgstr "記録された値の数（カウンタ）"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "the highest value seen within a decaying time window (a gauge)."
msgstr "減衰する時間窓（ゲージ）内で見られる最高値。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a distribution summary"
msgstr "配信サマリーの作成"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Use a distribution summary to record a value, not time.\n"
"Use one of the following methods to create a distribution summary."
msgstr "分布要約を使用して、時間ではなく値を記録します。分布要約を作成するには、以下のいずれかの方法を使用します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`bytes.written` is the summary name"
msgstr "`bytes.written` は要約名"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`protocol` is a dimensional tag with value `http`."
msgstr "`protocol` は、値 を持つ次元タグです。 `http`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `DistributionSummary.builder` to provide a description and units:"
msgstr "`DistributionSummary.builder` 、説明と単位を記入してください："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new distribution summary called `response.size`"
msgstr "という新しいディストリビューションサマリーを作成します。 `response.size`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `bytes` as a base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "`bytes` を基本単位として使用します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Provide a description for the distribution summary"
msgstr "ディストリビューション・サマリーの説明"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate <<define-tags,tags>> with the distribution summary"
msgstr "xref:define-tags[タグ] をディストリビューションの要約に関連付けます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Create a timer"
msgstr "タイマーの作成"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."
msgstr "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Use one of the following methods to construct a timer."
msgstr "Use one of the following methods to construct a timer."

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`fabric.selection` is the summary name"
msgstr "`fabric.selection` は要約名"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`primary` is a dimensional tag with value `blue`."
msgstr "`primary` は、値 を持つ次元タグです。 `blue`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `Timer.builder` to provide a description and units:"
msgstr "`Timer.builder` 、説明と単位を記入してください："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new timer called `my.timer`"
msgstr "という新しいタイマーを作成します。 `my.timer`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers measure time, and will convert it into the units required by the monitoring backend"
msgstr "タイマーは時間を計測し、モニタリングバックエンドが必要とする単位に変換します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate <<define-tags,tags>> with the timer"
msgstr "タイマーに xref:define-tags[タグ] を関連付け"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "A CDI interceptor will create and register a timer called `call`"
msgstr "CDIインターセプターは、次のようなタイマーを作成して登録します。 `call`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The interceptor-created timer will have the \"region\" dimension tag with value \"test\""
msgstr "インターセプターが作成したタイマーは、\"test\" という値を持つ \"region\" ディメンジョンタグを持ちます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Measure durations with Timers"
msgstr "タイマーによる継続時間の測定"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Micrometer provides the following convenience mechanisms for recording durations."
msgstr "Micrometer provides the following convenience mechanisms for recording durations."

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Wrap the invocation of a `Runnable`:"
msgstr "`Runnable` の呼び出しをラップします："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Wrap the invocation of a `Callable`:"
msgstr "`Callable` の呼び出しをラップします："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a wrapped `Runnable` for repeated invocation:"
msgstr "繰り返し呼び出せるように、 `Runnable` をラップして作成します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a wrapped `Callable` for repeated invocation:"
msgstr "繰り返し呼び出せるように、 `Callable` をラップして作成します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a `Sample` for more complex code paths:"
msgstr "より複雑なコードパスには `Sample` ："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "We create a sample, which records the start of the timer."
msgstr "タイマーの開始を記録するサンプルを作成します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The sample can be passed along as context"
msgstr "サンプルはコンテキストとして渡すことができます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "We can choose the timer when the sample is stopped. This example uses a response status as a tag identifying the timer, which won't be known until processing is complete."
msgstr "サンプル停止時のタイマーを選択できます。この例では、タイマーを識別するタグとしてレスポンスステータスを使用しています。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Histograms and percentiles"
msgstr "ヒストグラムとパーセンタイル"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Both timers and distribution summaries can be configured to emit additional statistics, like histogram data, precomputed percentiles, or service level objective (SLO) boundaries.\n"
"See link:{concepts}#_timers[Timers] and link:{concepts}#_distribution_summaries[Distribution Summaries] in the Micrometer documentation for more information and examples, including memory footprint estimation for both types."
msgstr "タイマと分布サマリはどちらも、ヒストグラム・データ、事前計算されたパーセンタイル、サービス・レベル目標（SLO）境界などの追加統計を出力するように設定できます。両タイプのメモリフットプリントの見積もりなど、詳細と例については、Micrometerドキュメントの「 link:{concepts}#_timers[Timer] and link:{concepts}#_distribution_summaries[Distribution Summaries] 」を参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The count, sum, and histogram data associated with timers and distribution summaries can be re-aggregated across dimensions (or across a series of instances)."
msgstr "タイマーおよび分布サマリに関連するカウント、合計、およびヒストグラム・データは、ディメンション全体（または一連のインスタンス全体）で再集計できます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Precomputed percentile values can not. Percentiles are unique to each dataset (the 90th percentile of this collection of measurements)."
msgstr "事前に計算されたパーセンタイル値は計算できません。パーセンタイルは各データセットに固有の値です（この測定値の集合の90パーセンタイル）。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Automatically generated metrics"
msgstr "自動的に生成されるメトリクス"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"The Micrometer extension automatically times HTTP server requests. Following Prometheus naming conventions for\n"
"timers, look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and\n"
"`http_server_requests_seconds_max`. Dimensional labels have been added for the requested uri, the HTTP method\n"
"(GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field."
msgstr "Micrometerエクステンションは、HTTPサーバーのリクエストの時間を自動的に計測します。Prometheus のタイマーの命名規則に従い、 `http_server_requests_seconds_count` 、 `http_server_requests_seconds_sum` 、 `http_server_requests_seconds_max` を参照してください。要求された URI、HTTP メソッド (GET、POST など)、ステータスコード (200、302、404 など)、そしてより一般的な結果フィールドのための次元ラベルが追加されました。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Ignoring endpoints"
msgstr "エンドポイントの無視"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"You can disable measurement of HTTP endpoints using the `quarkus.micrometer.binder.http-server.ignore-patterns`\n"
"property.\n"
"This property accepts a comma-separated list of simple regex match patterns identifying URI paths that should\n"
"be ignored.\n"
"For example, setting `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` will\n"
"ignore a request to `http://localhost:8080/example/prime/7919`.\n"
"A request to `http://localhost:8080/example/gauge/7919`\n"
"would still be measured."
msgstr "`quarkus.micrometer.binder.http-server.ignore-patterns` プロパティを使用して、HTTP エンドポイントの測定を無効にすることができます。このプロパティには、無視すべきURIパスを特定する単純な正規表現のマッチパターンをコンマで区切ったリストを指定できます。例えば、 `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` を設定すると、以下へのリクエストが無視されます。`http://localhost:8080/example/prime/7919` へのリクエストは無視されます。`http://localhost:8080/example/gauge/7919` へのリクエストは、依然として計測されます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "URI templates"
msgstr "URIテンプレート"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"The micrometer extension will make a best effort at representing URIs containing path parameters in templated form.\n"
"Using examples from above, a request to `http://localhost:8080/example/prime/7919` should appear as an attribute of\n"
"`http_server_requests_seconds_*` metrics with a value of `uri=/example/prime/{number}`."
msgstr "micrometerエクステンションでは、パスパラメータを含むURIをテンプレート化して表現することに最善の努力を払います。上の例を使うと、次のようなリクエストは `http://localhost:8080/example/prime/7919` へのリクエストは、 `http_server_requests_seconds_*` メトリクスの属性として、 `uri=/example/prime/{number}` という値で表示されます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"Use the `quarkus.micrometer.binder.http-server.match-patterns` property if the correct URL can not be determined.\n"
"This property accepts a comma-separated list defining an association between a simple regex match pattern and a replacement\n"
"string.\n"
"For example, setting\n"
"`quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` would use the value\n"
"`/example/{jellybeans}` for the uri attribute any time the requested uri matches `/example/prime/[0-9]+`."
msgstr "正しいURLが特定できない場合は、 `quarkus.micrometer.binder.http-server.match-patterns` プロパティを使用します。このプロパティには、単純な正規表現パターンと置換文字列の関連性を定義するコンマ区切りのリストを指定できます。例えば、 `quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` を設定すると、要求された uri が `/example/prime/[0-9]+` に一致した場合、uri 属性に `/example/{jellybeans}` の値が使用されます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Exported metrics format"
msgstr "エクスポートされるメトリクスフォーマット"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"By default, the  metrics are exported using the Prometheus format `application/openmetrics-text`,\n"
"you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr "デフォルトでは、メトリクスはPrometheusのフォーマット `application/openmetrics-text` を使用してエクスポートされます。 `Accept` リクエストヘッダを `plain/text` ( `curl -H \"Accept: plain/text\" localhost:8080/q/metrics/` ) に指定することで、以前のフォーマットに戻すことも可能です。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Customizing Micrometer"
msgstr "マイクロメーターのカスタマイズ"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Quarkus provides a variety of way to customize Micrometer."
msgstr "Quarkus provides a variety of way to customize Micrometer."

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `MeterFilter` to customize emitted tags and metrics"
msgstr "`MeterFilter` を使用して、発行されるタグとメトリックをカスタマイズします。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer uses `MeterFilter` instances to customize the metrics emitted by `MeterRegistry` instances.\n"
"The Micrometer extension will detect `MeterFilter` CDI beans and use them when initializing `MeterRegistry`\n"
"instances."
msgstr "Micrometerは `MeterFilter` インスタンスを使って、 `MeterRegistry` インスタンスが出力するメトリクスをカスタマイズします。 Micrometer エクステンションは、 `MeterFilter` のCDI Beanを検出して、 `MeterRegistry` インスタンスを初期化するときにそれを使います。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"In this example, a singleton CDI bean will produce two different `MeterFilter` beans.\n"
"One will be applied only to\n"
"Prometheus `MeterRegistry` instances (using the `@MeterFilterConstraint` qualifier), and another will be applied\n"
"to all `MeterRegistry` instances.\n"
"An application configuration property is also injected and used as a tag value.\n"
"Additional examples of MeterFilters can be found in the\n"
"link:https://micrometer.io/docs/concepts[official documentation]."
msgstr "この例では、シングルトン CDI Beanは、2 つの異なる `MeterFilter` Beanを生成します。1 つは Prometheus `MeterRegistry` インスタンスのみに適用され ( `@MeterFilterConstraint` 修飾子を使用)、もう 1 つはすべての `MeterRegistry` インスタンスに適用されます。アプリケーション設定プロパティーも注入され、タグ値として使用されます。MeterFiltersのその他の例は、次のリンクにあります：link:https://micrometer.io/docs/concepts[公式ドキュメント] 。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `HttpServerMetricsTagsContributor` for server HTTP requests"
msgstr "サーバーへの HTTP リクエストには `HttpServerMetricsTagsContributor` を使用します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor`, user code can contribute arbitrary tags based on the details of HTTP request"
msgstr "By providing CDI beans that implement `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor`, user code can contribute arbitrary tags based on the details of HTTP request"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr "メータ登録の任意のカスタマイズには `MeterRegistryCustomizer` を使用します。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` user code has the change to change the configuration of any `MeterRegistry` that has been activated.\n"
"Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr "`io.quarkus.micrometer.runtime.MeterRegistryCustomizer` を実装するCDI Beanを提供することで、ユーザコードは、有効化された `MeterRegistry` の構成を変更することができます。実装が `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint` でアノテーションされない限り、カスタマイズはすべての `MeterRegistry` インスタンスに適用されます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Does Micrometer support annotations?"
msgstr "Micrometerはアノテーションをサポートしていますか？"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer does define two annotations, `@Counted` and `@Timed`, that can be added to methods.\n"
"The `@Timed` annotation will wrap the execution of a method and will emit the following tags\n"
"in addition to any tags defined on the annotation itself:\n"
"class, method, and exception (either \"none\" or the simple class name of a detected exception)."
msgstr "Micrometerでは、メソッドに追加できる2つのアノテーション、 `@Counted` と `@Timed` が定義されています。 `@Timed` アノテーションは、メソッドの実行をラップし、アノテーション自体に定義されているタグに加えて、次のタグを出力します：class、method、exception（\"none \"または検出された例外のシンプルなクラス名）。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Parameters to `@Counted` and `@Timed` can be annotated with `@MeterTag` to dynamically assign meaningful tag values."
msgstr "`@Counted` 、 `@Timed` へのパラメータは、 `@MeterTag` でアノテーションすることで、意味のあるタグ値を動的に割り当てることができます。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"`MeterTag.resolver` can be used to extract a tag from a method parameter, by creating a bean\n"
"implementing `io.micrometer.common.annotation.ValueResolver` and referring to this class: `@MeterTag(resolver=CustomResolver.class)`"
msgstr "`MeterTag.resolver` は、 を実装した Bean を作成し、このクラスを参照することで、メソッドパラメータからタグを抽出することができます： `io.micrometer.common.annotation.ValueResolver` `@MeterTag(resolver=CustomResolver.class)`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"`MeterTag.expression` is also supported, but you have to implement the evaluation of the expression\n"
"by creating a bean implementing `io.micrometer.common.annotation.ValueExpressionResolver` that can evaluate expressions."
msgstr "`MeterTag.expression` もサポートされていますが、式を評価できる を実装した Bean を作成して、式の評価を実装する必要があります。 `io.micrometer.common.annotation.ValueExpressionResolver`"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Provided tag values MUST BE of LOW-CARDINALITY.\n"
"High-cardinality values can lead to performance and storage issues in your metrics backend (a \"cardinality explosion\").\n"
"Tag values should not use end-user data, since those could be high-cardinality."
msgstr "提供されるタグ値は、低カーディナリティでなければなりません。カーディナリティの高い値は、メトリクスのバックエンドでパフォーマンスやストレージの問題を引き起こす可能性があります（「カーディナリティの爆発」）。タグ値にはエンド・ユーザー・データを使用しないでください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Many methods, like REST endpoint methods or Vert.x Routes, are counted and timed by the micrometer extension out of the box."
msgstr "RESTエンドポイントメソッドやVert.x Routesのような多くのメソッドは、箱から出してすぐにエクステンションmicrometerでカウントされ、タイムアウトします。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Support for the MicroProfile Metrics API"
msgstr "MicroProfile Metrics API のサポート"

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"If you use the MicroProfile Metrics API in your application,\n"
"the Micrometer extension will create an adaptive layer to map those metrics into the Micrometer registry.\n"
"Note that naming conventions between the two systems is different, so the metrics that are emitted when using MP Metrics with Micrometer will change."
msgstr "アプリケーションで MicroProfile Metrics API を使用する場合、Micrometer エクステンションは、それらのメトリクスを Micrometer レジストリにマッピングするための適応レイヤーを作成します。2 つのシステム間で命名規則が異なるため、Micrometer で MP Metrics を使用するときに出力されるメトリクスが変更されることに注意してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Use a `MeterFilter` to remap names or tags according to your conventions."
msgstr "Use a `MeterFilter` to remap names or tags according to your conventions."

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Ensure the following dependency is present if you require the MicroProfile Metrics API:"
msgstr "MicroProfile Metrics API が必要な場合は、次の依存関係が存在することを確認します："

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The MP Metrics API compatibility layer may be moved to a different extension in the future."
msgstr "MP Metrics APIの互換性レイヤーは、将来的に別のエクステンションに移される可能性があります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Management interface"
msgstr "マネジメントインターフェース"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "By default, the metrics are exposed on the main HTTP server."
msgstr "By default, the metrics are exposed on the main HTTP server."

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.\n"
"Note that this property is a build-time property.\n"
"The value cannot be overridden at runtime."
msgstr "アプリケーションの設定で `quarkus.management.enabled=true` を設定することで、別のネットワーク・インターフェースとポートに公開することができます。このプロパティはビルド時のプロパティであることに注意してください。実行時に値をオーバーライドすることはできません。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."
msgstr "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."

#: _versions/3.15/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "You can configure the path of each exposed format using:"
msgstr "各公開フォーマットのパスは、以下の方法で設定できます："

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid ""
"With such a configuration, the json metrics will be available from `http://0.0.0.0:9000/q/metrics/json`.\n"
"The prometheus metrics will be available from `http://0.0.0.0:9000/q/metrics/prometheus`."
msgstr "このような設定にすることで、json メトリクスが `http://0.0.0.0:9000/q/metrics/json` で利用可能になります。prometheus メトリクスは、 `http://0.0.0.0:9000/q/metrics/prometheus` で利用可能になります。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr "詳しくは、 xref:./management-interface-reference.adoc[マネジメントインターフェイスのリファレンス] を参照してください。"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Quarkus core extensions instrumented with Micrometer"
msgstr "Micrometerで計測されたQuarkusのコアエクステンション"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/cache[`quarkus-cache`]"
msgstr "https://quarkus.io/guides/cache[`quarkus-cache`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[`quarkus-caffeine`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[`quarkus-caffeine`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/smallrye-fault-tolerance[`quarkus-smallrye-fault-tolerance`]"
msgstr "https://quarkus.io/guides/smallrye-fault-tolerance[`quarkus-smallrye-fault-tolerance`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"
msgstr "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/hibernate-orm[`quarkus-hibernate-orm`]"
msgstr "https://quarkus.io/guides/hibernate-orm[`quarkus-hibernate-orm`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[`quarkus-jaxrs-client-reactive`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[`quarkus-jaxrs-client-reactive`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/deploying-to-kubernetes[`quarkus-kubernetes`]"
msgstr "https://quarkus.io/guides/deploying-to-kubernetes[`quarkus-kubernetes`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/logging[`jboss-logging`] (logging API in Quarkus)"
msgstr "https://quarkus.io/guides/logging[`jboss-logging`] (Quarkusのlogging API)"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/mongodb[`quarkus-mongodb-client`]"
msgstr "https://quarkus.io/guides/mongodb[`quarkus-mongodb-client`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-netty[`quarkus-netty`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-netty[`quarkus-netty`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/redis[`quarkus-redis-client`]"
msgstr "https://quarkus.io/guides/redis[`quarkus-redis-client`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/rest[`quarkus-rest`]"
msgstr "https://quarkus.io/guides/rest[`quarkus-rest`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/resteasy[`quarkus-resteasy-jackson`]"
msgstr "https://quarkus.io/guides/resteasy[`quarkus-resteasy-jackson`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/resteasy-client[`quarkus-resteasy-client`]"
msgstr "https://quarkus.io/guides/resteasy-client[`quarkus-resteasy-client`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"
msgstr "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"
msgstr "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-messaging[`quarkus-messaging`]"
msgstr "https://quarkus.io/extensions/io.quarkus/quarkus-messaging[`quarkus-messaging`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "AMQP 1.0"
msgstr "AMQP 1.0"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "RabbitMQ"
msgstr "RabbitMQ"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Kafka"
msgstr "Kafka"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Pulsar"
msgstr "Pulsar"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "JMS"
msgstr "JMS"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "MQTT"
msgstr "MQTT"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Camel Messaging"
msgstr "Camel Messaging"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/stork-reference[`quarkus-smallrye-stork`]"
msgstr "https://quarkus.io/guides/stork-reference[`quarkus-smallrye-stork`]"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http requests)"
msgstr "link:https://quarkus.io/guides/vertx[quarkus-vertx] (httpリクエスト)"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "Configuration Reference"
msgstr "設定リファレンス"

#: _versions/3.15/guides/telemetry-micrometer.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
