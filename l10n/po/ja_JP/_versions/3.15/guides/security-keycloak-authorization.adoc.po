msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr "OpenID Connect (OIDC)とKeycloakを使用した認可の一元化"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Learn how to enable bearer token authorization in your Quarkus application using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr "Quarkusアプリケーションで link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak認可] サービスを使用してベアラートークン認可を有効にし、保護されたリソースへのセキュアなアクセスを実現する方法をご紹介します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `quarkus-keycloak-authorization` extension relies on `quarkus-oidc`.\n"
"It includes a policy enforcer that regulates access to secured resources.\n"
"Access is governed by permissions set in Keycloak.\n"
"Currently, this extension is compatible solely with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications]."
msgstr "`quarkus-keycloak-authorization` エクステンションは `quarkus-oidc` に依存しています。これには、保護されたリソースへのアクセスを規制するポリシーエンフォーサーが含まれています。アクセスはKeycloakで設定されたパーミッションによって管理されます。現在、このエクステンションはQuarkus xref:security-oidc-bearer-token-authentication.adoc[OIDCサービスアプリケーションのみ] に対応しています。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "It provides a flexible and dynamic authorization capability based on Resource-Based Access Control."
msgstr "リソースベースアクセスコントロール(RBAC)に基づく柔軟でダイナミックな認可機能を提供します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Rather than explicitly enforcing access through specific mechanisms such as role-based access control (RBAC), `quarkus-keycloak-authorization` determines request permissions based on resource attributes such as name, identifier, or Uniform Resource Identifier (URI).\n"
"This process involves sending a `quarkus-oidc`-verified bearer access token to Keycloak Authorization Services for an authorization decision."
msgstr "役割ベースのアクセス制御（RBAC）のような特定のメカニズムによって明示的にアクセスを強制するのではなく、 `quarkus-keycloak-authorization` 、名前、識別子、または統一資源識別子（URI）などのリソース属性に基づいて要求の許可を決定します。このプロセスでは、 `quarkus-oidc` -verified bearer access tokenをKeycloak Authorization Servicesに送信して認可を決定します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Use `quarkus-keycloak-authorization` only if you work with Keycloak and have Keycloak Authorization Services enabled to make authorization decisions.\n"
"Use `quarkus-oidc` if you do not work with Keycloak or work with Keycloak but do not have its Keycloak Authorization Services enabled to make authorization decisions."
msgstr "Keycloakと連携し、Keycloak Authorization Servicesを有効にして認可の決定を行う場合のみ、 `quarkus-keycloak-authorization` を使用してください。Keycloakと連携していない場合、またはKeycloakと連携しているが、そのKeycloak Authorization Servicesが認可の決定を行うことを有効にしていない場合は、 `quarkus-oidc` を使用してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"By shifting authorization responsibilities outside your application, you enhance security through various access control methods while eliminating the need for frequent re-deployments whenever security needs evolve.\n"
"In this case, Keycloak acts as a centralized authorization hub, managing your protected resources and their corresponding permissions effectively."
msgstr "認可の責任をアプリケーションの外部に移すことで、さまざまなアクセス制御方法を通じてセキュリティを強化すると同時に、セキュリティのニーズが変化するたびに頻繁に再導入する必要がなくなります。この場合、Keycloakは一元化された認可ハブとして機能し、保護されたリソースとそれに対応する許可を効率的に管理します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"For more information, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide.\n"
"It is important to realize that the Bearer token authentication mechanism does the authentication and creates a security identity.\n"
"Meanwhile, the `quarkus-keycloak-authorization` extension applies a Keycloak Authorization Policy to this identity based on the current request path and other policy settings."
msgstr "詳細については、 xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラー・トークン認証] ガイドを参照してください。ベアラートークン認証メカニズムが認証を行い、セキュリティIDを作成することを理解することが重要です。一方、 `quarkus-keycloak-authorization` エクステンションは、現在のリクエストパスとその他のポリシー設定に基づいて、このIDにKeycloak認可ポリシーを適用します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For more information, see https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services documentation]."
msgstr "詳細については、 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak認可サービスのドキュメント] を参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Prerequisites"
msgstr "前提条件"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org[Keycloak]"
msgstr "https://www.keycloak.org[Keycloak]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Architecture"
msgstr "アーキテクチャ"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "In this example, we build a very simple microservice that offers two endpoints:"
msgstr "この例では、2つのエンドポイントを提供する非常にシンプルなマイクロサービスを構築します："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"These endpoints are protected.\n"
"Access is granted only when a client sends a bearer token with the request.\n"
"This token must be valid, having a correct signature, expiration date, and audience.\n"
"Additionally, the microservice must trust the token."
msgstr "これらのエンドポイントは保護されています。アクセスは、クライアントがベアラ・トークンをリクエストとともに送信した場合にのみ許可されます。このトークンは有効で、正しい署名、有効期限、オーディエンスを持っていなければなりません。さらに、マイクロサービスはトークンを信頼しなければなりません。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The bearer token is issued by a Keycloak server and represents the subject for which the token was issued.\n"
"For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "ベアラートークンはKeycloakサーバーによって発行され、トークンが発行されたサブジェクトを表します。OAuth 2.0の認可サーバーであるため、トークンはユーザーの代理を務めるクライアントも参照します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `/api/users/me` endpoint can be accessed by any user with a valid token.\n"
"As a response, it returns a JSON document with details about the user obtained from the information carried on the token.\n"
"This endpoint is protected with RBAC, and only users granted with the `user` role can access this endpoint."
msgstr "`/api/users/me` エンドポイントは、有効なトークンを持つユーザーであれば誰でもアクセスできます。レスポンスとして、トークン上の情報から取得したユーザーに関する詳細情報を含む JSON ドキュメントが返されます。このエンドポイントは RBAC で保護されており、 `user` ロールを付与されたユーザーだけがこのエンドポイントにアクセスできます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `/api/admin` endpoint is protected with RBAC, and only users granted the `admin` role can access it."
msgstr "`/api/admin` エンドポイントは RBAC で保護されており、 `admin` ロールを付与されたユーザーだけがアクセスできます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This is a very simple example of using RBAC policies to govern access to your resources.\n"
"However, Keycloak supports other policies that you can use to perform even more fine-grained access control.\n"
"By using this example, you'll see that your application is completely decoupled from your authorization policies, with enforcement purely based on the accessed resource."
msgstr "これは、リソースへのアクセスを管理するためにRBACポリシーを使用する非常に簡単な例です。しかし、Keycloakは、さらにきめ細かいアクセス制御を実行するために使用できる他のポリシーもサポートしています。この例を使用すると、アプリケーションが認可ポリシーから完全に切り離され、アクセスされたリソースに基づいて純粋に実施されることがわかります。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Solution"
msgstr "ソリューション"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解決策は `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[ディレクトリー] にあります。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Creating the project"
msgstr "プロジェクトの作成"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This command generates a project, importing the `keycloak-authorization` extension.\n"
"This extension implements a Keycloak Adapter for Quarkus applications and provides all the necessary capabilities to integrate with a Keycloak server and perform bearer token authorization."
msgstr "このコマンドにより、 `keycloak-authorization` エクステンションをインポートしたプロジェクトが生成されます。このエクステンションは、Quarkusアプリケーション用のKeycloakアダプターを実装し、Keycloakサーバーと統合してベアラートークンの認可を実行するために必要なすべての機能を提供します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `oidc` and `keycloak-authorization` extensions\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで次のコマンドを実行することで、 `oidc` と `keycloak-authorization` のエクステンションをプロジェクトに追加できます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This adds the following dependencies to your build file:"
msgstr "これにより、ビルドファイルに以下の依存関係が追加されます："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Let's start by implementing the `/api/users/me` endpoint.\n"
"As you can see in the following source code, it is a regular Jakarta REST resource:"
msgstr "まずは `/api/users/me` エンドポイントを実装してみましょう。以下のソースコードを見ればわかるように、これは通常の Jakarta REST リソースです："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple:"
msgstr "`/api/admin` エンドポイントのソースコードも非常にシンプルです。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Be aware that we have not defined annotations such as `@RolesAllowed` to explicitly enforce access to a resource.\n"
"Instead, the extension is responsible for mapping the URIs of the protected resources in Keycloak and evaluating the permissions accordingly, granting or denying access depending on the permissions granted by Keycloak."
msgstr "リソースへのアクセスを明示的に強制するために、 `@RolesAllowed` のようなアノテーションを定義していないことに注意してください。その代わりに、エクステンションはKeycloakで保護されたリソースのURIをマッピングし、それに応じてパーミッションを評価し、Keycloakによって付与されたパーミッションに応じてアクセスを許可または拒否する責任を負います。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The OpenID Connect extension allows you to define the adapter configuration by using the `application.properties` file, which is usually located in the `src/main/resources` directory."
msgstr "OpenID Connect エクステンションでは、通常 `src/main/resources` ディレクトリにある `application.properties` ファイルを使用してアダプタの設定を定義できます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak launches a container for you when the application is run in dev mode.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "`quarkus.oidc.auth-server-url` に `%prod.` プロファイル接頭辞を追加すると、Dev Services for Keycloak がアプリケーションを Dev モードで実行するときにコンテナを起動するようになります。詳細については、「 xref:keycloak-dev-mode[Devモードでアプリケーションを実行] する」のセクションを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"By default, applications that use the `quarkus-oidc` extension are marked as a `service` type application (see `quarkus.oidc.application-type`).\n"
"This extension also supports only  `web-app` type applications but only if the access token returned as part of the authorization code grant response is marked as a source of roles: `quarkus.oidc.roles.source=accesstoken` (`web-app` type applications check ID token roles by default)."
msgstr "デフォルトでは、 `quarkus-oidc` 拡張を使用するアプリケーションは、 `service` タイプのアプリケーションとしてマークされます（ `quarkus.oidc.application-type` を参照）。このエクステンションも `web-app` タイプのアプリケーションのみをサポートしますが、認可コード付与レスポンスの一部として返されるアクセストークンがロールのソースとしてマークされている場合に限ります: `quarkus.oidc.roles.source=accesstoken` ( `web-app` タイプのアプリケーションはデフォルトで ID トークンのロールをチェックします)。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Starting and configuring the Keycloak server"
msgstr "Keycloak サーバーの起動と設定"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr ""
"アプリケーションを開発モードで実行するときは、Keycloak サーバーを起動しないでください。\n"
"Dev Services for Keycloak がコンテナーを起動します。\n"
"詳細は、<<keycloak-dev-mode,開発モードでアプリケーションを実行する>> セクションを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To start a Keycloak server, use the following Docker command:"
msgstr "Keycloak サーバーを起動するには、以下の Docker コマンドを使用します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "where `keycloak.version` must be `25.0.6` or later and the `keycloak-keystore.jks` can be found in https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr "`keycloak.version` は `25.0.6` 以降でなければならず、 `keycloak-keystore.jks` は link:https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config] にあります。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Try to access your Keycloak server at https://localhost:8543[localhost:8543]."
msgstr "link:https://localhost:8543[localhost:8543] のKeycloakサーバーにアクセスしてみてください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To access the Keycloak Administration Console, log in as the `admin` user.\n"
"The username and password are both `admin`."
msgstr "Keycloak管理コンソールにアクセスするには、 `admin` ユーザーでログインします。ユーザー名とパスワードはいずれも `admin` 。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[レルム設定] ファイルをインポートして新しいレルムを作成します。詳細については、 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいrealmを作成] する方法についてKeycloakのドキュメントを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "After importing the realm you can see the resource permissions:"
msgstr "レルムをインポートすると、リソースのパーミッションが表示されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "It explains why the endpoint has no `@RolesAllowed` annotations - the resource access permissions are set directly in Keycloak."
msgstr "これは、エンドポイントに `@RolesAllowed` のアノテーションがない理由を説明しています。リソースのアクセス許可は、Keycloakで直接設定されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Running the application in dev mode"
msgstr "開発モードでのアプリケーションの実行"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To run the application in dev mode, use:"
msgstr "アプリケーションを開発モードで実行するには、次を使用します:"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] launches a Keycloak container and imports a `quarkus-realm.json`."
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloakは] Keycloakコンテナを起動し、 `quarkus-realm.json` をインポートします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "link:http://localhost:8080/q/dev-ui[q/dev-ui] にある xref:dev-ui.adoc[Dev UI] を開き、 `OpenID Connect` `Dev UI` カードにある `Provider: Keycloak` リンクをクリックします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When asked to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "`OpenID Connect Dev UI` が提供する `Single Page Application` にログインするよう求められた場合："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr "`/api/users/me` リソースにアクセスするための `User Permission` のみを持つ `alice` (パスワード: `alice`) としてログインします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access `/api/admin`, which returns `403`."
msgstr "`/api/admin` にアクセスすると、 `403` が返されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access `/api/users/me`, which returns `200`."
msgstr "`/api/users/me` にアクセスすると、 `200` が返されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr "ログアウトし、 `admin` としてログインします (パスワード: `admin`)。 `admin` は、 `/api/admin` リソースにアクセスするための `Admin Permission` と、 `/api/users/me` リソースにアクセスするための `User Permission` の両方を持っています。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access `/api/admin`, which returns `200`."
msgstr "`/api/admin` にアクセスすると、 `200` が返されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If you have started xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json] that is already configured to support Keycloak Authorization, create a default `quarkus` realm without Keycloak authorization policies.\n"
"In this case, you must select the `Keycloak Admin` link in the `OpenId Connect` Dev UI card and configure link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] in the default `quarkus` realm."
msgstr "xref:security-openid-connect-dev-services.adoc[Keycloak] 認可をサポートするように設定済みのrealmファイル（ link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.jsonなど] ）をインポートせずに xref:security-openid-connect-dev-services.adoc[Keycloak用のDev Services] を開始した場合は、Keycloak認可ポリシーのないデフォルトの `quarkus` realmを作成します。この場合、 `OpenId Connect` Dev UIカードで `Keycloak Admin` リンクを選択し、デフォルトの `quarkus` レルムでKeycloak link:https://www.keycloak.org/docs/latest/authorization_services/index.html[認可] サービスを設定する必要があります。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `Keycloak Admin` link is easy to find in Dev UI:"
msgstr "`Keycloak Admin` のリンクはDev UIで簡単に見つけることができます："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When logging into the Keycloak admin console, the username and password are both `admin`."
msgstr "Keycloakの管理コンソールにログインする際、ユーザー名とパスワードは共に `admin` 。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR file, you can set up Dev Services for Keycloak to transfer this archive to the Keycloak container.\n"
"For instance:"
msgstr "アプリケーションがJARファイルにデプロイされた link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScriptポリシー] で設定されたKeycloak認可を使用する場合、このアーカイブをKeycloakコンテナに転送するようにKeycloak用のdev Servicesを設定できます。例えば"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"`policies` alias is created for the `/policies.jar` classpath resource.\n"
"Policy archive can also be located in the file system."
msgstr "`policies` のエイリアスが クラスパス・リソースに作成されます。ポリシー・アーカイブはファイル・システムに配置することもできます。 `/policies.jar`"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The policies archive is mapped to the `/opt/keycloak/providers/policies.jar` container location."
msgstr "ポリシーアーカイブは、 `/opt/keycloak/providers/policies.jar` コンテナの場所にマッピングされます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Running the application in JVM mode"
msgstr "JVM モードでのアプリケーションの実行"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr "開発モードでアプリケーションを試した後、標準の Java アプリケーションとして実行できます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "First compile it:"
msgstr "まずコンパイルします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Then run it:"
msgstr "次に、以下を実行してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Running the application in native mode"
msgstr "ネイティブモードでアプリケーションの実行"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "This same demo can be compiled into native code; no modifications are required."
msgstr "この同じデモはネイティブコードにコンパイルできます。変更は必要ありません。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment because the runtime technology is included in the produced binary and optimized to run with minimal resources."
msgstr "これは、ランタイム・テクノロジーが生成されたバイナリに含まれており、最小限のリソースで実行できるように最適化されているため、本番環境にJVMをインストールする必要がないことを意味します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Compilation takes a bit longer, so this step is turned off by default; let's build again by enabling the `native` profile:"
msgstr "コンパイルには少し時間がかかるので、このステップはデフォルトではオフになっています。 `native` プロファイルを有効にして、もう一度ビルドしてみましょう："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After a while, you can run this binary directly:"
msgstr "しばらくすると、このバイナリを直接実行できるようになります："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Testing the application"
msgstr "アプリケーションのテスト"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section about testing your application in a dev mode."
msgstr "開発モードでアプリケーションをテストする方法については、前述の「 xref:keycloak-dev-mode[開発モードでアプリケーションを実行する] 」のセクションを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "You can test the application launched in JVM or native modes with `curl`."
msgstr "`curl` を使用して、JVM またはネイティブモードで起動したアプリケーションをテストできます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The application uses bearer token authorization, and the first thing to do is obtain an access token from the Keycloak server to access the application resources:"
msgstr "このアプリケーションはベアラートークン認可を使用しており、アプリケーションのリソースにアクセスするために最初に行うことは、Keycloakサーバーからアクセストークンを取得することです："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The preceding example obtains an access token for user `alice`."
msgstr "前述の例では、ユーザー `alice` のアクセストークンを取得しています。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Any user is allowed to access the\n"
"`http://localhost:8080/api/users/me` endpoint,\n"
"which returns a JSON payload with details about the user."
msgstr "エンドポイントにアクセスできます。 `http://localhost:8080/api/users/me` エンドポイントにアクセスすることができます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, you get a `403` response from the server."
msgstr "エンドポイントは `http://localhost:8080/api/admin` エンドポイントにアクセスできるのは、 `admin` ロールを持つユーザーのみです。以前に発行されたアクセストークンを使用してこのエンドポイントにアクセスしようとすると、サーバーから `403` レスポンスが返されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To access the admin endpoint, get a token for the `admin` user:"
msgstr "admin エンドポイントにアクセスするには、 `admin` ユーザーのトークンを取得します："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Injecting the authorization client"
msgstr "認可クライアントの注入"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In some cases, using the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] is beneficial for tasks such as managing resources and obtaining permissions directly from Keycloak.\n"
"For this purpose, you can inject an `AuthzClient` instance into your beans as follows:"
msgstr "リソースを管理したり、Keycloakから直接権限を取得したりするような作業では、 link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak認可クライアントJava API] を使用することが有益な場合があります。この目的のために、以下のようにBeanに `AuthzClient` インスタンスを注入することができます："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "If you want to use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`; otherwise, no bean is available for injection."
msgstr "`AuthzClient` を直接使用する場合は、 `quarkus.keycloak.policy-enforcer.enable=true` を設定します。設定しない場合は、注入に Bean を使用できません。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Mapping protected resources"
msgstr "保護されたリソースのマッピング"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By default, the extension fetches resources on-demand from Keycloak, using their URI to identify and map the resources in your application that need to be protected."
msgstr "デフォルトでは、エクステンションはKeycloakからリソースをオンデマンドでフェッチし、そのURIを使用してアプリケーション内の保護が必要なリソースを識別してマッピングします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To disable this on-demand fetching and instead pre-load resources at startup, apply the following configuration setting:"
msgstr "このオンデマンド・フェッチを無効にし、代わりに起動時にリソースをプリロードするには、以下のコンフィギュレーション設定を適用します："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The time required to pre-load resources from Keycloak at startup varies based on their quantity, potentially affecting your application's initial load time.\""
msgstr "起動時にKeycloakからリソースをプリロードするのに必要な時間は、その量によって異なるため、アプリケーションの初期ロード時間に影響を与える可能性があります。\""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "More about configuring protected resources"
msgstr "保護されたリソースの設定に関する詳細"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr "デフォルト設定では、Keycloak はロールを管理し、誰がどのルートにアクセスできるかを決定します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr ""
"`@RolesAllowed` アノテーションまたは `application.properties` ファイルを使用して保護されたルートを設定するには、xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) ベアラートークン認証] および xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] ガイドを確認してください。\n"
"詳細は、xref:security-overview.adoc[Quarkus セキュリティーの概要] を参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access to public resources"
msgstr "パブリックリソースへのアクセス"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To enable access to a public resource without the `quarkus-keycloak-authorization` applying its policies, create a `permit` HTTP Policy configuration in `application.properties`.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr "`quarkus-keycloak-authorization` がポリシーを適用せずに公開リソースへのアクセスを有効にするには、 `application.properties` で `permit` HTTP ポリシー設定を作成します。詳細については、「 xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] 」ガイドを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "There's no need to deactivate policy checks for a Keycloak Authorization Policy with settings such as these:"
msgstr "このような設定でKeycloak認可ポリシーのポリシーチェックを無効にする必要はありません："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To block access to the public resource to anonymous users, you can create an enforcing Keycloak Authorization Policy:"
msgstr "匿名ユーザーによる公開リソースへのアクセスをブロックするには、Keycloak認可ポリシーを作成します："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "パブリックリソースへの匿名アクセスを制御する必要がある場合、デフォルトのテナント設定のみが適用されます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Checking permission scopes programmatically"
msgstr "プログラムを使用してパーミッションスコープを確認する"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In addition to resource permissions, you can specify method scopes.\n"
"The scope usually represents an action that can be performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr "リソース権限に加えて、メソッドスコープを指定することもできます。スコープは通常、リソースに対して実行できるアクションを表します。メソッド・スコープを使ってKeycloak認可ポリシーを作成できます。たとえば"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "User must have resource permission 'Scope Permission Resource' and scope 'read'"
msgstr "ユーザーはリソースパーミッション 'Scope Permission Resource' とスコープ 'read' を持っている必要があります。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Policy Enforcer now secures the `/api/protected/standard-way` request path, eliminating the need for additional annotations such as `@RolesAllowed`.\n"
"However, in certain scenarios, a programmatic check is necessary.\n"
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr "キークローク ポリシーエンフォーサーは、 `/api/protected/standard-way` リクエストパスをセキュアにし、 `@RolesAllowed` のような追加のアノテーションを不要にします。 しかし、特定のシナリオでは、プログラムによるチェックが必要です。次の例に示すように、 Bean に `SecurityIdentity` インスタンスを注入することでこれを実現できます。あるいは、リソースメソッドに `@PermissionsAllowed` をアノテーションしても同じ結果が得られます。以下の例では、3つのリソースメソッドを示します。 それぞれが同じ `read` スコープを必要とします："

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/standard-way` requires both resource permission and scope `read` according to the configuration properties we previously set in the `application.properties`."
msgstr "リクエストサブパス `/standard-way` は、先に `application.properties` で設定した設定プロパティに従って、 リソースパーミッションとスコープ `read` の両方を必要とします。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/programmatic-way` only requires permission `Scope Permission Resource`, but we can enforce scope with `SecurityIdentity#checkPermission`."
msgstr "リクエストサブパス `/programmatic-way` にはパーミッション `Scope Permission Resource` だけが必要ですが、 `SecurityIdentity#checkPermission` でスコープを強制することができます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `@PermissionsAllowed` annotation only grants access to the requests with permission `Scope Permission Resource` and scope `read`.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Security Authorization guide."
msgstr "`@PermissionsAllowed` アノテーションは、パーミッション `Scope Permission Resource` 、スコープ `read` 。詳細はセキュリティ認可ガイドの xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[アノテーションを使った認可] のセクションを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy]."
msgstr "xref:security-openid-connect-multitenancy.adoc[OpenID Connect（OIDC）のマルチテナントと] 同様に、テナントごとにポリシーエンフォーサーの設定を行うことができます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "For example:"
msgstr "例えば、以下のようになります。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Dynamic tenant configuration resolution"
msgstr "動的なテナント設定の解決"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If you need a more dynamic configuration for the different tenants you want to support and don’t want to end up\n"
"with multiple entries in your configuration file, you can use the `io.quarkus.keycloak.pep.TenantPolicyConfigResolver`."
msgstr "サポートするテナントが異なるためにより動的な設定が必要で、設定ファイルに複数のエントリを作成したくない場合は、 `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` ."

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "This interface allows you to dynamically create tenant configurations at runtime:"
msgstr "このインターフェイスを使用すると、実行時にテナント設定を動的に作成することができます。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Create or update the `/enhanced-config` path in the default tenant config."
msgstr "デフォルトのテナント構成で、 `/enhanced-config` パスを作成または更新します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Add `/new-config` path into tenant config populated with documented configuration default values."
msgstr "`/new-config` パスをテナント設定に追加し、文書化された設定のデフォルト値を入力します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Use default static tenant configuration resolution based on the `application.properties` file and other SmallRye Config configuration sources."
msgstr "`application.properties` ファイルおよびその他の SmallRye Config 構成ソースに基づき、デフォルトの静的テナント構成解決を使用します。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"This configuration adheres to the official https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration] guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr ""
"この設定は、公式の https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer 設定] ガイドラインに準拠しています。\n"
"さまざまな設定オプションの詳細は、次のドキュメントを参照してください。"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "References"
msgstr "リファレンス"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "https://www.keycloak.org/documentation.html[Keycloakドキュメント]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"
