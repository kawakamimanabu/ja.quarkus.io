msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Dev UI for extension developers"
msgstr "エクステンション開発者のためのDev UI"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Dev UI v2"
msgstr "Dev UI v2"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This guide covers the Dev UI v2, which is the default from Quarkus 3 onwards."
msgstr "このガイドでは、Quarkus 3以降のデフォルトであるDev UI v2について説明します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr "このガイドでは、 link:building-my-first-extension.html[エクステンションの作成者]向けにQuarkus Dev UIについて説明します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid ""
"Quarkus ships with a Developer UI, which is available in dev mode (when you start\n"
"quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-ui[/q/dev-ui] by default. It will show you something like\n"
"this:"
msgstr ""
"Quarkus には Developer UI が搭載されており、dev モード (`mvn quarkus:dev` で Quarkus を起動) で使用可能で、\n"
"デフォルトで http://localhost:8080/q/dev-ui[/q/dev-ui] に存在し、次のような画面が表示されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "It allows you to:"
msgstr "これにより、次のことが可能になります:"

#: _versions/3.15/guides/dev-ui.adoc
msgid "quickly visualize all the extensions currently loaded"
msgstr "現在ロードされているすべてのエクステンションを素早く視覚化"

#: _versions/3.15/guides/dev-ui.adoc
msgid "view extension statuses and go directly to extension documentation"
msgstr "エクステンションのステータス表示とドキュメントへの直接移動"

#: _versions/3.15/guides/dev-ui.adoc
msgid "view and change `Configuration`"
msgstr "`Configuration` の表示と変更"

#: _versions/3.15/guides/dev-ui.adoc
msgid "manage and visualize `Continuous Testing`"
msgstr "管理と可視化 `Continuous Testing`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "view `Dev Services` information"
msgstr "`Dev Services` の情報の表示"

#: _versions/3.15/guides/dev-ui.adoc
msgid "view the Build information"
msgstr "ビルド情報の表示"

#: _versions/3.15/guides/dev-ui.adoc
msgid "view and stream various logs"
msgstr "各種ログの表示とストリーミング"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Each extension used in the application will be listed. There, you can find the guides, additional information, and the applicable configuration for each extension:"
msgstr "アプリケーションで使用されるエクステンションがリストされます。各エクステンションのガイド、追加情報、適用可能な設定が表示されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Make my extension extend the Dev UI"
msgstr "エクステンションで Dev UI を拡張する"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To make your extension listed in the Dev UI, you don't need to do anything!"
msgstr "何をしなくても、Dev UI にエクステンションが表示されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "So you can always start with that :)"
msgstr "だから、いつでもそれから始めることができます :)"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Extensions can:"
msgstr "エクステンションは可能である："

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<add-links-to-an-extension-card,Add links to an extension card>>"
msgstr "<<add-links-to-an-extension-card,Add links to an extension card>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<add-full-pages,Add full custom pages>>"
msgstr "<<add-full-pages,Add full custom pages>>"

#: _versions/3.15/guides/dev-ui.adoc
#, fuzzy
msgid "<<add-a-log-file,Add a log stream>>"
msgstr "xref:add-a-log-file[ログストリームの追加]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<add-a-section-menu,Add a section menu>>"
msgstr "<<add-a-section-menu,Add a section menu>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<custom-cards,Create a custom card>>"
msgstr "<<custom-cards,Create a custom card>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Add links to an extension card"
msgstr "エクステンションカードにリンクを追加"

#: _versions/3.15/guides/dev-ui.adoc
msgid "External links"
msgstr "外部リンク"

#: _versions/3.15/guides/dev-ui.adoc
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text, or other data."
msgstr "これらは、他の (Dev UI の外の) データを参照するリンクで、HTML ページ、テキスト、その他のデータがあります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated OpenAPI schema in both JSON and YAML format, and a link to Swagger UI:"
msgstr "その良い例としては、JSON と YAML の両方のフォーマットで生成された OpenAPI スキーマへのリンクと、Swagger UI へのリンクが含まれる SmallRye OpenAPI エクステンションが挙げられます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The links to these external references are known at build time. So to get links like this on your card, you add the following Build Step in your extension:"
msgstr "外部参照へのリンクはビルド時に判明するため、このようなリンクをカードに表示するには、エクステンションに以下のビルドステップを追加します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Always make sure that this build step is only run when in dev mode"
msgstr "このビルド・ステップは、常にdevモードのときだけ実行されるようにしてください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To add anything on the card, you must return/produce a `CardPageBuildItem`."
msgstr "カードに何かを追加するには、 `CardPageBuildItem` を返す/生成する必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`."
msgstr "リンクを追加するには `addPage` メソッドを使用します。すべてのリンクが \"page\" に移動します。 `Page` には、ページの構築を支援するビルダーがいくつかあります。 `external` リンクの場合は、 `externalPageBuilder` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Adding the url of the external link (in this case, we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non-application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr "外部リンクの URL を追加します。ここでは、リンクが設定可能な非アプリケーションパス (デフォルトは `/q`) の下にあるため、 `NonApplicationRootPathBuildItem` を使用してリンクを作成します。リンクが `/q` の下にある場合は、必ず `NonApplicationRootPathBuildItem` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr "移動先のコンテンツのコンテンツタイプを (オプションで) ヒントとして表示できます。ヒントがない場合、 `MediaType` を決定するためにヘッダー呼び出しが実行されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can add an icon. All free font-awesome icons are available."
msgstr "アイコンを追加できます。無料の font-awesome アイコンが利用可能です。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Note about icons"
msgstr "アイコンに関する注意事項"

#: _versions/3.15/guides/dev-ui.adoc
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`."
msgstr "https://fontawesome.com/search?o=r&m=free[Font awesome] でアイコンを見つけた場合は、次のようにマッピングできます。たとえば、 `<i class=\"fa-solid fa-house\"></i>` は `font-awesome-solid:house` にマッピングされるため、 `fa` は `font-awesome` になり、アイコン名から `fa-` が削除されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Embedding external content"
msgstr "外部コンテンツの埋め込み"

#: _versions/3.15/guides/dev-ui.adoc
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered, and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example, the OpenAPI schema document in YAML format:"
msgstr "デフォルトでは、外部リンクも Dev UI の内部 (埋め込み) でレンダリングされます。HTML の場合、ページがレンダリングされ、その他のコンテンツはメディアタイプをマークアップするために link:https://codemirror.net/[code-mirror] を使用して表示されます。たとえば `yaml` 形式のOpenAPI スキーマドキュメントは、次のようになります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr "コンテンツを埋め込みたくない場合は、ページビルダーの `.doNotEmbed()` 、リンクを新しいタブで開くことができます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Runtime external links"
msgstr "ランタイム外部リンク"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case, you can use a <<JsonRPC>> Method that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr "上記の例では、ビルド時に使用するリンクが判明していることを前提としていますが、そうでないこともあります。その場合は、追加するリンクを返す <<JsonRPC>> を使用できます。これは、リンクの作成時に使用します。ページビルダーで `.url` メソッドを使用する代わりに、 `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Adding labels"
msgstr "ラベルの追加"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can add an option label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr "ページビルダーのビルダーメソッドの 1 つを使用して、カード内のリンクにオプションラベルを追加できます。以下のラベルがあります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr "静的 (ビルド時に既知のラベル) `.staticLabel(\"staticLabelValue\")`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "動的 (実行時にロード) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "ストリーミング (実行時に更新される値の継続的なストリーミング)値を継続的にストリーミング `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "For dynamic and streaming labels, see the <<JsonRPC>> Section."
msgstr "動的ラベルとストリーミングラベルについては、<<JsonRPC>> セクションを参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Add full pages"
msgstr "ページ全体の追加"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can also link to an \"internal\" page (as opposed to the above \"external\" page). This means that you can build the page and add data and actions for rendering in Dev UI."
msgstr "\"内部\" ページ (上記の \"外部\" ページとは対照的) にリンクすることもできます。つまり、ページをビルドし、Dev UI でレンダリングするためのデータとアクションを追加できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Build time data"
msgstr "ビルド時データ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To make build time data available on your full page, you can add any data to your `CardPageBuildItem` with a key and a value:"
msgstr "ビルド時データをページ全体で利用できるようにするには、キーと値を使用して任意のデータを `CardPageBuildItem` に追加します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr "ページに必要なことがビルド時にわかっているすべてのデータに対して、これらのキーと値のペアを複数追加できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "There are a few options to add full page content in Dev UI. Starting from the most basic (good start) to a full blown web-component (preferred)."
msgstr "Dev UI にページ全体のコンテンツを追加する方法としては、いくつかのオプションがあります。最も基本的なもの (入門向け) から本格的な Web コンポーネント (推奨) まであります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Display some build time data on a screen (without having to do frontend coding):"
msgstr "ビルド時データを画面に表示します (フロントエンドのコーディングは不要)。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "If you have some data that is known at build time that you want to display, you can use one of the following builders in `Page`:"
msgstr "ビルド時に表示したいデータがわかっている場合は、 `Page` で次のいずれかのビルダーを使用できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<raw-data,Raw data>>"
msgstr "<<raw-data,Raw data>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<table-data,Table data>>"
msgstr "<<table-data,Table data>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<qute-data,Qute data>>"
msgstr "<<qute-data,Qute data>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<web-component-page,Web Component page>>"
msgstr "<<web-component-page,Web Component page>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Raw data"
msgstr "生データ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This will display your data in its raw (serialised) JSON value:"
msgstr "データは、生の (シリアル化された) JSON 値で表示されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Use the `rawDataPageBuilder`."
msgstr "`rawDataPageBuilder` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr "Page BuildItem の `addBuildTimeData` でビルド時データを追加したときに使用したキーにリンクします。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "That will create a link to a page that renders the raw data in JSON:"
msgstr "これにより、生データを JSON でレンダリングするページへのリンクが作成されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Table data"
msgstr "テーブルデータ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr "構造上可能な場合は、ビルド時データをテーブルに表示することもできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Use the `tableDataPageBuilder`."
msgstr "`tableDataPageBuilder` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Optionally only show certain fields."
msgstr "オプションで特定のフィールドのみを表示します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "That will create a link to a page that renders the data in a table:"
msgstr "これにより、テーブル内のデータをレンダリングするページへのリンクが作成されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Qute data"
msgstr "Qute データ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr "quteテンプレートを使用して、ビルドタイムデータを表示することもできます。すべてのビルドタイム・データ・キーは、テンプレートで使用できます："

#: _versions/3.15/guides/dev-ui.adoc
msgid "Use the `quteDataPageBuilder`."
msgstr "`quteDataPageBuilder` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr "`/deployment/src/main/resources/dev-ui/` の Qute テンプレートにリンクします。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Use any Qute template to display the data, for example, `qute-jokes-template.html`:"
msgstr "データを表示するには、任意の Qute テンプレートを使用します (例: `qute-jokes-template.html`)。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr "Page Build Item のビルド時データキーとして `jokes` が追加されました。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Web component page"
msgstr "Web コンポーネントページ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To build an interactive page with actions and runtime (or build time) data, you must use the web component page:"
msgstr "アクションとランタイム (またはビルド時) データを含むインタラクティブページをビルドするには、Web コンポーネントページを使用する必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Use the `webComponentPageBuilder`."
msgstr "`webComponentPageBuilder` を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Link to the Web Component in `/deployment/src/main/resources/dev-ui/`. The title can also be defined (using `.title(\"My title\")` in the builder), but if not, the title will be assumed from the componentLink, which should always have the format `qwc` (stands for Quarkus Web Component) dash `extensionName` (example, `arc` in this case ) dash `page title` (\"Beans\" in this case)"
msgstr "`/deployment/src/main/resources/dev-ui/` の Web コンポーネントへのリンク。タイトルも (ビルダーで `.title(\"My title\")` を使用して定義できますが、定義しない場合は componentLink からタイトルが取得されます。componentLink の形式は必ず `qwc` (Quarkus Web Component の略) ダッシュ `extensionName` (この例では `arc`) ダッシュ `page title` (ここでは \"Beans\") です。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr "Dev UI は、これらの Web コンポーネントの構築を容易にするために https://lit.dev/[Lit] を使用します。Web コンポーネントと Lit の詳細は、以下を参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr "https://www.webcomponents.org/introduction[Web コンポーネントスタートガイド]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr "https://lit.dev/docs/[Lit ドキュメント]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Basic structure of a Web component page"
msgstr "Web コンポーネントページの基本構造"

#: _versions/3.15/guides/dev-ui.adoc
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr "Web コンポーネントページは、新しい HTML 要素を作成する JavaScript クラスです。"

#: _versions/3.15/guides/dev-ui.adoc
msgid ""
"You can import Classes and/or functions from other libraries.\n"
"In this case, we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr ""
"他のライブラリーからクラスや関数をインポートできます。\n"
"その場合、 `Lit` の `LitElement` クラスと `html` および `css` 関数を使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr "ビルド・ステップで定義されたビルド・タイム・データは、キーを使用して `build-time-data` から常にインポートすることができます。ビルド・ステップで追加されたすべてのキーが使用可能になります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component), then Extension Name, then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr "コンポーネントの名前は、Qwc (Quarkus Web Component の略)、エクステンション名、ページタイトルの順に、すべて Camel Case で連結した形式にする必要があります。これは、前述のファイル名の形式とも一致します。コンポーネントは `LitComponent` を拡張する必要もあります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr "CSS スタイルは `css` 関数を使用して追加でき、これらのスタイルはコンポーネントにのみ適用されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc.)"
msgstr "スタイルは、グローバルに定義された CSS 変数を参照して、特にライトモードとダークモードの切り替え時にページが正しくレンダリングされるようにすることができます。すべての CSS 変数は、Vaadin のドキュメント ((https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[カラー]、 https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[・サイズと間隔]など) で確認できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component should re-render. In this case, the beans are Build time data and only change on hot-reload, which will be covered later."
msgstr "プロパティを追加することができます。プロパティがプライベートである場合は、プロパティの前に `_` を使用します。プロパティは通常HTMLテンプレートに注入され、そのプロパティが変更された場合、コンポーネントを再レンダリングすることを意味する状態を持つように定義できます。この場合、ビーンズはビルド時間データであり、ホットリロード時にのみ変更されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Constructors (optional) should always call `super` first and then set the default values for the properties."
msgstr "コンストラクター (オプション) は必ず最初に `super` を呼び出し、次にそのプロパティーのデフォルト値を設定する必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The render method (from `LitElement`) will be called to render the page. In this method, you return the markup of the page you want. You can use the `html` function from `Lit`, which gives you a template language to output the HTML you want. Once the template is created, you must only set or change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr "ページをレンダリングするために、render メソッドが (`LitElement` から) 呼び出されます。このメソッドでは、必要なページのマークアップを返します。 `Lit` の `html` 関数を使用すると、必要な HTML を出力するためのテンプレート言語を取得できます。テンプレートの作成後は、プロパティーを設定または変更するだけでページコンテンツを再レンダリングできます。詳細は、 https://lit.dev/docs/components/rendering/[Lit html] を参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can use the built-in template functions to do conditional, list, etc. Read more about https://lit.dev/docs/templates/overview/[Lit Templates]"
msgstr "組み込みのテンプレート関数を使用して、conditional、list などを実行できます。詳細は、 https://lit.dev/docs/templates/overview/[Lit テンプレート] を参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You must always register your Web component as a custom element, with a unique tag. Here, the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr "Web コンポーネントは、必ず一意のタグを持つカスタム要素として登録する必要があります。その場合のタグは、ファイル名と同じ形式 (`qwc` ダッシュ `エクステンション名` ダッシュ `ページタイトル`) である必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Using Vaadin UI components for rendering"
msgstr "レンダリングに Vaadin UI コンポーネントを使用する"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Dev UI makes extensive usage of https://vaadin.com/docs/latest/components[Vaadin web components] as UI Building blocks."
msgstr "Dev UI では、UI ビルディングブロックとして https://vaadin.com/docs/latest/components[Vaadin Web コンポーネント] を広範に使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "As an example, the Arc Beans are rendered using a https://vaadin.com/docs/latest/components/grid[Vaadin Grid]:"
msgstr "たとえば、Arc Beans は https://vaadin.com/docs/latest/components/grid[Vaadin Grid] を使用してレンダリングされます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Import the Vaadin component you want to use"
msgstr "使用する Vaadin コンポーネントをインポートします。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can also import other functions if needed"
msgstr "必要に応じて他の関数をインポートすることもできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can also use any component in the Qomponent library, described below"
msgstr "以下で説明する Qomponent ライブラリーの任意のコンポーネントを使用することもできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Qomponent"
msgstr "Qomponent"

#: _versions/3.15/guides/dev-ui.adoc
msgid "We also include all components from the https://github.com/qomponent[Qomponent] library"
msgstr "https://github.com/qomponent[Qomponent] ライブラリーのすべてのコンポーネントも含まれています。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://www.npmjs.com/package/@qomponent/qui-card[Card]"
msgstr "https://www.npmjs.com/package/@qomponent/qui-card[Card]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://www.npmjs.com/package/@qomponent/qui-badge[Badge]"
msgstr "https://www.npmjs.com/package/@qomponent/qui-badge[Badge]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://www.npmjs.com/package/@qomponent/qui-alert[Alert]"
msgstr "https://www.npmjs.com/package/@qomponent/qui-alert[Alert]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://www.npmjs.com/package/@qomponent/qui-code-block[Code block]"
msgstr "https://www.npmjs.com/package/@qomponent/qui-code-block[Code block]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Card"
msgstr "Card"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Card component to display contents in a card"
msgstr "カード内のコンテンツを表示する Card コンポーネント。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Badge"
msgstr "Badge"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Badge UI Component based on the https://vaadin.com/docs/latest/components/badge[vaadin themed] badge"
msgstr "https://vaadin.com/docs/latest/components/badge[vaadin themed] バッジに基づく Badge UI コンポーネント。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can use any combination of small, primary, pill, with icon and clickable with any level of `default`, `success`, `warning`, `error`, `contrast`, or set your own colors."
msgstr "small、primary、pill、アイコン付き、クリッカブル を `default`、 `success`、 `warning`、 `error`、 `contrast` の任意のレベルと組み合わせて使用することも、独自のカラーを設定することもできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Alert"
msgstr "Alert"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Alerts are modeled around the Bootstrap alerts. Click https://getbootstrap.com/docs/4.0/components/alerts[here] for more info."
msgstr "アラートはBootstrapアラートをモデルにしています。詳しくは link:https://getbootstrap.com/docs/4.0/components/alerts[こちら] をクリックしてください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Also, see the Notification controller below as an alternative."
msgstr "あるいは、以下の Notification コントローラーを参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Code block"
msgstr "Code block"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Display a code block. This component is aware of the theme and will use the correct codemirror theme to match the light/dark mode."
msgstr "コードブロックを表示します。このコンポーネントはテーマを認識し、ライト/ダークモードに合わせて適切な codemirror テーマを使用します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Or fetching the contents from a URL:"
msgstr "または、URL からコンテンツを取得します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To make sure that the code block adopt the correct code-mirror theme (based on the current one in Dev UI), you can do the following:"
msgstr "コードブロックが正しい code-mirror テーマ (Dev UI の現在のテーマに基づく) を採用していることを確認するには、次の操作を実行します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Then change the `extends` to observe state:"
msgstr "次に、状態を観察するために `extends` を変更します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Now you can get the current theme, so add the `theme` property to your code block, example:"
msgstr "これで現在のテーマを取得できるようになりました。次の例のように、コードブロックに `theme` プロパティーを追加します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid ""
"Modes:\n"
" - properties\n"
" - js\n"
" - java\n"
" - xml\n"
" - json\n"
" - yaml\n"
" - sql\n"
" - html\n"
" - css\n"
" - sass\n"
" - markdown"
msgstr ""
"モード:\n"
" - properties\n"
" - js\n"
" - java\n"
" - xml\n"
" - json\n"
" - yaml\n"
" - sql\n"
" - html\n"
" - css\n"
" - sass\n"
" - markdown"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Internal components"
msgstr "内部コンポーネント"

#: _versions/3.15/guides/dev-ui.adoc
msgid "IDE link"
msgstr "IDE リンク"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr "ユーザーの IDE (IDE を検出できる場合) で開くことができるリソース (Java ソースファイルなど) へのリンクを作成します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Using internal controllers"
msgstr "内部コントローラーの使用"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr "特定のことを簡単にするために、いくつかの link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[内部コントローラー] が用意されている："

#: _versions/3.15/guides/dev-ui.adoc
msgid "Notifier"
msgstr "Notifier"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Storage"
msgstr "Storage"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Log"
msgstr "Log"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Router"
msgstr "Router"

#: _versions/3.15/guides/dev-ui.adoc
msgid "<<JsonRPC>>"
msgstr "<<JsonRPC>>"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, which will create a more prominent toast message."
msgstr "これは容易にトーストメッセージを表示できる方法です。トーストは画面上に配置でき (デフォルトでは左下)、レベル (Info、Success、Warning、Error) を設定できます。いずれかのレベルを primary にすることで、目を引くトーストメッセージを作成できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr "このコントローラーのソースについては、 https://github.com/quarkusio/quarkus/Blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[こちら] を参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Example usage:"
msgstr "使用例:"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr "有効な位置はすべて https://vaadin.com/docs/latest/components/notification/#position[こちら] で確認できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, which is scoped for your extension. This way, you do not have to worry that you might clash with another extension."
msgstr "安全にローカルストレージにアクセスできる方法です。これにより、エクステンションをスコープとするローカルストレージに値が保存されます。この方法では、別のエクステンションと競合する心配はありません。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr "ローカルストレージは、ユーザーの好みや状態を記憶するのに便利です。例えば、フッターは一番下の引き出しの状態（開閉）と開いたときのサイズを記憶しています。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
#, fuzzy
msgid ""
"The log controller is used to add control buttons to a (footer) log.\n"
"See <<Add a log file>>."
msgstr "ログコントローラは、（フッター）ログにコントロールボタンを追加するために使用されます。 <<Add a log file>> を参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr "ルーターは主に内部で使用されます。これは、SPA内の正しいページ/セクションにURLをルーティングするために、隠れて link:https://github.com/vaadin/router[Vaadin Router] を使用しています。これはナビゲーションを更新し、履歴(戻るボタン)を許可します。これはまた、複数のページを持つエクステンションで利用可能なサブメニューを作成します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr "https://github.com/quarkusio/quarkus/Blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] には、役立ちそうなメソッドが記載されています。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Communicating to the backend"
msgstr "バックエンドとの通信"

#: _versions/3.15/guides/dev-ui.adoc
msgid "JsonRPC against the Runtime classpath"
msgstr "ランタイムクラスパスに対する JsonRPC"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can fetch or stream runtime data (rather than <<Build time data>> discussed earlier) or execute methods against the runtime classpath (as opposed to deployment classpath). There are two parts to getting data during runtime. The Java side in the runtime module, and then the usage in the web component."
msgstr "ランタイムデータ (前述の <<Build time data>> ではない) を取得またはストリーミングするか、ランタイムクラスパス (デプロイメントクラスパスの対照) に対してメソッドを実行できます。実行時のデータ取得には、ランタイムモジュールの Java 側と、Web コンポーネントでの使用という 2 つのパートがあります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "*Java part*"
msgstr "*Java パート*"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This code is responsible for making data available to display on the UI."
msgstr "このコードは、データを UI に表示できるようにする役割を担います。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You must register the `JsonPRCService` in your processor in the deployment module:"
msgstr "デプロイメントモジュールのプロセッサーに `JsonPRCService` を登録する必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Always only do this in Dev Mode"
msgstr "必ず開発モードでのみ実行してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Produce or return a `JsonRPCProvidersBuildItem`"
msgstr "`JsonRPCProvidersBuildItem` を生成または返します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Define the class in your runtime module that will contain methods that make data available in the UI"
msgstr "ランタイム・モジュールの中に、UIでデータを利用可能にするメソッドを含むクラスを定義する。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Now, in your Runtime module, create the JsonRPC Service. This class will default to an application-scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr "次に、ランタイムモジュールで JsonRPC サービスを作成します。このクラスは、Bean を明示的にスコープ指定しない限り、デフォルトでアプリケーションスコープの Bean になります。何かを返すすべてのパブリックメソッドは、Web コンポーネントの Javascript から呼び出すことができるようになります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The return object in these methods can be:"
msgstr "これらのメソッドで返されるオブジェクトは次のとおりです。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "primitives or `String`,"
msgstr "プリミティブまたは `String`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#: _versions/3.15/guides/dev-ui.adoc
msgid "any other POJO that can be serializable to JSON"
msgstr "JSON にシリアル化できるその他の POJO"

#: _versions/3.15/guides/dev-ui.adoc
msgid "All of the above can be blocking (POJO) or nonblocking (`@NonBlocking` or `Uni`). Alternatively, data can be streamed using `Multi`."
msgstr "上記のすべては、ブロッキング (POJO) または非ブロッキング (`@NonBlocking` または `Uni`) にできます。また、 `Multi` を使用してデータをストリーミングすることもできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This example runs nonblocking. We could also return `Uni<JsonArray>`"
msgstr "この例では非ブロッキングで実行されます。 `Uni<JsonArray> ` を返すこともできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The method name `getAll` will be available in the Javascript"
msgstr "メソッド名 `getAll` は Javascript で使用できます。"

#: _versions/3.15/guides/dev-ui.adoc
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[コード例]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "*Webcomponent (Javascript) part*"
msgstr "*Webcomponent (Javascript) パート*"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Now you can use the JsonRPC controller to access the `getAll` method (and any other methods in your JsonRPC Service)"
msgstr "これで、JsonRPC コントローラーを使用して `getAll` メソッド (および JsonRPC サービス内の他のメソッド) にアクセスできるようになりました。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Note the method `getAll` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr "`getAll` メソッドは、Java サービスのメソッドに対応していることに注意してください。このメソッドは、JsonRPC の結果を含む https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] を返します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "In this case, the result is an array, so we can loop over it."
msgstr "ここでの結果は配列であるため、それをループすることができます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "JsonArray (or any Java collection), either blocking or nonblocking, will return an array; otherwise, a JsonObject will be returned."
msgstr "JsonArray (または任意の Java コレクション) は、ブロッキングまたは非ブロッキングであれば配列を返します。それ以外の場合は、JsonObject が返されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid ""
"You can also pass in parameters in the method being called, for example:\n"
"(In the Runtime Java code)"
msgstr ""
"呼び出されるメソッドにパラメーターを渡すこともできます。以下はその例です \n"
"(ランタイム Java コード内)。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The clear method takes one parameter called `name`"
msgstr "clear メソッドは `name` と呼ばれるパラメーターを 1 つ受け取ります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "In the Webcomponent (Javascript):"
msgstr "Webcomponent (Javascript) の場合: "

#: _versions/3.15/guides/dev-ui.adoc
msgid "The `name` parameter is passed in."
msgstr "`name` パラメーターが渡されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Streaming data"
msgstr "ストリーミングデータ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr "データを継続的に画面にストリーミングすることで、UI 画面を最新のデータで更新することができます。これは、 `Multi` (Java 側) と `Observer` (Javascript 側) で実行できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Java side of streaming data:"
msgstr "ストリーミングデータの Java 側: "

#: _versions/3.15/guides/dev-ui.adoc
msgid "Return the Multi that will stream jokes"
msgstr "jokes をストリーミングする Multi を返します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Javascript side of streaming data:"
msgstr "ストリーミングデータの Javascript 側: "

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr "メソッドを呼び出し (オプションでパラメーターを渡す)、次のイベントで呼び出されるコードを提供できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr "必要に応じて後でキャンセルできるように、オブザーバーのインスタンスを保管してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "JsonRpc against the deployment classpath"
msgstr "デプロイメントクラスパスに対する JsonRpc"

#: _versions/3.15/guides/dev-ui.adoc
msgid ""
"In certain cases you might need to execute methods and/or get data against the deployment classpath. This also happens over JsonRPC communication, but in this case you do not create a JsonRPC Service in the runtime module,\n"
"you can just supply the code to be run in a supplier in the deployment module. To do this you will produce a `BuildTimeActionBuildItem`, example:"
msgstr ""
"場合によっては、デプロイメントクラスパスに対してメソッドを実行したり、データを取得したりする必要があるかもしれません。同様の状況は JsonRPC 通信でも発生しますが、その場合はランタイムモジュールに JsonRPC サービスは作成せず、\n"
"デプロイメントモジュールのサプライヤーで実行されるコードを提供します。これを行うには、以下のように `BuildTimeActionBuildItem` を作成します。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Return or use a BuildProducer to create a `BuildTimeActionBuildItem`"
msgstr "BuildProducer を返す、または使用して、 `BuildTimeActionBuildItem` を作成します"

#: _versions/3.15/guides/dev-ui.adoc
msgid "`BuildTimeActionBuildItem` is automatically scoped with your extension namespace"
msgstr "`BuildTimeActionBuildItem` は、エクステンションの namespace で自動的にスコープ指定されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Here we add an action, that is the same as a request-response method. The method name (that can be called from js in the same way as any json-rpc service) is `generateManifests`."
msgstr "ここで、request-response メソッドと同じアクションを追加します。メソッド名 (json-rpc サービスと同じ方法で js から呼び出し可能) は `generateManifests` です。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can also return a `CompletableFuture`/`CompletionStage` as an action, and if you want to stream data you need to use `addSubscription` (rather than `addAction`) and return a `Flow.Publisher`."
msgstr "アクションとして `CompletableFuture`/`CompletionStage` を返すこともできます。データをストリーミングする場合は、 `addAction` ではなく `addSubscription` を使用して `Flow.Publisher` を返す必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Dev UI Log"
msgstr "Dev UI Log"

#: _versions/3.15/guides/dev-ui.adoc
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful for debugging all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr "`999-SNAPSHOT` バージョンを使用してローカルアプリケーションを実行すると、Dev UI のフッターに `Dev UI` Log が表示されます。これは、ブラウザーと Quarkus アプリ間でやり取りされるすべての JSON RPC メッセージをデバッグする場合に役立ちます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Hot reload"
msgstr "ホットリロード"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can update a screen automatically when a hot reload happens. To do this, replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr "ホットリロードの発生時に、画面を自動的に更新できます。そのためには、Webcomponent が拡張する `LitElement` を `QwcHotReloadElement` に置き換えます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "`QwcHotReloadElement` extends `LitElement`, so your component is still a Lit Element."
msgstr "`QwcHotReloadElement` は `LitElement` を拡張するため、コンポーネントは変わらず Lit Element です。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "When extending a `QwcHotReloadElement`, you have to use the `hotReload` method. (You must also still provide the `render` method from Lit)"
msgstr "`QwcHotReloadElement` を拡張する場合は、 `hotReload` メソッドを使用する必要があります (Lit の `render` メソッドも提供する必要があります)。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Custom cards"
msgstr "カスタムカード"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr "デフォルトの内蔵カードを使用したくない場合は、拡張ページに表示されるカードをカスタマイズすることができます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To do this, you must provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr "これを行うには、提供されたカードの代わりに読み込まれる Web コンポーネントを提供し、これを Java プロセッサーに登録する必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr "Javascript 側では、すべてのページにアクセスできます (リンクを作成する必要がある場合)。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "And the following properties will be passed in:"
msgstr "そして、以下のプロパティが渡される："

#: _versions/3.15/guides/dev-ui.adoc
msgid "extensionName"
msgstr "extensionName"

#: _versions/3.15/guides/dev-ui.adoc
msgid "description"
msgstr "description"

#: _versions/3.15/guides/dev-ui.adoc
msgid "guide"
msgstr "guide"

#: _versions/3.15/guides/dev-ui.adoc
msgid "namespace"
msgstr "namespace"

#: _versions/3.15/guides/dev-ui.adoc
msgid "State (advance)"
msgstr "状態 (事前)"

#: _versions/3.15/guides/dev-ui.adoc
msgid "State allows properties to contain state and can be reused globally. An example of state properties is the theme, the connection state (if we are connected to the backend), etc."
msgstr "状態を使用することで、プロパティーに状態を含めることができ、グローバルに再利用できます。状態プロパティーの例としては、テーマ、接続状態 (バックエンドに接続している場合) などがあります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "See the https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[current built-in] state objects."
msgstr "https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[現在の組み込み] 状態オブジェクトを参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "The state in Dev UI uses https://github.com/gitaarik/lit-state[LitState]. You can read more about it in their https://gitaarik.github.io/lit-state/build/[documentation]."
msgstr "Dev UI の状態は https://github.com/gitaarik/lit-state[LitState] を使用します。詳細は、 https://gitaarik.github.io/lit-state/build/[ドキュメント] を参照してください。"

#: _versions/3.15/guides/dev-ui.adoc
#, fuzzy
msgid "Add a log file"
msgstr "ログファイルの追加"

#: _versions/3.15/guides/dev-ui.adoc
#, fuzzy
msgid "Apart from adding a card and a page, extensions can add a log to the footer. This is useful for logging things that are happening continuously. A page will lose connection to the backend when navigating away from that page, and a log in the footer will be permanently connected."
msgstr "カードとページの追加とは別に、エクステンションはフッターにログを追加することができます。これは継続的に起こっていることを記録するのに便利です。ページはそのページから離れるとバックエンドとの接続を失いますが、フッターのログは永久に接続されます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Adding something to the footer works exactly like adding a Card, except you use a `FooterPageBuildItem` rather than a `CardPageBuildItem`."
msgstr "フッターに何かを追加する方法はカードを追加する方法と同じですが、 `CardPageBuildItem` ではなく `FooterPageBuildItem` を使用する点のみ異なります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "In your Webcomponent, you can then stream the log to the UI:"
msgstr "Webcomponent では、ログを UI にストリーミングできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Add a section menu"
msgstr "セクションメニューの追加"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This allows an extension to link a page directly in the section Menu."
msgstr "これにより、エクステンションはセクションメニュー内のページに直接リンクできるようになります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Adding something to the section menu works exactly like adding a Card, except you use a `MenuPageBuildItem` rather than a `CardPageBuildItem`."
msgstr "セクションメニューに何かを追加する方法はカードを追加する方法と同じですが、 `CardPageBuildItem` ではなく `MenuPageBuildItem` を使用する点のみ異なります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[サンプルコード]"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Your page can be any Page similar to Cards."
msgstr "ページはカードに似た任意のページにできます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Testing"
msgstr "テスト"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You can add tests to your extension that test:"
msgstr "エクステンションには、以下をテストするテストを追加できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Runtime data via JsonRPC"
msgstr "JsonRPC経由の実行時データ"

#: _versions/3.15/guides/dev-ui.adoc
msgid "You must add this to your pom:"
msgstr "これを pom に追加する必要があります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "This will give you access to two base classes for creating these tests."
msgstr "そうすることで、テストを作成するための 2 つのベースクラスにアクセスできるようになります。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Testing Build time data"
msgstr "ビルド時データのテスト"

#: _versions/3.15/guides/dev-ui.adoc
msgid "If you added Build time data, for example:"
msgstr "ビルド時データを追加した場合の例:"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To test that your build time data is generated correctly, you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr "ビルド時データが正しく生成されていることをテストするには、 `DevUIBuildTimeDataTest` を拡張するテストを追加できます。"

#: _versions/3.15/guides/dev-ui.adoc
msgid "Testing Runtime data"
msgstr "実行時データのテスト"

#: _versions/3.15/guides/dev-ui.adoc
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr "実行時データレスポンスが含まれる JsonRPC サービスを追加した場合の例:"

#: _versions/3.15/guides/dev-ui.adoc
msgid "To test that `updateProperties` executes correctly via JsonRPC, you can add a test that extends `DevUIJsonRPCTest`."
msgstr "`updateProperties` が JsonRPC 経由で正しく実行されることをテストするには、 `DevUIJsonRPCTest` を拡張するテストを追加できます。"
