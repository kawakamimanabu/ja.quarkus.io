msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "WebSockets Next extension reference guide"
msgstr "WebSockets Next エクステンションリファレンスガイド"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr "`quarkus-websockets-next` エクステンションは、WebSocket サーバーおよびクライアントエンドポイントを定義するための最新の宣言型 API を提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The WebSocket protocol"
msgstr "WebSocket プロトコル"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr ""
"https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] に記載されている _WebSocket_ プロトコルは、単一の TCP 接続を介してクライアントとサーバー間の双方向通信チャネルを作成するための標準化された方法を確立します。\n"
"HTTP とは異なり、WebSocket は別個の TCP プロトコルとして動作しますが、HTTP とシームレスに連携して機能するように設計されています。\n"
"たとえば、同じポートを再利用し、同じセキュリティーメカニズムと互換性があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr ""
"WebSocket を使用したやり取りは、WebSocket プロトコルに移行するための 'Upgrade' ヘッダーを使用する HTTP リクエストで開始されます。\n"
"サーバーは、`200 OK` レスポンスの代わりに `101 Switching Protocols` レスポンスを返し、HTTP 接続を WebSocket 接続へとアップグレードします。\n"
"このハンドシェイクが成功すると、最初の HTTP アップグレードリクエストで使用された TCP ソケットは開いたままとなり、クライアントとサーバーの双方が継続的に双方向のメッセージをやり取りできるようになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTP および WebSocket アーキテクチャースタイル"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "WebSocket は HTTP と互換性があり、HTTP リクエストを通じて開始されますが、2 つのプロトコルは異なるアーキテクチャーとプログラミングモデルを導くため、その違いを認識することが重要です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr ""
"HTTP/REST では、アプリケーションはリソース/エンドポイントを中心に構成され、さまざまな HTTP メソッドやパスを処理します。\n"
"クライアントとのやり取りは、適切なメソッドとパスを指定した HTTP リクエストを送信することで行われ、リクエスト/レスポンスのパターンに従います\n"
"サーバーは、パス、メソッド、ヘッダーに基づいて、受信したリクエストを対応するハンドラーにルーティングし、明確に定義されたレスポンスで返します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr ""
"逆に、WebSocket では通常、最初の HTTP 接続に単一のエンドポイントが使用され、その後、すべてのメッセージが同じ TCP 接続を利用します。\n"
"これにより、非同期かつメッセージ駆動型のまったく異なるインタラクションモデルが導入されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr ""
"WebSocket は、HTTP とは対照的に、低レベルのトランスポートプロトコルです。\n"
"メッセージの形式、ルーティング、または処理には、メッセージのセマンティクスに関するクライアントとサーバー間の事前の合意が必要です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "WebSocket クライアントとサーバーの場合、HTTP ハンドシェイクリクエストの `Sec-WebSocket-Protocol` ヘッダーにより、より高レベルのメッセージングプロトコルのネゴシエーションが可能になります。このヘッダーがない場合、サーバーとクライアントは独自の規則を確立する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSockets と Quarkus WebSockets Next"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr ""
"このガイドでは、従来の `quarkus-websockets` エクステンションに比べ、効率性と使いやすさが向上した WebSocket API の実装である `quarkus-websockets-next` エクステンションを利用します。\n"
"オリジナルの `quarkus-websockets` エクステンションは引き続きアクセス可能で、継続的なサポートが提供されますが、機能開発が行われる可能性は低いです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr ""
"`quarkus-websockets` とは異なり、`quarkus-websockets-next` エクステンションは Jakarta WebSocket 仕様を **実装していません**。\n"
"代わりに、使いやすさを重視した最新の API を導入しています。\n"
"さらに、Quarkus のリアクティブアーキテクチャーおよびネットワーク層とシームレスに統合するように調整されています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr ""
"Quarkus WebSockets Next エクステンションで使用されるアノテーションは、同じ名前を共有する場合もありますが、JSR 356 のアノテーションとは異なります。\n"
"JSR アノテーションには、Quarkus WebSockets Next エクステンションが従わないセマンティクスが含まれています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Project setup"
msgstr "プロジェクトのセットアップ"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "To use the `websockets-next` extension, you need to add the `io.quarkus:quarkus-websockets-next` depencency to your project."
msgstr "`websockets-next` エクステンションを使用するには、プロジェクトに `io.quarkus:quarkus-websockets-next` 依存関係を追加する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Endpoints"
msgstr "Endpoints"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Both the server and client APIs allow you to define _endpoints_ that are used to consume and send messages.\n"
"The endpoints are implemented as CDI beans and support injection.\n"
"Endpoints declare <<callback-methods,_callback methods_>> annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnPong`, `@OnOpen`, `@OnClose` and `@OnError`.\n"
"These methods are used to handle various WebSocket events.\n"
"Typically, a method annotated with `@OnTextMessage` is called when the connected client sends a message to the server and vice versa."
msgstr "サーバーAPIとクライアントAPIの両方で、メッセージの消費と送信に使用する _エンドポイントを_ 定義できます。エンドポイントはCDI Beanとして実装され、インジェクションをサポートします。エンドポイントは、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnPong` 、 `@OnOpen` 、 `@OnClose` 、 `@OnError` でアノテーションされた xref:callback-methods[コールバックメソッドを] 宣言します。これらのメソッドは、さまざまな WebSocket イベントを処理するために使用されます。通常、 `@OnTextMessage` でアノテーションされたメソッドは、接続されたクライアントがサーバーにメッセージを送信するときに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The client API also includes <<client-connectors,connectors>> that are used to configure and create new WebSocket connections."
msgstr "クライアント API には、新しい WebSocket 接続を設定および作成するために使用される <<client-connectors,connectors>> も含まれています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Server endpoints"
msgstr "サーバーエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Server endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocket`.\n"
"The value of `WebSocket#path()` is used to define the path of the endpoint."
msgstr ""
"サーバーエンドポイントは、`@io.quarkus.websockets.next.WebSocket` アノテーションが付けられたクラスです。\n"
"`WebSocket#path()` の値は、エンドポイントのパスを定義するために使用されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr ""
"したがって、クライアントは `ws://localhost:8080/chat/your-name` を使用して、この Web ソケットエンドポイントに接続できます。\n"
"TLS が使用されている場合、URL は `wss://localhost:8443/chat/your-name` です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The endpoint path is relative to the xref:http-reference.adoc#context-path[root context] configured by the `quarkus.http.root-path` (which is `/` by default). For example, if you add `quarkus.http.root-path=/api` to your `application.properties` then a client can connect to this endpoint using `http://localhost:8080/api/chat/the-name`."
msgstr "エンドポイントパスは、`quarkus.http.root-path` (デフォルトでは `/`) によって設定された xref:http-reference.adoc#context-path[root context] に対して相対的です。たとえば、`application.properties` に `quarkus.http.root-path=/api` を追加すると、クライアントは `http://localhost:8080/api/chat/the-name` を使用してこのエンドポイントに接続できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Client endpoints"
msgstr "クライアントエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Client endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocketClient`.\n"
"The value of `WebSocketClient#path()` is used to define the path of the endpoint this client will be connected to."
msgstr ""
"クライアントエンドポイントは、`@io.quarkus.websockets.next.WebSocketClient` アノテーションが付けられたクラスです。\n"
"`WebSocketClient#path()` の値は、このクライアントが接続されるエンドポイントのパスを定義するために使用されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Client endpoints are used to consume and send messages. You'll need the <<client-connectors,connectors API>> to configure and open new WebSocket connections."
msgstr "クライアントエンドポイントは、メッセージの受信と送信に使用されます。新しい WebSocket 接続を設定して開くには、<<client-connectors,connectors API>> が必要です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Path parameters"
msgstr "パスパラメーター"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The path of a WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr ""
"WebSocket エンドポイントのパスには、パスパラメーターを含めることができます。\n"
"構文は JAX-RS リソースの場合と同じです: `{parameterName}`"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"You can access the path parameter values using the `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` method, or `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` respectively.\n"
"Alternatively, an endpoint callback method parameter annotated with `@io.quarkus.websockets.next.PathParam` is injected automatically."
msgstr ""
"パスパラメーター値には、それぞれ `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` メソッドまたは `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` を使用してアクセスできます。\n"
"あるいは、`@io.quarkus.websockets.next.PathParam` アノテーションが付与されたエンドポイントコールバックメソッドパラメーターが自動的に注入されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`WebSocketConnection#pathParam(String)` example"
msgstr "`WebSocketConnection#pathParam(String)` の例"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` method returns `null`.\n"
"If there is an endpoint callback method parameter annotated with `@PathParam` and the parameter name is not defined in the endpoint path, then the build fails."
msgstr ""
"パスパラメーターの値は常に文字列です。\n"
"パス内にパスパラメーターが存在しない場合、`WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` メソッドは `null` を返します。\n"
"`@PathParam` アノテーションが付けられたエンドポイントコールバックメソッドパラメーターがあり、パラメーター名がエンドポイントパスで定義されていない場合、ビルドは失敗します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Query parameters are not supported. However, you can access the query using `WebSocketConnection#handshakeRequest().query()`"
msgstr "クエリーパラメーターはサポートされていません。ただし、`WebSocketConnection#handshakeRequest().query()` を使用してクエリーにアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "CDI scopes"
msgstr "CDI スコープ"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Endpoints are managed as CDI beans.\n"
"By default, the `@Singleton` scope is used.\n"
"However, developers can specify alternative scopes to fit their specific requirements."
msgstr ""
"エンドポイントは CDI Bean として管理されます。\n"
"デフォルトでは、`@Singleton` スコープが使用されます。\n"
"ただし、開発者は特定の要件に合わせて代替スコープを指定できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"`@Singleton` and `@ApplicationScoped` endpoints are shared across all WebSocket connections.\n"
"Therefore, implementations should be either stateless or thread-safe."
msgstr ""
"`@Singleton` および `@ApplicationScoped` エンドポイントは、すべての WebSocket 接続間で共有されます。\n"
"したがって、実装はステートレスまたはスレッドセーフのいずれかである必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This server endpoint is not shared and is scoped to the session."
msgstr "このサーバーエンドポイントは共有されず、セッションにスコープされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Each WebSocket connection is associated with its own _session_ context.\n"
"When the `@OnOpen` method is invoked, a session context corresponding to the WebSocket connection is created.\n"
"Subsequent calls to `@On[Text|Binary]Message` or `@OnClose` methods utilize this same session context.\n"
"The session context remains active until the `@OnClose` method completes execution, at which point it is terminated."
msgstr "各 WebSocket 接続は、独自の _セッション_ コンテキストに関連付けられています。 `@OnOpen` メソッドが呼び出されると、WebSocket 接続に対応するセッションコンテキストが作成されます。その後の `@On[Text|Binary]Message` または `@OnClose` メソッドの呼び出しでは、この同じセッション コンテキストが使用されます。セッションコンテキストは、 `@OnClose` メソッドの実行が完了するまでアクティブなままです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In cases where a WebSocket endpoint does not declare an `@OnOpen` method, the session context is still created.\n"
"It remains active until the connection terminates, regardless of the presence of an `@OnClose` method."
msgstr "WebSocket のエンドポイントが `@OnOpen` メソッドを宣言していない場合でも、セッションコンテキストは作成されます。これは、 `@OnClose` メソッドの存在に関係なく、接続が終了するまでアクティブなままです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen`, and `@OnClose` also have the request scope activated for the duration of the method execution (until it produced its result)."
msgstr "`@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen` `@OnClose` でアノテーションされたメソッドも、メソッド実行中 (結果を生成するまで) はリクエストスコープがアクティブになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Callback methods"
msgstr "コールバックメソッド"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "A WebSocket endpoint may declare:"
msgstr "WebSocket エンドポイントは以下を宣言できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "At most one `@OnTextMessage` method: Handles the text messages from the connected client/server."
msgstr "最大 1 つの `@OnTextMessage` メソッド: 接続されたクライアント/サーバーからのテキストメッセージを処理します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages from the connected client/server."
msgstr "最大 1 つの `@OnBinaryMessage` メソッド: 接続されたクライアント/サーバーからのバイナリーメッセージを処理します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "At most one `@OnPongMessage` method: Handles the pong messages from the connected client/server."
msgstr "最大 1 つの `@OnPongMessage` メソッド: 接続されたクライアント/サーバーからの pong メッセージを処理します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "At most one `@OnOpen` method: Invoked when a connection is opened."
msgstr "最大 1 つの `@OnOpen` メソッド: 接続が開かれたときに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "At most one `@OnClose` method: Executed when the connection is closed."
msgstr "最大 1 つの `@OnClose` メソッド: 接続が閉じられたときに実行されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任意の数の `@OnError` メソッド: エラーが発生したときに呼び出されます。つまり、エンドポイントコールバックがランタイムエラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` が失敗を受け取ったときです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr ""
"一部のエンドポイントのみにすべてのメソッドを含める必要があります。\n"
"ただし、少なくとも `@On[Text|Binary]Message` または `@OnOpen` が含まれている必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr ""
"いずれかのエンドポイントがこれらのルールに違反すると、ビルド時にエラーがスローされます。\n"
"sub-websocket を表す静的なネストされたクラスは同じガイドラインに従います。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "WebSocket エンドポイントの外部で `@OnTextMessage`、`@OnBinaryMessage`、`@OnOpen`、および `@OnClose` アノテーションが付与されたメソッドはエラーとみなされ、適切なエラーメッセージが表示されてビルドが失敗します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Processing messages"
msgstr "メッセージの処理"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "クライアントからメッセージを受信するメソッドには、`@OnTextMessage` または `@OnBinaryMessage` アノテーションが付けられます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr ""
"`OnTextMessage` は、クライアントから受信されるすべての _テキスト_ メッセージに対して呼び出されます。\n"
"`OnBinaryMessage` は、クライアントが受信するすべての _バイナリー_ メッセージに対して呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Invocation rules"
msgstr "呼び出しルール"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When invoking these annotated methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr "これらの注釈付きメソッドを呼び出すと、WebSocket 接続にリンクされている _セッション_ スコープがアクティブのままになります。さらに、リクエストスコープはメソッドが完了するまで (または非同期メソッドや反応型メソッドの場合は結果が生成されるまで) アクティブです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined by the method signature and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr "Quarkus WebSocket Nextは、Quarkus RESTと同様に、 _ブロッキングと_ _ノンブロッキングの_ ロジックをサポートしています。これは、メソッドのシグネチャと、 `@Blocking` や `@NonBlocking` などの追加アノテーションによって決定されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Here are the rules governing execution:"
msgstr "実行に関するルールは次のとおりです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Non-blocking methods must execute on the connection's event loop."
msgstr "ノンブロッキング・メソッドは、接続のイベント・ループで実行されなければなりません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@RunOnVirtualThread` are considered blocking and should execute on a virtual thread."
msgstr "`@RunOnVirtualThread` でアノテーションされたメソッドはブロッキングとみなされ、仮想スレッド上で実行されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Blocking methods must execute on a worker thread if not annotated with `@RunOnVirtualThread`."
msgstr "ブロックメソッドは、 `@RunOnVirtualThread` でアノテーションされていない場合、ワーカースレッドで実行する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When `@RunOnVirtualThread` is employed, each invocation spawns a new virtual thread."
msgstr "`@RunOnVirtualThread` 、呼び出されるたびに新しい仮想スレッドが生成されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `CompletionStage`, `Uni` and `Multi` are considered non-blocking."
msgstr "`CompletionStage` 、 `Uni` 、 `Multi` を返すメソッドはノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `void` or plain objects are considered blocking."
msgstr "`void` またはプレーンなオブジェクトを返すメソッドはブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` functions are considered non-blocking."
msgstr "Kotlin `suspend` 関数はノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Method parameters"
msgstr "メソッドパラメーター"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The method must accept exactly one message parameter:"
msgstr "メソッドは、メッセージパラメーターを 1 つのみ受け入れる必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The message object (of any type)."
msgstr "メッセージオブジェクト (任意のタイプ)。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "A `Multi<X>` with X as the message type."
msgstr "メッセージタイプが X の `Multi<X>`。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "However, it may also accept the following parameters:"
msgstr "ただし、次のパラメーターも受け入れる場合があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`WebSocketConnection`/`WebSocketClientConnection`"
msgstr "`WebSocketConnection`/`WebSocketClientConnection`"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`@PathParam` アノテーションが付けられた `String` パラメーター"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "メッセージオブジェクトは送信されたデータを表し、raw のコンテンツ (`String`、`JsonObject`、`JsonArray`、`Buffer`、または `byte[]`) またはデシリアライズされた高レベルオブジェクトとしてアクセスできます。後者のアプローチが推奨されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"The method must subscribe to the `Multi` to receive these items (or return a Multi)."
msgstr "`Multi` を受信するとき、このメソッドは接続ごとに 1 回呼び出され、提供された `Multi` はこの接続によって送信されたアイテムを受信します。メソッドは、これらのアイテムを受信するために `Multi` をサブスクライブする必要があります (または Multi を返します)。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Supported return types"
msgstr "サポートされている戻り値のタイプ"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "`@OnTextMessage` または `@OnBinaryMessage` アノテーションが付与されたメソッドは、WebSocket 通信を効率的に処理するためにさまざまなタイプを返すことができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void`: 明示的なレスポンスがクライアントに返されないブロッキングメソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>`: 返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを示します。明示的なレスポンスはクライアントに返されません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` タイプのオブジェクトは、返されたオブジェクトがシリアライズされ、レスポンスとしてクライアントに送り返されるブロッキングメソッドを表します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>`: null 以外の `Uni` によって発行された項目がレスポンスとしてクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>`: null 以外の `Multi` によって発行された項目が完了またはキャンセルされるまでクライアントに順番に送信されるノンブロッキングメソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit response is sent back to the client."
msgstr "`Unit` を返す Kotlin の `suspend` 関数: 明示的なレスポンスがクライアントに返されないノンブロッキングメソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client as a response."
msgstr "`X` を返す Kotlin の `suspend` 関数: 返された項目がレスポンスとしてクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Here are some examples of these methods:"
msgstr "これらの方法の例をいくつか示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When returning a Multi, Quarkus subscribes to the returned Multi automatically and writes the emitted items until completion, failure, or cancellation. Failure or cancellation terminates the connection."
msgstr "Multiを返すと、Quarkusは返されたMultiを自動的に購読し、完了、失敗、またはキャンセルされるまで、発行されたアイテムを書き込みます。失敗またはキャンセルすると、接続が終了します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Streams"
msgstr "ストリーム"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr ""
"WebSocket エンドポイントは、個々のメッセージに加えて、メッセージのストリームも処理できます。\n"
"この場合、メソッドは `Multi<X>` をパラメーターとして受け取ります。\n"
"`X` の各インスタンスは、上記と同じルールを使用してデシリアライズされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr ""
"`Multi` を受け取るメソッドは、別の `Multi` または `void` を返すことができます。\n"
"メソッドが `Multi` を返す場合、受信する `multi` をサブスクライブする必要はありません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "This approach allows bi-directional streaming."
msgstr "このアプローチにより、双方向のストリーミングが可能になります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the method returns `void`, it must subscribe to the incoming `Multi`:"
msgstr "メソッドが `void` を返すとき、それは `Multi` を受信しなければなりません："

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Skipping reply"
msgstr "返信をスキップする"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr ""
"メソッドがクライアントに書き込まれるメッセージを生成することを意図している場合、`null` を発行できます。\n"
"`null` を発行すると、クライアントにレスポンスが送信されないことを意味し、必要なときにレスポンスをスキップできるようになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "JsonObject and JsonArray"
msgstr "JsonObject および JsonArray"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr ""
"Vert.x の `JsonObject` および `JsonArray` インスタンスは、シリアライゼーションおよびデシリアライゼーションのメカニズムをバイパスします。\n"
"メッセージはテキストメッセージとして送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "OnOpen and OnClose methods"
msgstr "OnOpen および OnClose メソッド"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "クライアントが接続または切断したときに、WebSocket エンドポイントに通知することもできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "これは、メソッドに `@OnOpen` または `@OnClose` アノテーションを付けることで行われます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` はクライアント接続時にトリガーされ、`@OnClose` は切断時に呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "これらのメソッドは、_セッションスコープ_ の `WebSocketConnection` Bean にアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Parameters"
msgstr "パラメーター"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "`@OnOpen` および `@OnClose` アノテーションが付けられたメソッドは、次のパラメーターを受け入れることができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "`@OnClose` アノテーションが付与されたエンドポイントメソッドは、接続を閉じる理由を示す `io.quarkus.websockets.next.CloseReason` パラメーターも受け入れる場合があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` メソッドと `@OnClose` メソッドは、異なる戻り値のタイプをサポートします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr ""
"`@OnOpen` メソッドには、`@On[Text|Binary]Message` と同じルールが適用されます。\n"
"したがって、`@OnOpen` アノテーションが付与されたメソッドは、接続後すぐにクライアントにメッセージを送信できます。\n"
"`@OnOpen` メソッドでサポートされている戻り値のタイプは次のとおりです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void`: 接続されたクライアントに明示的なメッセージが返されないブロッキングメソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>`: 返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを示します。クライアントにメッセージは返されません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` タイプのオブジェクト: 返されたオブジェクトがシリアライズされてクライアントに送り返されるブロッキングメソッドを表します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>`: null 以外の `Uni` によって発行された項目がクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit message is sent back to the client."
msgstr "`Unit` を返す Kotlin の `suspend` 関数: 明示的なメッセージがクライアントに返されないノンブロッキングメソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client."
msgstr "`X` を返す Kotlin の `suspend` 関数: 返された項目がクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Items sent to the client are <<serialization,serialized>> except for the `String`, `io.vertx.core.json.JsonObject`, `io.vertx.core.json.JsonArray`, `io.vertx.core.buffer.Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr ""
"クライアントに送信される項目は、`String`、`io.vertx.core.json.JsonObject`、`io.vertx.core.json.JsonArray`、`io.vertx.core.buffer.Buffer`、および `byte[]` タイプを除いて、<<serialization,シリアライズ>> されます。\n"
"`Multi` の場合、Quarkus は返された `Multi` をサブスクライブし、項目が発行されると `WebSocket` に書き込みます。\n"
"`String`、`JsonObject`、`JsonArray` はテキストメッセージとして送信されます。\n"
"`Buffers` とバイト配列はバイナリーメッセージとして送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "For `@OnClose` methods, the supported return types include:"
msgstr "`@OnClose` メソッドの場合、サポートされる戻り値のタイプは次のとおりです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`void`: The method is considered blocking."
msgstr "`void`: メソッドはブロッキングであるとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>`: メソッドはノンブロッキングであるとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Kotlin `suspend` function returning `Unit`: The method is considered non-blocking."
msgstr "`Unit` を返す Kotlin の `suspend` 関数: このメソッドはノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"`@OnClose` methods declared on a server endpoint cannot send items to the connected client by returning objects.\n"
"They can only send messages to the other clients by using the `WebSocketConnection` object."
msgstr ""
"サーバーエンドポイントで宣言された `@OnClose` メソッドは、オブジェクトを返すことによって接続されたクライアントに項目を送信できません。\n"
"`WebSocketConnection` オブジェクトを使用してのみ、他のクライアントにメッセージを送信できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Error handling"
msgstr "エラー処理"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr ""
"エラーが発生したときに WebSocket エンドポイントに通知することもできます。\n"
"`@io.quarkus.websockets.next.OnError` アノテーションが付与された WebSocket エンドポイントメソッドは、エンドポイントコールバックがランタイムエラーをスローしたとき、または変換エラーが発生したとき、\n"
"あるいは返された `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` が失敗した場合に呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The method must accept exactly one _error_ parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr ""
"メソッドは、_error_ パラメーター、つまり `java.lang.Throwable` から割り当て可能なパラメーターを 1 つだけ受け入れる必要があります。\n"
"このメソッドは次のパラメーターも受け入れます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr ""
"エンドポイントは、`@io.quarkus.websockets.next.OnError` アノテーションが付与された複数のメソッドを宣言できます。\n"
"ただし、各メソッドは異なるエラーパラメーターを宣言する必要があります。\n"
"実際の例外の最も具体的なスーパータイプを宣言するメソッドが選択されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` parameters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr "`@io.quarkus.websockets.next.OnError` アノテーションは、グローバルエラーハンドラー、つまり WebSocket エンドポイントで宣言されていないメソッドを宣言するためにも使用できます。このようなメソッドは、`@PathParam` パラメーターを受け入れない場合があります。エンドポイントで宣言されたエラーハンドラーは、グローバルエラーハンドラーよりも優先されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy`.\n"
"By default, the connection is closed.\n"
"Alternatively, an error message can be logged or no operation performed."
msgstr "エラーが発生したが、エラーハンドラで処理できない場合、Quarkus は `quarkus.websockets-next.server.unhandled-failure-strategy` で指定された戦略を使用します。デフォルトでは、接続は閉じられます。または、エラーメッセージがログに記録されるか、操作が実行されなくなります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Serialization and deserialization"
msgstr "シリアライズとデシリアライズ"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next エクステンションは、メッセージの自動シリアライゼーションとデシリアライゼーションをサポートします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and bypass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization convert the message from/to JSON automatically."
msgstr ""
"`String`、`JsonObject`、`JsonArray`、`Buffer`、および `byte[]` タイプのオブジェクトはそのまま送信され、シリアライゼーションとデシリアライゼーションをバイパスします。\n"
"コーデックが指定されていない場合、シリアライゼーションとデシリアライゼーションによってメッセージは JSON から、または JSON に自動的に変換されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "シリアライゼーションとデシリアライゼーションをカスタマイズする必要がある場合は、カスタムコーデックを提供できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Custom codec"
msgstr "カスタムコーデック"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "To implement a custom codec, you must provide a CDI bean implementing:"
msgstr "カスタムコーデックを実装するには、以下を実装する CDI Bean を提供する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.BinaryMessageCodec` for binary messages"
msgstr "バイナリーメッセージ用の `io.quarkus.websockets.next.BinaryMessageCodec`"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.TextMessageCodec` for text messages"
msgstr "テキストメッセージの `io.quarkus.websockets.next.TextMessageCodec`"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "次の例は、`Item` クラスのカスタムコーデックを実装する方法を示しています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec should be used explicitly:"
msgstr "`OnTextMessage` メソッドと `OnBinaryMessage` メソッドでは、どのコーデックを使用するかを明示的に指定することもできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "メッセージのデシリアライゼーションとシリアライゼーションの両方に使用するコーデックを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "シリアライゼーションとデシリアライゼーションで異なるコーデックを使用する必要がある場合は、シリアライゼーションとデシリアライゼーションに使用するコーデックを個別に指定できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for the deserialization of the incoming message"
msgstr "受信メッセージのデシリアライズに使用するコーデックを指定します"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "送信メッセージのシリアライゼーションに使用するコーデックを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Ping/pong messages"
msgstr "ピンポンメッセージ"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping message] may serve as a keepalive or to verify the remote endpoint.\n"
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong message] is sent in response to a ping message and it must have an identical payload."
msgstr ""
"https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping メッセージ] は、キープアライブとして、またはリモートエンドポイントを確認するために使用できます。\n"
"https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong メッセージ] は、ping メッセージへのレスポンスとして送信され、同一のペイロードを持つ必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Server/client endpoints automatically respond to a ping message sent from the client/server.\n"
"In other words, there is no need for `@OnPingMessage` callback declared on an endpoint."
msgstr "サーバー/クライアントエンドポイントは、クライアント/サーバーから送信されたpingメッセージに自動的に応答します。言い換えると、エンドポイントで宣言された `@OnPingMessage` コールバックは必要ありません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The server can send ping messages to a connected client.\n"
"`WebSocketConnection`/`WebSocketClientConnection` declare methods to send ping messages; there is a non-blocking variant: `sendPing(Buffer)` and a blocking variant: `sendPingAndAwait(Buffer)`.\n"
"By default, the ping messages are not sent automatically.\n"
"However, the configuration properties `quarkus.websockets-next.server.auto-ping-interval` and `quarkus.websockets-next.client.auto-ping-interval` can be used to set the interval after which, the server/client sends a ping message to a connected client/server automatically."
msgstr "サーバは接続しているクライアントにpingメッセージを送ることができます。 `WebSocketConnection` `WebSocketClientConnection` `sendPing(Buffer)` `sendPingAndAwait(Buffer)` / デフォルトでは、ping メッセージは自動的には送信されません。しかし、設定プロパティ `quarkus.websockets-next.server.auto-ping-interval` と `quarkus.websockets-next.client.auto-ping-interval` を使って、サーバ/クライアントが接続中のクライアント/サーバに自動的に ping メッセージを送信する間隔を設定することができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sends a ping message from the server to a connected client every 2 seconds."
msgstr "サーバーから接続中のクライアントに2秒ごとにpingメッセージを送信します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `@OnPongMessage` annotation is used to define a callback that consumes pong messages sent from the client/server.\n"
"An endpoint must declare at most one method annotated with `@OnPongMessage`.\n"
"The callback method must return either `void` or `Uni<Void>` (or be a Kotlin `suspend` function returning `Unit`), and it must accept a single parameter of type `Buffer`."
msgstr "`@OnPongMessage` アノテーションは、クライアント/サーバーから送信された pong メッセージを消費するコールバックを定義するために使用されます。エンドポイントは、 `@OnPongMessage` でアノテーションされたメソッドを 1 つ以上宣言する必要があります。コールバックメソッドは `void` または `Uni<Void>` のいずれかを返す必要があり（または `Unit` を返す Kotlin `suspend` 関数である必要があります）、 `Buffer` 型のパラメータを 1 つ受け入れる必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The server/client can also send unsolicited pong messages that may serve as a unidirectional heartbeat. There is a non-blocking variant: `WebSocketConnection#sendPong(Buffer)` and also a blocking variant: `WebSocketConnection#sendPongAndAwait(Buffer)`."
msgstr "サーバー/クライアントはまた、一方向のハートビートとなる未承諾の pongメッセージを送ることができます。ノンブロッキングの variant: `WebSocketConnection#sendPong(Buffer)` とブロッキングの variant: `WebSocketConnection#sendPongAndAwait(Buffer)` があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Inbound processing mode"
msgstr "受信処理モード"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can define the mode used to process incoming events for a specific connection using the `@WebSocket#inboundProcessingMode()`, and `@WebSocketClient.inboundProcessingMode()` respectively.\n"
"An incoming event can represent a message (text, binary, pong), opening connection and closing connection.\n"
"By default, events are processed serially and ordering is guaranteed.\n"
"This means that if an endpoint receives events `A` and `B` (in this particular order) then callback for event `B` will be invoked after the callback for event `A` completed.\n"
"However, in some situations it is preferable to process events concurrently, i.e. with no ordering guarantees but also with no concurrency limits.\n"
"For this cases, the `InboundProcessingMode#CONCURRENT` should be used."
msgstr ""
"WebSocket エンドポイントは、それぞれ `@WebSocket#inboundProcessingMode()` と `@WebSocketClient.inboundProcessingMode()` を使用して、特定の接続の受信イベントを処理するために使用されるモードを定義できます。\n"
"受信イベントは、メッセージ (テキスト、バイナリー、pong)、接続の開始、接続の終了を表すことができます。\n"
"デフォルトでは、イベントは順番に処理され、順序が保証されます。\n"
"つまり、エンドポイントがイベント `A` と `B` を (この特定の順序で) 受信した場合、イベント `A` のコールバックが完了した後にイベント `B` のコールバックが呼び出されます。\n"
"ただし、状況によっては、順序の保証はなく、同時実行の制限もない状態でイベントを同時に処理することが望ましい場合があります。\n"
"このような場合には、`InboundProcessingMode#CONCURRENT` を使用する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Server API"
msgstr "サーバー API"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "HTTP server configuration"
msgstr "HTTP サーバーの設定"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "This extension reuses the _main_ HTTP server."
msgstr "このエクステンションは、_メイン_ の HTTP サーバーを再利用します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "したがって、WebSocket サーバーの設定は `quarkus.http.` 設定セクションで行われます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to `/`).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr ""
"アプリケーション内で設定された WebSocket パスは、`quarkus.http.root` (デフォルトは `/`) で定義されたルートパスと連結されます。\n"
"この連結により、WebSocket エンドポイントがアプリケーションの URL 構造内に適切に配置されるようになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "詳細は、xref:http-reference.adoc[HTTP ガイド] を参照してください。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Sub-websockets endpoints"
msgstr "sub-websocket エンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"A `@WebSocket` endpoint can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-websockets_.\n"
"The resulting path of these sub-websockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr ""
"`@WebSocket` エンドポイントは、静的なネストされたクラスをカプセル化できます。これらのクラスも `@WebSocket` アノテーションが付与され、_sub-websocket_ を表します。\n"
"これらの sub-websocket のパスは、外側のクラスとネストされたクラスからのパスを連結したものになります。\n"
"この結果得られるパスは、HTTP URL の規則に従って正規化されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Sub-websockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr ""
"sub-websocket は、外側のクラスとネストされたクラスの両方の `@WebSocket` アノテーションで宣言されたパスパラメーターへのアクセスを継承します。\n"
"次の例では、外側のクラス内の `consumePrimary` メソッドは `version` パラメーターにアクセスできます。\n"
"一方、ネストされたクラス内の `consumeNested` メソッドは、`version` パラメーターと `id` パラメーターの両方にアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "WebSocket connection"
msgstr "WebSocket 接続"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocket` endpoint and used to interact with the connected client."
msgstr ""
"`io.quarkus.websockets.next.WebSocketConnection` オブジェクトは WebSocket 接続を表します。\n"
"Quarkus は、このインターフェイスを実装し、`WebSocket` エンドポイントに注入して、接続されたクライアントと対話するために使用できる `@SessionScoped` CDI Bean を提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketConnection` object:"
msgstr "`@OnOpen`、`@OnTextMessage`、`@OnBinaryMessage`、および `@OnClose` アノテーションが付与されたメソッドは、注入された `WebSocketConnection` オブジェクトにアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Note that outside of these methods, the `WebSocketConnection` object is not available. However, it is possible to <<list-open-connections,list all open connections>>."
msgstr "これらのメソッド以外では、`WebSocketConnection` オブジェクトは利用できないことに注意してください。ただし、<<list-open-connections,開いているすべての接続をリスト表示>> できます.。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, broadcast messages to all connected clients, etc."
msgstr "接続を使用して、クライアントにメッセージを送信したり、パスパラメーターにアクセスしたり、接続されているすべてのクライアントにメッセージをブロードキャストしたりできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketConnection` は、メッセージを送信するためのブロッキングメソッドとノンブロッキングメソッドの両方のバリアントを提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)`: テキストメッセージをクライアントに送信し、メッセージが送信されるのを待ちます。これはブロッキングであり、エグゼキュータースレッドからのみ呼び出す必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking, but you must subscribe to it."
msgstr "`sendText(String message)` :テキストメッセージをクライアントに送信します。 `Uni` を返します。 ノンブロッキングですが、サブスクライブする必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "List open connections"
msgstr "開いている接続をリスト表示する"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenConnections` that declares convenient methods to access the connections."
msgstr ""
"開いているすべての接続をリスト表示することもできます。\n"
"Quarkus は、接続にアクセスするための便利なメソッドを宣言する `io.quarkus.websockets.next.OpenConnections` タイプの CDI Bean を提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`OpenConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenConnections#listAll()` は、指定された時点で開いているすべての接続のイミュータブルなスナップショットを返します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenConnections#findByEndpointId(String)` makes it easy to find connections for a specific endpoint."
msgstr ""
"他にも便利な方法があります。\n"
"たとえば、`OpenConnections#findByEndpointId(String)` を使用すると、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "CDI events"
msgstr "CDI イベント"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr ""
"Quarkus は、新しい接続が開かれると、修飾子 `@io.quarkus.websockets.next.Open` を持つ `io.quarkus.websockets.next.WebSocketConnection` タイプの CDI イベントを非同期的に起動します。\n"
"さらに、接続が閉じられると、修飾子 `@io.quarkus.websockets.next.Closed` を持つ `WebSocketConnection` タイプの CDI イベントが非同期的に起動します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "An asynchronous observer method is executed using the default blocking executor service."
msgstr "非同期オブザーバーメソッドは、デフォルトのブロッキングエグゼキューターサービスを使用して実行されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Security"
msgstr "セキュリティ"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr ""
"WebSocket エンドポイントのコールバックメソッドは、`io.quarkus.security.Authenticated` や \n"
"`jakarta.annotation.security.RolesAllowed` などのセキュリティーアノテーション、および xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[サポート対象セキュリティーアノテーション] ドキュメントに記載されているその他のアノテーションを使用して保護できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例えば、以下のようになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr "エコーコールバックメソッドは、現在のセキュリティーアイデンティティーに `admin` ロールがある場合にのみ呼び出すことができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The error handler is invoked in case of the authorization failure."
msgstr "認可に失敗した場合はエラーハンドラーが呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`SecurityIdentity` is initially created during a secure HTTP upgrade and associated with the websocket connection."
msgstr "`SecurityIdentity` は、セキュアな HTTP アップグレード中に最初に作成され、ウェブソケット接続に関連付けられます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When OpenID Connect extension is used and token expires, Quarkus automatically closes connection."
msgstr "OpenID Connectエクステンションが使用され、トークンの有効期限が切れると、Quarkusは自動的に接続を閉じます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Secure HTTP upgrade"
msgstr "セキュア HTTP アップグレード"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An HTTP upgrade is secured when standard security annotation is placed on an endpoint class or an HTTP Security policy is defined.\n"
"The advantage of securing HTTP upgrade is less processing, the authorization is performed early and only once.\n"
"You should always prefer HTTP upgrade security unless, like in th example above, you need to perform action on error."
msgstr "エンドポイント・クラスに標準的なセキュリティ・アノテーションを付けるか、HTTP セキュリティ・ポリシーを定義すると、HTTP アップグレードが保護されます。HTTP アップグレードのセキュリティを確保する利点は、処理が少なくて済むことです。上の例のように、エラー時にアクションを実行する必要がある場合を除き、常に HTTP アップグレードのセキュリティを優先すべきです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Use standard security annotation to secure an HTTP upgrade"
msgstr "標準のセキュリティーアノテーションを使用して HTTP アップグレードを保護する"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Initial HTTP handshake ends with the 401 status for anonymous users.\n"
"You can also redirect the handshake request on authorization failure with the `quarkus.websockets-next.server.security.auth-failure-redirect-url` configuration property."
msgstr ""
"匿名ユーザーの場合、最初の HTTP ハンドシェイクは 401 ステータスで終了します。\n"
"`quarkus.websockets-next.server.security.auth-failure-redirect-url` 設定プロパティーを使用して、認可失敗時にハンドシェイクリクエストをリダイレクトすることもできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"HTTP upgrade is only secured when a security annotation is declared on an endpoint class next to the `@WebSocket` annotation.\n"
"Placing a security annotation on an endpoint bean will not secure bean methods, only the HTTP upgrade.\n"
"You must always verify that your endpoint is secured as intended."
msgstr ""
"HTTP アップグレードは、エンドポイントクラスで `@WebSocket` アノテーションの隣でセキュリティーアノテーションが宣言されている場合にのみ保護されます。\n"
"エンドポイント Bean にセキュリティーアノテーションを配置しても、Bean メソッドは保護されず、HTTP アップグレードのみが保護されます。\n"
"エンドポイントが意図したとおりに保護されていることを常に確認する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Use HTTP Security policy to secure an HTTP upgrade"
msgstr "HTTP セキュリティーポリシーを使用して HTTP アップグレードを保護する"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Inspect and/or reject HTTP upgrade"
msgstr "HTTP アップグレードを検査および/または拒否する"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"To inspect an HTTP upgrade, you must provide a CDI bean implementing the `io.quarkus.websockets.next.HttpUpgradeCheck` interface.\n"
"Quarkus calls the `HttpUpgradeCheck#perform` method on every HTTP request that should be upgraded to a WebSocket connection.\n"
"Inside this method, you can perform any business logic and/or reject the HTTP upgrade."
msgstr ""
"HTTP アップグレードを検査するには、`io.quarkus.websockets.next.HttpUpgradeCheck` インターフェイスを実装する CDI Bean を提供する必要があります。\n"
"Quarkus は、WebSocket 接続にアップグレードする必要があるすべての HTTP リクエストに対して `HttpUpgradeCheck#perform` メソッドを呼び出します。\n"
"このメソッド内では、任意のビジネスロジックを実行したり、HTTP アップグレードを拒否したりできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Example HttpUpgradeCheck"
msgstr "HttpUpgradeCheck の例"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The CDI beans implementing `HttpUpgradeCheck` interface can be either `@ApplicationScoped`, `@Singleton` or `@Dependent` beans, but never the `@RequestScoped` beans."
msgstr "`HttpUpgradeCheck` インターフェイスを実装する CDI Bean は、`@ApplicationScoped`、`@Singleton`、または `@Dependent` Bean のいずれかになりますが、`@RequestScoped` Bean になることはできません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Reject the HTTP upgrade. Initial HTTP handshake ends with the 400 Bad Request response status code."
msgstr "HTTP アップグレードを拒否します。最初の HTTP ハンドシェイクは、400 Bad Request レスポンスステータスコードで終了します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "You can choose WebSocket endpoints to which the `HttpUpgradeCheck` is applied with the `HttpUpgradeCheck#appliesTo` method."
msgstr "`HttpUpgradeCheck#appliesTo` メソッドを使用して、`HttpUpgradeCheck` を適用する WebSocket エンドポイントを選択できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "TLS"
msgstr "TLS"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "As a direct consequence of the fact this extension reuses the _main_ HTTP server, all the relevant server configurations apply. See Refer to the xref:http-reference.adoc#ssl[HTTP guide] for more details."
msgstr "このエクステンションは、_メイン_ の HTTP サーバーを再利用するという事実の直接的な結果として、関連するすべてのサーバー設定が適用されます。詳細は、xref:http-reference.adoc#ssl[HTTP ガイド] を参照してください。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Client API"
msgstr "クライアント API"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Client connectors"
msgstr "クライアントコネクター"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` is used to configure and create new connections for client endpoints.\n"
"A CDI bean that implements this interface is provided and can be injected in other beans.\n"
"The actual type argument is used to determine the client endpoint.\n"
"The type is validated during build - if it does not represent a client endpoint the build fails."
msgstr "`io.quarkus.websockets.next.WebSocketConnector<CLIENT>` は、クライアントエンドポイントの構成と新しい接続の作成に使用されます。このインタフェースを実装するCDI Beanが提供され、他のBeanに注入することができます。実際の型引数は、クライアントエンドポイントを決定するために使用されます。この型は、構築時に検証されます - もしクライアントエンドポイントを表していなければ、構築は失敗します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Let’s consider the following client endpoint:"
msgstr "次のクライアントエンドポイントを考えてみましょう。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Client endpoint"
msgstr "クライアントエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The connector for this client endpoint is used as follows:"
msgstr "このクライアントエンドポイントのコネクターは次のように使用されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Connector"
msgstr "コネクター"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Inject the connector for `ClientEndpoint`."
msgstr "`ClientEndpoint` のコネクターを注入します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "If the base `URI` is not supplied we attempt to obtain the value from the config. The key consists of the client id and the `.base-uri` suffix."
msgstr "ベース `URI` が指定されていない場合は、設定から値を取得しようとします。キーは、クライアント ID と `.base-uri` 接尾辞で構成されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Set the path param value. Throws `IllegalArgumentException` if the client endpoint path does not contain a parameter with the given name."
msgstr "パスパラメーター値を設定します。クライアントエンドポイントパスに指定された名前のパラメーターが含まれていない場合は、`IllegalArgumentException` がスローされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Use the connection to send messages, if needed."
msgstr "必要に応じて、接続を使用してメッセージを送信します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "If an application attempts to inject a connector for a missing endpoint, an error is thrown."
msgstr "アプリケーションが、存在しないエンドポイントのコネクターを注入しようとすると、エラーがスローされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Basic connector"
msgstr "基本コネクター"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"In the case where the application developer does not need the combination of the client endpoint and the connector, a _basic connector_ can be used.\n"
"The basic connector is a simple way to create a connection and consume/send messages without defining a client endpoint."
msgstr ""
"アプリケーション開発者がクライアントエンドポイントとコネクターの組み合わせを必要としない場合は、_基本コネクター_ を使用できます。\n"
"基本コネクターは、クライアントエンドポイントを定義せずに接続を作成し、メッセージを消費/送信する簡単な方法です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Inject the connector."
msgstr "コネクターを注入します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The base URI must be always set."
msgstr "ベース URI は常に設定する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The additional path that should be appended to the base URI."
msgstr "ベース URI に追加する必要がある追加パス。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Set the execution model for callback handlers. By default, the callback may block the current thread. However in this case, the callback is executed on the event loop and may not block the current thread."
msgstr "コールバックハンドラーの実行モデルを設定します。デフォルトでは、コールバックは現在のスレッドをブロックする可能性があります。ただし、この場合、コールバックはイベントループで実行され、現在のスレッドをブロックしない可能性があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The lambda will be called for every text message sent from the server."
msgstr "lambda は、サーバーから送信されるテキストメッセージごとに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The basic connector is closer to a low-level API and is reserved for advanced users.\n"
"However, unlike others low-level WebSocket clients, it is still a CDI bean and can be injected in other beans.\n"
"It also provides a way to configure the execution model of the callbacks, ensuring optimal integration with the rest of Quarkus."
msgstr ""
"基本コネクターは低レベル API に近いため、上級ユーザー向けに予約されています。\n"
"ただし、他の低レベルの WebSocket クライアントとは異なり、これは引き続き CDI Bean であり、他の Bean に注入できます。\n"
"また、コールバックの実行モデルを設定する方法も提供し、Quarkus の他の部分との最適なインテグレーションを確保します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "WebSocket client connection"
msgstr "WebSocket クライアント接続"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketClientConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocketClient` endpoint and used to interact with the connected server."
msgstr ""
"`io.quarkus.websockets.next.WebSocketClientConnection` オブジェクトは WebSocket 接続を表します。\n"
"Quarkus は、このインターフェイスを実装し、`WebSocketClient` エンドポイントに注入して、接続されたサーバーと対話するために使用できる `@SessionScoped` CDI Bean を提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketClientConnection` object:"
msgstr "`@OnOpen`、`@OnTextMessage`、`@OnBinaryMessage`、および `@OnClose` アノテーションが付与されたメソッドは、注入された `WebSocketClientConnection` オブジェクトにアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Note that outside of these methods, the `WebSocketClientConnection` object is not available. However, it is possible to <<list-open-client-connections,list all open client connections>>."
msgstr "これらのメソッド以外では、`WebSocketClientConnection` オブジェクトは利用できないことに注意してください。ただし、<<list-open-client-connections,開いているすべてのクライアント接続をリスト表示>> することは可能です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, etc."
msgstr "この接続を使用して、クライアントにメッセージを送信したり、パスパラメーターにアクセスしたりできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The `WebSocketClientConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketClientConnection` は、メッセージを送信するためのブロッキングメソッドとノンブロッキングメソッドの両方のバリアントを提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "List open client connections"
msgstr "開いているクライアント接続をリスト表示する"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenClientConnections` that declares convenient methods to access the connections."
msgstr ""
"開いているすべての接続をリスト表示することもできます。\n"
"Quarkus は、接続にアクセスするための便利なメソッドを宣言する `io.quarkus.websockets.next.OpenClientConnections` タイプの CDI Bean を提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "`OpenClientConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenClientConnections#listAll()` は、指定された時点で開いているすべての接続のイミュータブルなスナップショットを返します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenClientConnections#findByClientId(String)` makes it easy to find connections for a specific endpoint."
msgstr ""
"他にも便利な方法があります。\n"
"たとえば、`OpenClientConnections#findByClientId(String)` を使用すると、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr ""
"Quarkus は、新しい接続が開かれると、修飾子 `@io.quarkus.websockets.next.Open` を持つ `io.quarkus.websockets.next.WebSocketConnection` タイプの CDI イベントを非同期的に起動します。\n"
"さらに、接続が閉じられると、修飾子 `@io.quarkus.websockets.next.Closed` を持つ `WebSocketClientConnection` タイプの CDI イベントが非同期的に起動します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Configuring SSL/TLS"
msgstr "SSL/TLS の設定"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "To establish a TLS connection, you need to configure a _named_ configuration using the xref:./tls-registry-reference.adoc[TLS registry]:"
msgstr "TLS 接続を確立するには、xref:./tls-registry-reference.adoc[TLS レジストリー] を使用して、_名前付き_ の設定を設定する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"When using the WebSocket client, using a _named_ configuration is required to avoid conflicts with other TLS configurations.\n"
"The client will not use the default TLS configuration."
msgstr ""
"WebSocket クライアントを使用する場合は、他の TLS 設定との競合を避けるために、_名前付き_ 設定を使用する必要があります。\n"
"クライアントはデフォルトの TLS 設定を使用しません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "When you configure a _named_ TLS configuration, TLS is enabled by default."
msgstr "_名前付き_ TLS 設定を行うと、TLS はデフォルトで有効になります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Traffic logging"
msgstr "トラフィックロギング"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid ""
"Quarkus can log the messages sent and received for debugging purposes.\n"
"To enable traffic logging for the server, set the `quarkus.websockets-next.server.traffic-logging.enabled` configuration property to `true`.\n"
"To enable traffic logging for the client, set the `quarkus.websockets-next.client.traffic-logging.enabled` configuration property to `true`.\n"
"The payload of text messages is logged as well.\n"
"However, the number of logged characters is limited.\n"
"The default limit is 100, but you can change this limit with the `quarkus.websockets-next.server.traffic-logging.text-payload-limit` and `quarkus.websockets-next.client.traffic-logging.text-payload-limit` configuration property, respectively."
msgstr ""
"Quarkus は、デバッグの目的で送受信されたメッセージをログに記録できます。\n"
"サーバーのトラフィックロギングを有効にするには、`quarkus.websockets-next.server.traffic-logging.enabled` 設定プロパティーを `true` に設定します。\n"
"クライアントのトラフィックロギングを有効にするには、`quarkus.websockets-next.client.traffic-logging.enabled` 設定プロパティーを `true` に設定します。\n"
"テキストメッセージのペイロードも記録されます。\n"
"ただし、記録される文字数には制限があります。\n"
"デフォルトの制限は 100 ですが、`quarkus.websockets-next.server.traffic-logging.text-payload-limit` および `quarkus.websockets-next.client.traffic-logging.text-payload-limit` 設定プロパティーをそれぞれ使用してこの制限を変更できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "The messages are only logged if the `DEBUG` level is enabled for the logger `io.quarkus.websockets.next.traffic`."
msgstr "メッセージは、ロガー `io.quarkus.websockets.next.traffic` に対して `DEBUG` レベルが有効になっている場合にのみ記録されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Example server configuration"
msgstr "サーバー設定の例"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Enables traffic logging."
msgstr "トラフィックロギングを有効にします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Set the number of characters of a text message payload which will be logged."
msgstr "ログに記録されるテキストメッセージペイロードの文字数を設定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Enable `DEBUG` level is for the logger `io.quarkus.websockets.next.traffic`."
msgstr "ロガー `io.quarkus.websockets.next.traffic` に対して `DEBUG` レベルを有効にします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
