msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "WebSockets Next extension reference guide"
msgstr "WebSockets Next エクステンションリファレンスガイド"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr "`quarkus-websockets-next` 拡張は、WebSocket サーバーとクライアントのエンドポイントを定義するための最新の宣言型 API を提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket protocol"
msgstr "WebSocketプロトコル"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] で文書化されている _WebSocket_ プロトコルは、単一の TCP 接続を通じてクライアントとサーバーの間に双方向通信チャネルを作成するための標準化された方法を確立します。HTTPとは異なり、WebSocketは別のTCPプロトコルとして動作しますが、HTTPとシームレスに機能するように設計されています。例えば、同じポートを再利用し、同じセキュリティ機構と互換性があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr "WebSocket を使用した対話は、WebSocket プロトコルに移行するために 'Upgrade' ヘッダーを使用する HTTP リクエストで開始します。サーバーは `200 OK` レスポンスの代わりに、HTTP 接続を WebSocket 接続にアップグレードするための `101 Switching Protocols` レスポンスで応答します。このハンドシェイクが成功すると、最初の HTTP アップグレードリクエストで使用された TCP ソケットは開いたままになり、クライアントとサーバーの両方が継続的に双方向のメッセージを交換できるようになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTPとWebSocketのアーキテクチャスタイル"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "WebSocket は HTTP と互換性があり、HTTP リクエストによって開始されるにもかかわらず、2 つのプロトコルは明確に異なるアーキテクチャとプログラミングモデルにつながることを認識することが重要です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr "HTTP/RESTでは、アプリケーションはさまざまなHTTPメソッドとパスを扱うリソース/エンドポイントを中心に構成されます。クライアントとの対話は、リクエスト-レスポンスパターンに従って、適切なメソッドとパスを持つ HTTP リクエストを発行することで行われます。サーバーは、パス、メソッド、ヘッダーに基づいて、入ってきたリクエストを対応するハンドラーにルーティングし、その後、明確に定義されたレスポンスで返信します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr "逆に、WebSocketは通常、最初のHTTP接続に単一のエンドポイントを使用し、その後すべてのメッセージは同じTCP接続を使用します。WebSocket は、非同期かつメッセージ駆動型という、まったく異なる相互作用モデルを導入しています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr "WebSocketはHTTPとは対照的に、低レベルのトランスポートプロトコルです。メッセージの形式、ルーティング、または処理には、メッセージのセマンティクスに関するクライアントとサーバー間の事前の合意が必要です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "WebSocket クライアントとサーバーでは、HTTP ハンドシェイクリクエストの `Sec-WebSocket-Protocol` ヘッダーが、より高いレベルのメッセージングプロトコルのネゴシエーションを可能にします。このヘッダがない場合、サーバーとクライアントは独自の規約を確立する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSocketsとQuarkus WebSockets Nextの比較"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr "このガイドでは、WebSocket API の実装である `quarkus-websockets-next` エクステンションを使用します。このエクステンションは、従来の `quarkus-websockets` エクステンションよりも効率と使いやすさが向上しています。オリジナルの `quarkus-websockets` エクステンションは引き続きアクセス可能で、継続的なサポートを受けられますが、機能開発が行われる可能性は低いです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr "`quarkus-websockets` とは異なり、 `quarkus-websockets-next` 拡張は Jakarta WebSocket 仕様を実装して *いません* 。その代わりに、使いやすさを優先した最新のAPIを導入しています。さらに、Quarkusのリアクティブアーキテクチャやネットワークレイヤーとシームレスに統合できるように調整されています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr "Quarkus WebSockets Nextエクステンションで使用されるアノテーションは、JSR 356のアノテーションと名前が同じであるにもかかわらず、異なります。JSRのアノテーションは、Quarkus WebSockets Nextエクステンションが従わないセマンティクスを持ちます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Project setup"
msgstr "プロジェクトのセットアップ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "To use the `websockets-next` extension, you need to add the `io.quarkus:quarkus-websockets-next` depencency to your project."
msgstr "`websockets-next` エクステンションを使用するには、 `io.quarkus:quarkus-websockets-next` ディペンセンシーをプロジェクトに追加する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Endpoints"
msgstr "エンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Both the server and client APIs allow you to define _endpoints_ that are used to consume and send messages.\n"
"The endpoints are implemented as CDI beans and support injection.\n"
"Endpoints declare <<callback-methods,_callback methods_>> annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnPong`, `@OnOpen`, `@OnClose` and `@OnError`.\n"
"These methods are used to handle various WebSocket events.\n"
"Typically, a method annotated with `@OnTextMessage` is called when the connected client sends a message to the server and vice versa."
msgstr "サーバーAPIとクライアントAPIの両方で、メッセージの消費と送信に使用する _エンドポイントを_ 定義できます。エンドポイントはCDI Beanとして実装され、インジェクションをサポートします。エンドポイントは、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnPong` 、 `@OnOpen` 、 `@OnClose` 、 `@OnError` でアノテーションされた xref:callback-methods[コールバックメソッドを] 宣言します。これらのメソッドは、さまざまな WebSocket イベントを処理するために使用されます。通常、 `@OnTextMessage` でアノテーションされたメソッドは、接続されたクライアントがサーバーにメッセージを送信するときに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The client API also includes <<client-connectors,connectors>> that are used to configure and create new WebSocket connections."
msgstr "クライアント API には、新しい WebSocket 接続の設定や作成に使用する xref:client-connectors[コネクタ] も含まれています。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server endpoints"
msgstr "サーバーエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Server endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocket`.\n"
"The value of `WebSocket#path()` is used to define the path of the endpoint."
msgstr "サーバ・エンドポイントは `@io.quarkus.websockets.next.WebSocket` でアノテーションされたクラスです。 `WebSocket#path()` の値は、エンドポイントのパスを定義するために使用されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr "したがって、クライアントは `ws://localhost:8080/chat/your-name` を使ってこのウェブソケットエンドポイントに接続できます。TLSを使用する場合、URLは `wss://localhost:8443/chat/your-name` になります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The endpoint path is relative to the xref:http-reference.adoc#context-path[root context] configured by the `quarkus.http.root-path` (which is `/` by default). For example, if you add `quarkus.http.root-path=/api` to your `application.properties` then a client can connect to this endpoint using `http://localhost:8080/api/chat/the-name`."
msgstr "エンドポイントのパスは、 `quarkus.http.root-path` （デフォルトでは `/` ）で設定された xref:http-reference.adoc#context-path[ルートコンテキストからの] 相対パスです。例えば、 `application.properties` に `quarkus.http.root-path=/api` を追加した場合、クライアントはこのエンドポイントに接続するために `http://localhost:8080/api/chat/the-name` ."

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoints"
msgstr "クライアントエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Client endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocketClient`.\n"
"The value of `WebSocketClient#path()` is used to define the path of the endpoint this client will be connected to."
msgstr "クライアントのエンドポイントは `@io.quarkus.websockets.next.WebSocketClient` でアノテーションされたクラスです。 `WebSocketClient#path()` の値は、このクライアントが接続されるエンドポイントのパスを定義するために使用されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoints are used to consume and send messages. You'll need the <<client-connectors,connectors API>> to configure and open new WebSocket connections."
msgstr "クライアントエンドポイントは、メッセージの受信と送信に使用されます。新しい WebSocket 接続を設定したり開いたりするには、 xref:client-connectors[コネクタ API] が必要です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path parameters"
msgstr "パスパラメータ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The path of a WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr "WebSocket エンドポイントのパスには、パス・パラメータを含めることができます。構文は JAX-RS リソースと同じです： `{parameterName}` ."

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"You can access the path parameter values using the `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` method, or `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` respectively.\n"
"Alternatively, an endpoint callback method parameter annotated with `@io.quarkus.websockets.next.PathParam` is injected automatically."
msgstr "それぞれ `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` メソッドまたは `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` を使用して、パス・パラメータの値にアクセスできます。あるいは、 `@io.quarkus.websockets.next.PathParam` でアノテーションされたエンドポイントコールバックメソッドパラメータが自動的に注入されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection#pathParam(String)` example"
msgstr "`WebSocketConnection#pathParam(String)` 例"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` method returns `null`.\n"
"If there is an endpoint callback method parameter annotated with `@PathParam` and the parameter name is not defined in the endpoint path, then the build fails."
msgstr "パスパラメータの値は常に文字列です。パスパラメータがパスに存在しない場合、 `WebSocketConnection#pathParam(String)` / `WebSocketClientConnection#pathParam(String)` メソッドは `null` を返します。 `@PathParam` でアノテーションされたエンドポイントコールバックメソッドパラメータがあり、パラメータ名がエンドポイントパスで定義されていない場合、ビルドは失敗します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Query parameters are not supported. However, you can access the query using `WebSocketConnection#handshakeRequest().query()`"
msgstr "クエリ・パラメータはサポートされていません。しかし `WebSocketConnection#handshakeRequest().query()`"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI scopes"
msgstr "CDIスコープ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Endpoints are managed as CDI beans.\n"
"By default, the `@Singleton` scope is used.\n"
"However, developers can specify alternative scopes to fit their specific requirements."
msgstr "エンドポイントはCDI Beanとして管理されます。デフォルトでは、 `@Singleton` スコープが使用されます。しかし、開発者は特定の要件に合うように別のスコープを指定することができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@Singleton` and `@ApplicationScoped` endpoints are shared across all WebSocket connections.\n"
"Therefore, implementations should be either stateless or thread-safe."
msgstr "`@Singleton` と のエンドポイントは、すべての WebSocket 接続で共有されます。したがって、実装はステートレスかスレッドセーフである必要があります。 `@ApplicationScoped`"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This server endpoint is not shared and is scoped to the session."
msgstr "このサーバーエンドポイントは共有されず、セッションにスコープされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Each WebSocket connection is associated with its own _session_ context.\n"
"When the `@OnOpen` method is invoked, a session context corresponding to the WebSocket connection is created.\n"
"Subsequent calls to `@On[Text|Binary]Message` or `@OnClose` methods utilize this same session context.\n"
"The session context remains active until the `@OnClose` method completes execution, at which point it is terminated."
msgstr "各 WebSocket 接続は、独自の _セッション_ コンテキストに関連付けられています。 `@OnOpen` メソッドが呼び出されると、WebSocket 接続に対応するセッションコンテキストが作成されます。その後の `@On[Text|Binary]Message` または `@OnClose` メソッドの呼び出しでは、この同じセッション コンテキストが使用されます。セッションコンテキストは、 `@OnClose` メソッドの実行が完了するまでアクティブなままです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In cases where a WebSocket endpoint does not declare an `@OnOpen` method, the session context is still created.\n"
"It remains active until the connection terminates, regardless of the presence of an `@OnClose` method."
msgstr "WebSocket のエンドポイントが `@OnOpen` メソッドを宣言していない場合でも、セッションコンテキストは作成されます。これは、 `@OnClose` メソッドの存在に関係なく、接続が終了するまでアクティブなままです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen`, and `@OnClose` also have the request scope activated for the duration of the method execution (until it produced its result)."
msgstr "`@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen` `@OnClose` でアノテーションされたメソッドも、メソッド実行中 (結果を生成するまで) はリクエストスコープがアクティブになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Callback methods"
msgstr "コールバックメソッド"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "A WebSocket endpoint may declare:"
msgstr "WebSocketエンドポイントは宣言することができます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnTextMessage` method: Handles the text messages from the connected client/server."
msgstr "`@OnTextMessage` メソッドは1つまで：接続されたクライアント/サーバからのテキストメッセージを処理します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages from the connected client/server."
msgstr "`@OnBinaryMessage` メソッドは最大1つ：接続されたクライアント/サーバからのバイナリメッセージを処理します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnPongMessage` method: Handles the pong messages from the connected client/server."
msgstr "`@OnPongMessage` メソッドは1つだけ：接続されたクライアント/サーバからのポンメッセージを処理します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnOpen` method: Invoked when a connection is opened."
msgstr "`@OnOpen` メソッドは1つまで：接続がオープンされたときに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnClose` method: Executed when the connection is closed."
msgstr "`@OnClose` メソッドは1つまで：接続が閉じられたときに実行されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任意の数の `@OnError` メソッド：つまり、エンドポイントコールバックがランタイムエラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` が失敗したときです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr "すべてのメソッドを含める必要があるのは一部のエンドポイントだけです。ただし、少なくとも `@On[Text|Binary]Message` か `@OnOpen` を含む必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr "これらの規則に違反するエンドポイントがあると、ビルド時にエラーがスローされます。サブ・ウェブソケットを表す静的な入れ子クラスも、同じガイドラインに従います。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "WebSocket エンドポイントの外側で、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnOpen` 、 `@OnClose` でアノテーションされたメソッドはエラーと見なされ、適切なエラーメッセージとともにビルドが失敗します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Processing messages"
msgstr "メッセージの処理"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "クライアントからメッセージを受け取るメソッドは、 `@OnTextMessage` または `@OnBinaryMessage` でアノテーションされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr "`OnTextMessage` `OnBinaryMessage` はクライアントが _バイナリ_ メッセージを受信するたびに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Invocation rules"
msgstr "呼び出しルール"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When invoking these annotated methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr "これらの注釈付きメソッドを呼び出すと、WebSocket 接続にリンクされている _セッション_ スコープがアクティブのままになります。さらに、リクエストスコープはメソッドが完了するまで (または非同期メソッドや反応型メソッドの場合は結果が生成されるまで) アクティブです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined by the method signature and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr "Quarkus WebSocket Nextは、Quarkus RESTと同様に、 _ブロッキングと_ _ノンブロッキングの_ ロジックをサポートしています。これは、メソッドのシグネチャと、 `@Blocking` や `@NonBlocking` などの追加アノテーションによって決定されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are the rules governing execution:"
msgstr "以下は実行に関するルールです："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Non-blocking methods must execute on the connection's event loop."
msgstr "ノンブロッキング・メソッドは、接続のイベント・ループで実行されなければなりません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@RunOnVirtualThread` are considered blocking and should execute on a virtual thread."
msgstr "`@RunOnVirtualThread` でアノテーションされたメソッドはブロッキングとみなされ、仮想スレッド上で実行されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Blocking methods must execute on a worker thread if not annotated with `@RunOnVirtualThread`."
msgstr "ブロックメソッドは、 `@RunOnVirtualThread` でアノテーションされていない場合、ワーカースレッドで実行する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When `@RunOnVirtualThread` is employed, each invocation spawns a new virtual thread."
msgstr "`@RunOnVirtualThread` 、呼び出されるたびに新しい仮想スレッドが生成されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `CompletionStage`, `Uni` and `Multi` are considered non-blocking."
msgstr "`CompletionStage` 、 `Uni` 、 `Multi` を返すメソッドはノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `void` or plain objects are considered blocking."
msgstr "`void` またはプレーンなオブジェクトを返すメソッドはブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` functions are considered non-blocking."
msgstr "Kotlin `suspend` 関数はノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method parameters"
msgstr "メソッドパラメータ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept exactly one message parameter:"
msgstr "このメソッドは、正確に1つのメッセージ・パラメータを受け入れなければなりません："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object (of any type)."
msgstr "メッセージ・オブジェクト（任意の型）。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "A `Multi<X>` with X as the message type."
msgstr "X をメッセージ・タイプとする `Multi<X>` 。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "However, it may also accept the following parameters:"
msgstr "ただし、以下のパラメータを受け付けることもあります："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection`/`WebSocketClientConnection`"
msgstr "`WebSocketConnection` / `WebSocketClientConnection`"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`String` パラメータは `@PathParam`"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "メッセージ・オブジェクトは送信されたデータを表し、生のコンテンツ（ `String` , `JsonObject` , `JsonArray` , `Buffer` , `byte[]` ）またはデシリアライズされた高レベル・オブジェクトとしてアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"The method must subscribe to the `Multi` to receive these items (or return a Multi)."
msgstr "`Multi` を受信するとき、このメソッドは接続ごとに 1 回呼び出され、提供された `Multi` はこの接続によって送信されたアイテムを受信します。メソッドは、これらのアイテムを受信するために `Multi` をサブスクライブする必要があります (または Multi を返します)。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Supported return types"
msgstr "サポートされるリターン・タイプ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "`@OnTextMessage` または `@OnBinaryMessage` でアノテーションされたメソッドは、WebSocket 通信を効率的に処理するためにさまざまな型を返すことができます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void` :明示的な応答がクライアントに返されないブロッキング・メソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>` :返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを表します。明示的なレスポンスはクライアントに返されません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` 型のオブジェクトは、返されたオブジェクトがシリアライズされ、レスポンスとしてクライアントに送り返されるブロッキングメソッドを表します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>` :ノンブロッキングメソッドを指定し、 `Uni` によって生成されたアイテムがレスポンスとしてクライアントに送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>` :ノンブロッキングメソッドを表し、ノンヌル `Multi` によって発行されたアイテムは、完了またはキャンセルされるまでクライアントに順次送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit response is sent back to the client."
msgstr "Kotlin `Unit` を返す `suspend` 関数 : 明示的なレスポンスがクライアントに送り返されないノンブロッキングメソッドを表します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client as a response."
msgstr "Kotlin `X` を返す `suspend` 関数 : 返されたアイテムがレスポンスとしてクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are some examples of these methods:"
msgstr "以下はその方法の例です："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When returning a Multi, Quarkus subscribes to the returned Multi automatically and writes the emitted items until completion, failure, or cancellation. Failure or cancellation terminates the connection."
msgstr "Multiを返すと、Quarkusは返されたMultiを自動的に購読し、完了、失敗、またはキャンセルされるまで、発行されたアイテムを書き込みます。失敗またはキャンセルすると、接続が終了します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Streams"
msgstr "ストリーム"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr "個々のメッセージに加えて、WebSocket エンドポイントはメッセージのストリームを扱うことができます。この場合、メソッドは `Multi<X>` をパラメータとして受け取ります。 `X` の各インスタンスは、上記と同じルールでデシリアライズされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr "`Multi` を受信したメソッドは、別の `Multi` か `void` を返すことができます。メソッドが `Multi` を返す場合、受信した `multi` を購読する必要はありません："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This approach allows bi-directional streaming."
msgstr "このアプローチは双方向ストリーミングを可能にします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the method returns `void`, it must subscribe to the incoming `Multi`:"
msgstr "メソッドが `void` を返すとき、それは `Multi` を受信しなければなりません："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Skipping reply"
msgstr "返信省略"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr "メソッドがクライアントに書き込むメッセージを生成することを意図している場合、それは `null` を発することができます。 `null` を発することは、クライアントにレスポンスを送らないことを意味します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "JsonObject and JsonArray"
msgstr "JsonObject と JsonArray"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr "Vert.x `JsonObject` および `JsonArray` インスタンスは、シリアライズおよびデシリアライズのメカニズムをバイパスします。メッセージはテキストメッセージとして送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "OnOpen and OnClose methods"
msgstr "OnOpenメソッドとOnCloseメソッド"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "WebSocket エンドポイントは、クライアントが接続または切断したときに通知することもできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "これは、メソッドに `@OnOpen` または `@OnClose` のアノテーションを付けることで行います："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` はクライアント接続時に起動され、 は切断時に起動されます。 `@OnClose` "

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "これらのメソッドは、 _セッション・スコープの_ `WebSocketConnection` Bean にアクセスできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Parameters"
msgstr "パラメーター"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "`@OnOpen` と `@OnClose` でアノテーションされたメソッドは、以下のパラメータを受け取ることができます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "`@OnClose` でアノテーションされたエンドポイントメソッドは、接続を閉じる理由を示す `io.quarkus.websockets.next.CloseReason` パラメータも受け取ることができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` メソッドと メソッドでは、返される型が異なります。 `@OnClose` "

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr "`@OnOpen` メソッドについては、 `@On[Text|Binary]Message` と同じルールが適用されます。したがって、 `@OnOpen` でアノテーションされたメソッドは、接続後すぐにクライアントにメッセージを送信できます。 `@OnOpen` メソッドでサポートされている戻り値の型は以下のとおりです："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void` :接続されたクライアントに明示的なメッセージを送り返さないブロッキング・メソッドを示します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>` :返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを表します。クライアントにメッセージは返されません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` 型のオブジェクト：返されたオブジェクトがシリアライズされてクライアントに送り返されるブロッキングメソッドを表します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>` :ノンブロッキング・メソッドを指定し、 `Uni` によって生成されたアイテムがクライアントに送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit message is sent back to the client."
msgstr "Kotlin `suspend` 関数 return `Unit` : 明示的なメッセージがクライアントに送り返されないノンブロッキングメソッドを表します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client."
msgstr "Kotlin `X` を返す `suspend` 関数 : 返されたアイテムがクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Items sent to the client are <<serialization,serialized>> except for the `String`, `io.vertx.core.json.JsonObject`, `io.vertx.core.json.JsonArray`, `io.vertx.core.buffer.Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr "クライアントに送信されるアイテムは、 `String` 、 `io.vertx.core.json.JsonObject` 、 `io.vertx.core.json.JsonArray` 、 `io.vertx.core.buffer.Buffer` 、 `byte[]` のタイプを除き、 xref:serialization[シリアライズさ] れます。 `Multi` の場合、Quarkus は返された `Multi` を購読し、アイテムが送信されると `WebSocket` に書き込みます。 `String` `JsonObject` と `JsonArray` はテキストメッセージとして送信されます。 `Buffers` とバイト配列はバイナリメッセージとして送信されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "For `@OnClose` methods, the supported return types include:"
msgstr "`@OnClose` メソッドの場合、サポートされている戻り値の型は以下のとおりです："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: The method is considered blocking."
msgstr "`void` :このメソッドはブロッキングと見なされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>` :このメソッドはノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: The method is considered non-blocking."
msgstr "Kotlin `suspend` 関数 return `Unit` : メソッドはノンブロッキングとみなされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@OnClose` methods declared on a server endpoint cannot send items to the connected client by returning objects.\n"
"They can only send messages to the other clients by using the `WebSocketConnection` object."
msgstr "`@OnClose` サーバエンドポイントで宣言されたメソッドは、オブジェクトを返すことによって接続中のクライアントにアイテムを送信することはできません。他のクライアントにメッセージを送信するには、 オブジェクトを使用します。 `WebSocketConnection`"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Error handling"
msgstr "エラー処理"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "WebSocket エンドポイントは、エラーが発生したときに通知することもできます。 `@io.quarkus.websockets.next.OnError` でアノテーションされた WebSocket エンドポイントメソッドは、エンドポイントコールバックが実行時エラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` が失敗したときに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method must accept exactly one _error_ parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr "このメソッドは、1つの _エラー_ パラメータ、つまり `java.lang.Throwable` から代入可能なパラメータを受け入れなければなりません。 このメソッドは、以下のパラメータも受け入れることができます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr "`@io.quarkus.websockets.next.OnError` ただし、各メソッドは異なるエラー・パラメータを宣言する必要があります。実際の例外の最も特異的なスーパータイプを宣言しているメソッドが選択されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` parameters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr "`@io.quarkus.websockets.next.OnError` アノテーションを使用して、グローバルエラーハンドラ、つまり WebSocket エンドポイントで宣言されていないメソッドを宣言することもできます。このようなメソッドは `@PathParam` パラメータを受け付けません。エンドポイントで宣言されたエラーハンドラは、グローバルエラーハンドラよりも優先されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy`.\n"
"By default, the connection is closed.\n"
"Alternatively, an error message can be logged or no operation performed."
msgstr "エラーが発生したが、エラーハンドラで処理できない場合、Quarkus は `quarkus.websockets-next.server.unhandled-failure-strategy` で指定された戦略を使用します。デフォルトでは、接続は閉じられます。または、エラーメッセージがログに記録されるか、操作が実行されなくなります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Serialization and deserialization"
msgstr "シリアライズとデシリアライズ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next 拡張は、メッセージの自動シリアライズとデシリアライズをサポートします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and bypass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization convert the message from/to JSON automatically."
msgstr "`String` , `JsonObject` , `JsonArray` , `Buffer` , `byte[]` 型のオブジェクトはそのまま送信され、シリアライズとデシリアライズをバイパスします。コーデックが提供されていない場合、シリアライズとデシリアライズは自動的にメッセージをJSONに変換します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "シリアライズとデシリアライズをカスタマイズする必要がある場合は、カスタムコーデックを提供することができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Custom codec"
msgstr "カスタムコーデック"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "To implement a custom codec, you must provide a CDI bean implementing:"
msgstr "カスタムコーデックを実装するには、実装するCDIビーンを提供する必要があります："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.BinaryMessageCodec` for binary messages"
msgstr "`io.quarkus.websockets.next.BinaryMessageCodec` バイナリメッセージの場合"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.TextMessageCodec` for text messages"
msgstr "`io.quarkus.websockets.next.TextMessageCodec` テキストメッセージ用"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "次の例は、 `Item` クラスにカスタムコーデックを実装する方法を示しています："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec should be used explicitly:"
msgstr "`OnTextMessage` メソッドや メソッドでは、使用するコーデックを明示的に指定することもできます： `OnBinaryMessage` "

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "メッセージのデシリアライズとシリアライズの両方に使用するコーデックを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "シリアライズとデシリアライズで異なるコーデックを使用する必要がある場合は、シリアライズとデシリアライズで使用するコーデックを別々に指定できます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the deserialization of the incoming message"
msgstr "受信メッセージのデシリアライズに使用するコーデックを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "送信メッセージのシリアライゼーションに使用するコーデックを指定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Ping/pong messages"
msgstr "ピンポンメッセージ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping message] may serve as a keepalive or to verify the remote endpoint.\n"
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong message] is sent in response to a ping message and it must have an identical payload."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[pingメッセージは] キープアライブとして、あるいはリモート・エンドポイントを確認するために使われます。 link:https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong メッセージは] ping メッセージに応答して送信され、同一のペイロードを持たなければなりません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Server/client endpoints automatically respond to a ping message sent from the client/server.\n"
"In other words, there is no need for `@OnPingMessage` callback declared on an endpoint."
msgstr "サーバー/クライアントエンドポイントは、クライアント/サーバーから送信されたpingメッセージに自動的に応答します。言い換えると、エンドポイントで宣言された `@OnPingMessage` コールバックは必要ありません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The server can send ping messages to a connected client.\n"
"`WebSocketConnection`/`WebSocketClientConnection` declare methods to send ping messages; there is a non-blocking variant: `sendPing(Buffer)` and a blocking variant: `sendPingAndAwait(Buffer)`.\n"
"By default, the ping messages are not sent automatically.\n"
"However, the configuration properties `quarkus.websockets-next.server.auto-ping-interval` and `quarkus.websockets-next.client.auto-ping-interval` can be used to set the interval after which, the server/client sends a ping message to a connected client/server automatically."
msgstr "サーバは接続しているクライアントにpingメッセージを送ることができます。 `WebSocketConnection` `WebSocketClientConnection` `sendPing(Buffer)` `sendPingAndAwait(Buffer)` / デフォルトでは、ping メッセージは自動的には送信されません。しかし、設定プロパティ `quarkus.websockets-next.server.auto-ping-interval` と `quarkus.websockets-next.client.auto-ping-interval` を使って、サーバ/クライアントが接続中のクライアント/サーバに自動的に ping メッセージを送信する間隔を設定することができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sends a ping message from the server to a connected client every 2 seconds."
msgstr "サーバーから接続中のクライアントに2秒ごとにpingメッセージを送信します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `@OnPongMessage` annotation is used to define a callback that consumes pong messages sent from the client/server.\n"
"An endpoint must declare at most one method annotated with `@OnPongMessage`.\n"
"The callback method must return either `void` or `Uni<Void>` (or be a Kotlin `suspend` function returning `Unit`), and it must accept a single parameter of type `Buffer`."
msgstr "`@OnPongMessage` アノテーションは、クライアント/サーバーから送信された pong メッセージを消費するコールバックを定義するために使用されます。エンドポイントは、 `@OnPongMessage` でアノテーションされたメソッドを 1 つ以上宣言する必要があります。コールバックメソッドは `void` または `Uni<Void>` のいずれかを返す必要があり（または `Unit` を返す Kotlin `suspend` 関数である必要があります）、 `Buffer` 型のパラメータを 1 つ受け入れる必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The server/client can also send unsolicited pong messages that may serve as a unidirectional heartbeat. There is a non-blocking variant: `WebSocketConnection#sendPong(Buffer)` and also a blocking variant: `WebSocketConnection#sendPongAndAwait(Buffer)`."
msgstr "サーバー/クライアントはまた、一方向のハートビートとなる未承諾の pongメッセージを送ることができます。ノンブロッキングの variant: `WebSocketConnection#sendPong(Buffer)` とブロッキングの variant: `WebSocketConnection#sendPongAndAwait(Buffer)` があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inbound processing mode"
msgstr "インバウンド処理モード"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can define the mode used to process incoming events for a specific connection using the `@WebSocket#inboundProcessingMode()`, and `@WebSocketClient.inboundProcessingMode()` respectively.\n"
"An incoming event can represent a message (text, binary, pong), opening connection and closing connection.\n"
"By default, events are processed serially and ordering is guaranteed.\n"
"This means that if an endpoint receives events `A` and `B` (in this particular order) then callback for event `B` will be invoked after the callback for event `A` completed.\n"
"However, in some situations it is preferable to process events concurrently, i.e. with no ordering guarantees but also with no concurrency limits.\n"
"For this cases, the `InboundProcessingMode#CONCURRENT` should be used."
msgstr "WebSocket エンドポイントは、それぞれ `@WebSocket#inboundProcessingMode()` 、 `@WebSocketClient.inboundProcessingMode()` を使用して、特定の接続の着信イベントを処理するために使用するモードを定義できます。着信イベントは、メッセージ（テキスト、バイナリ、ポン）、接続の開始、接続の終了を表すことができます。デフォルトでは、イベントはシリアルに処理され、順序は保証されます。つまり、エンドポイントがイベント `A` と `B` を（特定の順番で）受信した場合、イベント `A` のコールバックが完了した後に、イベント `B` のコールバックが呼び出されます。しかし、状況によっては、イベントを同時並行で処理することが望ましい場合があります。このような場合は、 `InboundProcessingMode#CONCURRENT` 。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server API"
msgstr "サーバーAPI"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP server configuration"
msgstr "HTTPサーバーの設定"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This extension reuses the _main_ HTTP server."
msgstr "このエクステンションは _メインの_ HTTPサーバーを再利用します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "したがって、WebSocketサーバーの設定は `quarkus.http.` の設定セクションで行います。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to `/`).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr "アプリケーション内で設定された WebSocket パスは、 `quarkus.http.root` （デフォルトは `/` ）で定義されたルートパスに連結されます。この連結により、WebSocket のエンドポイントがアプリケーションの URL 構造内に適切に配置されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "詳しくは xref:http-reference.adoc[HTTPガイド] をご覧ください。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sub-websockets endpoints"
msgstr "サブウェブソケットエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A `@WebSocket` endpoint can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-websockets_.\n"
"The resulting path of these sub-websockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr "`@WebSocket` エンドポイントは、静的な入れ子クラスをカプセル化することができ、そのクラスも `@WebSocket` でアノテートされ、 _サブ・ウェブソケットを_ 表します。これらのサブ・ウェブソケットの結果のパスは、包含クラスとネストされたクラスからのパスを連結したものです。結果のパスは、HTTP URL ルールに従って正規化されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Sub-websockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr "サブ・ウェブソケットは、包含クラスと入れ子クラスの両方の `@WebSocket` アノテーションで宣言されたパス・パラメー タへのアクセスを継承します。以下の例では、包含クラス内の `consumePrimary` メソッドが `version` パラメータにアクセスできます。一方、入れ子クラス内の `consumeNested` メソッドは、 `version` と `id` の両方のパラメータにアクセスできます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket connection"
msgstr "ウェブソケット接続"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocket` endpoint and used to interact with the connected client."
msgstr "`io.quarkus.websockets.next.WebSocketConnection` オブジェクトは、WebSocket 接続を表します。Quarkusは、このインターフェイスを実装し、 `WebSocket` エンドポイントに注入して接続クライアントとの対話に使用できる、 `@SessionScoped` CDI Beanを提供します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketConnection` object:"
msgstr "`@OnOpen` 、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnClose` でアノテーションされたメソッドは、注入された `WebSocketConnection` オブジェクトにアクセスできます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methods, the `WebSocketConnection` object is not available. However, it is possible to <<list-open-connections,list all open connections>>."
msgstr "これらのメソッド以外では、 `WebSocketConnection` オブジェクトは利用できないことに注意してください。しかし xref:list-open-connections[、開いている接続をすべてリストアップ] することは可能です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, broadcast messages to all connected clients, etc."
msgstr "接続は、クライアントへのメッセージ送信、パス・パラメーターへのアクセス、接続されているすべてのクライアントへのメッセージのブロードキャストなどに使用できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketConnection` はメッセージ送信にブロッキングとノンブロッキングの両方のメソッドを提供します："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)` :テキスト・メッセージをクライアントに送信し、メッセージが送信されるのを待ちます。これはブロックされるので、実行スレッドからのみ呼び出されるべきです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking, but you must subscribe to it."
msgstr "`sendText(String message)` :テキストメッセージをクライアントに送信します。 `Uni` を返します。 ノンブロッキングですが、サブスクライブする必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "List open connections"
msgstr "開いている接続のリスト"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenConnections` that declares convenient methods to access the connections."
msgstr "また、開いている接続をすべて一覧表示することも可能です。Quarkusでは、接続にアクセスするための便利なメソッドを宣言した `io.quarkus.websockets.next.OpenConnections` 。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OpenConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenConnections#listAll()` は、指定された時刻に開いているすべての接続の不変スナップショットを返します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenConnections#findByEndpointId(String)` makes it easy to find connections for a specific endpoint."
msgstr "他にも便利な方法があります。例えば、 `OpenConnections#findByEndpointId(String)` を使えば、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "CDI events"
msgstr "CDI イベント"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr "Quarkusでは、新しい接続が開かれると、 `@io.quarkus.websockets.next.Open` 修飾子が付いた `io.quarkus.websockets.next.WebSocketConnection` 型のCDIイベントが非同期に発生します。さらに、接続が閉じられると、 `@io.quarkus.websockets.next.Closed` の修飾子を持つ `WebSocketConnection` 型の CDI イベントが非同期に発生します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An asynchronous observer method is executed using the default blocking executor service."
msgstr "非同期オブザーバー・メソッドは、デフォルトのブロッキング・エグゼキューター・サービスを使用して実行されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Security"
msgstr "セキュリティ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr "WebSocket のエンドポイント・コールバック・メソッドは、 `io.quarkus.security.Authenticated` 、 `jakarta.annotation.security.RolesAllowed` などのセキュリティ注釈や、 xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[サポートされているセキュリティ注釈の] ドキュメントに記載されている注釈で保護することができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例えば、以下のようになります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr "echo コールバックメソッドは、現在のセキュリティ ID が `admin` ロールを持つ場合にのみ呼び出すことができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The error handler is invoked in case of the authorization failure."
msgstr "エラーハンドラは、認証に失敗した場合に呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`SecurityIdentity` is initially created during a secure HTTP upgrade and associated with the websocket connection."
msgstr "`SecurityIdentity` は、セキュアな HTTP アップグレード中に最初に作成され、ウェブソケット接続に関連付けられます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When OpenID Connect extension is used and token expires, Quarkus automatically closes connection."
msgstr "OpenID Connect拡張機能が使用され、トークンの有効期限が切れると、Quarkusは自動的に接続を閉じます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Secure HTTP upgrade"
msgstr "安全なHTTPアップグレード"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An HTTP upgrade is secured when standard security annotation is placed on an endpoint class or an HTTP Security policy is defined.\n"
"The advantage of securing HTTP upgrade is less processing, the authorization is performed early and only once.\n"
"You should always prefer HTTP upgrade security unless, like in th example above, you need to perform action on error."
msgstr "エンドポイント・クラスに標準的なセキュリティ・アノテーションを付けるか、HTTP セキュリティ・ポリシーを定義すると、HTTP アップグレードが保護されます。HTTP アップグレードのセキュリティを確保する利点は、処理が少なくて済むことです。上の例のように、エラー時にアクションを実行する必要がある場合を除き、常に HTTP アップグレードのセキュリティを優先すべきです。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use standard security annotation to secure an HTTP upgrade"
msgstr "標準的なセキュリティ・アノテーションを使用して、HTTPアップグレードを保護します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Initial HTTP handshake ends with the 401 status for anonymous users.\n"
"You can also redirect the handshake request on authorization failure with the `quarkus.websockets-next.server.security.auth-failure-redirect-url` configuration property."
msgstr "最初の HTTP ハンドシェイクは、匿名ユーザの場合、401 ステータスで終了します。また、 `quarkus.websockets-next.server.security.auth-failure-redirect-url` 構成プロパティを使用して、認証失敗時にハンドシェイク要求をリダイレクトすることもできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"HTTP upgrade is only secured when a security annotation is declared on an endpoint class next to the `@WebSocket` annotation.\n"
"Placing a security annotation on an endpoint bean will not secure bean methods, only the HTTP upgrade.\n"
"You must always verify that your endpoint is secured as intended."
msgstr "HTTP アップグレードは、 `@WebSocket` アノテーションの隣にあるエンドポイント・クラス上で セキュリティ・アノテーションが宣言されている場合にのみ保護されます。エンドポイント Bean にセキュリティ注釈を付けても、Bean メソッドは保護されず、HTTP アップグレードのみが保護されます。エンドポイントが意図したとおりにセキュアであることを常に検証する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use HTTP Security policy to secure an HTTP upgrade"
msgstr "HTTPセキュリティポリシーを使用してHTTPアップグレードを保護します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inspect and/or reject HTTP upgrade"
msgstr "HTTPアップグレードの検査と拒否"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"To inspect an HTTP upgrade, you must provide a CDI bean implementing the `io.quarkus.websockets.next.HttpUpgradeCheck` interface.\n"
"Quarkus calls the `HttpUpgradeCheck#perform` method on every HTTP request that should be upgraded to a WebSocket connection.\n"
"Inside this method, you can perform any business logic and/or reject the HTTP upgrade."
msgstr "HTTP アップグレードを検査するには、 `io.quarkus.websockets.next.HttpUpgradeCheck` インターフェイスを実装する CDI Bean を提供する必要があります。Quarkus は、WebSocket 接続にアップグレードする必要がある HTTP 要求ごとに `HttpUpgradeCheck#perform` メソッドを呼び出します。このメソッドの内部で、任意のビジネスロジックを実行したり、HTTPアップグレードを拒否したりできます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example HttpUpgradeCheck"
msgstr "HttpUpgradeCheck の例"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The CDI beans implementing `HttpUpgradeCheck` interface can be either `@ApplicationScoped`, `@Singleton` or `@Dependent` beans, but never the `@RequestScoped` beans."
msgstr "`HttpUpgradeCheck` インタフェースを実装するCDIビーンズは、 `@ApplicationScoped` , `@Singleton` , `@Dependent` ビーンズのいずれでもかまいませんが、 `@RequestScoped` ビーンズになることはありません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Reject the HTTP upgrade. Initial HTTP handshake ends with the 400 Bad Request response status code."
msgstr "HTTP アップグレードを拒否します。最初の HTTP ハンドシェイクは、400 Bad Request 応答ステータス・コードで終了します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "You can choose WebSocket endpoints to which the `HttpUpgradeCheck` is applied with the `HttpUpgradeCheck#appliesTo` method."
msgstr "`HttpUpgradeCheck#appliesTo` メソッドで、 `HttpUpgradeCheck` を適用する WebSocket エンドポイントを選択できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "TLS"
msgstr "TLS"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "As a direct consequence of the fact this extension reuses the _main_ HTTP server, all the relevant server configurations apply. See Refer to the xref:http-reference.adoc#ssl[HTTP guide] for more details."
msgstr "このエクステンションが _メインの_ HTTP サーバーを再利用していることの直接的な結果として、関連するすべてのサーバー設定が適用されます。詳細は xref:http-reference.adoc#ssl[HTTP ガイド] を参照してください。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client API"
msgstr "クライアントAPI"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client connectors"
msgstr "クライアントコネクタ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` is used to configure and create new connections for client endpoints.\n"
"A CDI bean that implements this interface is provided and can be injected in other beans.\n"
"The actual type argument is used to determine the client endpoint.\n"
"The type is validated during build - if it does not represent a client endpoint the build fails."
msgstr "`io.quarkus.websockets.next.WebSocketConnector<CLIENT>` は、クライアントエンドポイントの構成と新しい接続の作成に使用されます。このインタフェースを実装するCDI Beanが提供され、他のBeanに注入することができます。実際の型引数は、クライアントエンドポイントを決定するために使用されます。この型は、構築時に検証されます - もしクライアントエンドポイントを表していなければ、構築は失敗します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Let’s consider the following client endpoint:"
msgstr "次のようなクライアント・エンドポイントを考えてみましょう："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoint"
msgstr "クライアントエンドポイント"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connector for this client endpoint is used as follows:"
msgstr "このクライアント・エンドポイントのコネクタは、以下のように使用されます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Connector"
msgstr "コネクタ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inject the connector for `ClientEndpoint`."
msgstr "`ClientEndpoint` 用のコネクタを挿入します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "If the base `URI` is not supplied we attempt to obtain the value from the config. The key consists of the client id and the `.base-uri` suffix."
msgstr "ベースとなる `URI` が提供されない場合、設定から値を取得しようとします。キーはクライアント ID と `.base-uri` のサフィックスで構成されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the path param value. Throws `IllegalArgumentException` if the client endpoint path does not contain a parameter with the given name."
msgstr "パスパラメータ値を設定します。クライアントのエンドポイントパスに、指定した名前のパラメータが含まれていない場合は `IllegalArgumentException` をスローします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use the connection to send messages, if needed."
msgstr "必要であれば、接続を使用してメッセージを送信します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "If an application attempts to inject a connector for a missing endpoint, an error is thrown."
msgstr "アプリケーションが見つからないエンドポイントのコネクタを注入しようとすると、エラーがスローされます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Basic connector"
msgstr "基本コネクタ"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In the case where the application developer does not need the combination of the client endpoint and the connector, a _basic connector_ can be used.\n"
"The basic connector is a simple way to create a connection and consume/send messages without defining a client endpoint."
msgstr "アプリケーション開発者がクライアント・エンドポイントとコネクタの組み合わせを必要としない場合、 _基本コネクタを_ 使用できます。基本コネクタは、クライアント・エンドポイントを定義せずに接続を作成し、メッセージを消費/送信する簡単な方法です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inject the connector."
msgstr "コネクタを挿入します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The base URI must be always set."
msgstr "ベースURIは常に設定されていなければなりません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The additional path that should be appended to the base URI."
msgstr "ベース URI に追加されるべき追加パス。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the execution model for callback handlers. By default, the callback may block the current thread. However in this case, the callback is executed on the event loop and may not block the current thread."
msgstr "コールバックハンドラの実行モデルを設定します。デフォルトでは、コールバックは現在のスレッドをブロックする可能性があります。しかし、この場合、コールバックはイベントループ上で実行され、現在のスレッドをブロックすることはありません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The lambda will be called for every text message sent from the server."
msgstr "このラムダは、サーバーからテキストメッセージが送信されるたびに呼び出されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The basic connector is closer to a low-level API and is reserved for advanced users.\n"
"However, unlike others low-level WebSocket clients, it is still a CDI bean and can be injected in other beans.\n"
"It also provides a way to configure the execution model of the callbacks, ensuring optimal integration with the rest of Quarkus."
msgstr "基本コネクタは低レベルAPIに近く、上級者向けです。しかし、他の低レベルWebSocketクライアントとは異なり、CDIビーンであり、他のビーンに注入することができます。また、コールバックの実行モデルを設定する方法を提供し、Quarkusの他の部分との最適な統合を保証します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket client connection"
msgstr "WebSocketクライアント接続"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketClientConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocketClient` endpoint and used to interact with the connected server."
msgstr "`io.quarkus.websockets.next.WebSocketClientConnection` オブジェクトは、WebSocket 接続を表します。Quarkus では、このインタフェースを実装した `@SessionScoped` CDI Bean を提供しており、 `WebSocketClient` エンドポイントに注入して、接続されているサーバーとの対話に使用できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketClientConnection` object:"
msgstr "`@OnOpen` 、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnClose` でアノテーションされたメソッドは、注入された `WebSocketClientConnection` オブジェクトにアクセスできます："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methods, the `WebSocketClientConnection` object is not available. However, it is possible to <<list-open-client-connections,list all open client connections>>."
msgstr "これらのメソッド以外では、 `WebSocketClientConnection` オブジェクトは利用できないことに注意してください。しかし xref:list-open-client-connections[、開いているクライアント接続をすべてリストアップ] することは可能です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, etc."
msgstr "接続は、クライアントへのメッセージ送信、パス・パラメーターへのアクセスなどに使用できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketClientConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketClientConnection` はメッセージ送信にブロッキングとノンブロッキングの両方のメソッドを提供します："

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "List open client connections"
msgstr "オープンなクライアント接続のリスト"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenClientConnections` that declares convenient methods to access the connections."
msgstr "また、開いている接続をすべて一覧表示することも可能です。Quarkusでは、接続にアクセスするための便利なメソッドを宣言した `io.quarkus.websockets.next.OpenClientConnections` 。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OpenClientConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenClientConnections#listAll()` は、指定された時刻に開いているすべての接続の不変スナップショットを返します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenClientConnections#findByClientId(String)` makes it easy to find connections for a specific endpoint."
msgstr "他にも便利な方法があります。例えば、 `OpenClientConnections#findByClientId(String)` を使えば、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr "Quarkusでは、新しい接続が開かれると、 `@io.quarkus.websockets.next.Open` 修飾子が付いた `io.quarkus.websockets.next.WebSocketClientConnection` 型のCDIイベントが非同期に発生します。さらに、接続が閉じられると、 `@io.quarkus.websockets.next.Closed` の修飾子を持つ `WebSocketClientConnection` 型の CDI イベントが非同期に発生します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Configuring SSL/TLS"
msgstr "SSL/TLS の設定"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "To establish a TLS connection, you need to configure a _named_ configuration using the xref:./tls-registry-reference.adoc[TLS registry]:"
msgstr "TLS 接続を確立するには、xref:./tls-registry-reference.adoc[TLS レジストリー] を使用して、_名前付き_ の設定を設定する必要があります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When using the WebSocket client, using a _named_ configuration is required to avoid conflicts with other TLS configurations.\n"
"The client will not use the default TLS configuration."
msgstr "WebSocketクライアントを使用する場合、他のTLS設定との競合を避けるために、 _名前付き_ 設定を使用する必要があります。クライアントはデフォルトのTLS構成を使用しません。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you configure a _named_ TLS configuration, TLS is enabled by default."
msgstr "_名前付き_ TLSコンフィギュレーションを設定すると、デフォルトでTLSが有効になります。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Traffic logging"
msgstr "トラフィックの記録"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus can log the messages sent and received for debugging purposes.\n"
"To enable traffic logging for the server, set the `quarkus.websockets-next.server.traffic-logging.enabled` configuration property to `true`.\n"
"To enable traffic logging for the client, set the `quarkus.websockets-next.client.traffic-logging.enabled` configuration property to `true`.\n"
"The payload of text messages is logged as well.\n"
"However, the number of logged characters is limited.\n"
"The default limit is 100, but you can change this limit with the `quarkus.websockets-next.server.traffic-logging.text-payload-limit` and `quarkus.websockets-next.client.traffic-logging.text-payload-limit` configuration property, respectively."
msgstr "Quarkus では、デバッグ目的で送受信されたメッセージをログに記録できます。サーバーのトラフィックロギングを有効にするには、 `quarkus.websockets-next.server.traffic-logging.enabled` 構成プロパティを `true` に設定します。 クライアントのトラフィックロギングを有効にするには、 `quarkus.websockets-next.client.traffic-logging.enabled` 構成プロパティを `true` に設定します。 テキストメッセージのペイロードもログに記録されます。ただし、記録される文字数には制限があります。既定の制限は 100 ですが、この制限はそれぞれ `quarkus.websockets-next.server.traffic-logging.text-payload-limit` および `quarkus.websockets-next.client.traffic-logging.text-payload-limit` 構成プロパティで変更できます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The messages are only logged if the `DEBUG` level is enabled for the logger `io.quarkus.websockets.next.traffic`."
msgstr "メッセージは、ロガー `io.quarkus.websockets.next.traffic` で `DEBUG` レベルが有効になっている場合にのみログに記録されます。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example server configuration"
msgstr "サーバー構成例"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enables traffic logging."
msgstr "トラフィックのロギングを有効にします。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the number of characters of a text message payload which will be logged."
msgstr "ログに記録されるテキスト・メッセージ・ペイロードの文字数を設定します。"

#: _versions/3.15/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enable `DEBUG` level is for the logger `io.quarkus.websockets.next.traffic`."
msgstr "有効 `DEBUG` レベルは、ロガー `io.quarkus.websockets.next.traffic` 用です。"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _versions/3.15/guides/websockets-next-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
