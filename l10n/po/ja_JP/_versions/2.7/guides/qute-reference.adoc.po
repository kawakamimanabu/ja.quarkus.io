msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Qute Reference Guide"
msgstr "Qute リファレンスガイド"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Qute is a templating engine designed specifically to meet the Quarkus needs.\n"
"The usage of reflection is minimized to reduce the size of native images.\n"
"The API combines both the imperative and the non-blocking reactive style of coding.\n"
"In the development mode, all files located in the `src/main/resources/templates` folder are watched for changes and modifications are immediately visible in your application.\n"
"Furthermore, Qute attempts to detect most of the template problems at build time and fail fast."
msgstr "Qute は、Quarkus のニーズを満たすために特別に設計されたテンプレートエンジンです。ネイティブイメージのサイズを小さくするために、リフレクションの使用は最小限に抑えられています。API は、命令型とノンブロッキングリアクティブ型の両方のスタイルのコーディングを組み合わせています。開発モードでは、 `src/main/resources/templates` フォルダーにあるすべてのファイルが変更があるかどうか監視され、変更はアプリケーションにすぐに表示されます。さらに、ビルド時にテンプレートの問題のほとんどの検出を試み、即座に失敗します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In this guide, you will find an <<hello_world_example,introductory example>>, the description of the <<core_features,core features>> and <<quarkus_integration,Quarkus integration>> details."
msgstr "このガイドでは、<<hello_world_example,入門者向けサンプル>>、<<core_features,コア機能>> の説明、<<quarkus_integration,Quarkus 統合>> の詳細について説明しています。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Qute is primarily designed as a Quarkus extension. It is possible to use it as a \"standalone\" library too. However, in such case some of the features are not available. In general, any feature mentioned under the <<quarkus_integration>> section is missing. You can find more information about the limitations and possibilities in the <<standalone>> section."
msgstr "Quteは、主にQuarkusのエクステンションとして設計されています。「スタンドアロン」ライブラリとして使用することも可能です。しかし、その場合、いくつかの機能は利用できません。一般的に、 <<quarkus_integration>> のセクションに記載されている機能は、すべて欠落しています。制限と可能性についての詳細は、 <<standalone>> のセクションを参照してください。"

#. type: Title ==
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "The Simplest Example"
msgstr "簡単な例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The easiest way to try Qute is to use the convenient `io.quarkus.qute.Qute` class and call one of its `fmt()` static methods that can be used to format simple messages:"
msgstr "Qute を試す最も簡単な方法は、便利な `io.quarkus.qute.Qute` クラスを使用し、簡単なメッセージをフォーマットするために使用できる `fmt()` 静的メソッドの 1 つを呼び出すことです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The empty expression `{}` is a placeholder that is replaced with an index-based array accessor, i.e. `{data[0]}`."
msgstr "空の式 `{}` はプレースホルダーであり、インデックスベースの配列アクセスサー (例えば `{data[0]}` ) に置き換えられます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can provide a data map instead."
msgstr "代わりにデータマップを提供することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A builder-like API is available for more complex formatting requirements."
msgstr "より複雑なフォーマットを必要とする場合には、ビルダーライクな API が利用可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Note that for a \"text/html\" template the special chars are replaced with html entities by default."
msgstr "\"text/html\" テンプレートでは、デフォルトで特殊な char が html エンティティーに置き換えられることに注意してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can use any <<basic-building-blocks,building block>> in the template. In this case, the <<if_section>> is used to render the appropriate part of the message based on the input data."
msgstr "テンプレートには、任意の <<basic-building-blocks,ビルディングブロック>> を使用することができます。この場合、<<if_section>> は、入力データに基づいてメッセージの適切なパーツをレンダリングするために使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In <<quarkus_integration,Quarkus>>, the engine used to format the messages is the same as the one injected by `@Inject Engine`. Therefore, you can make use of any Quarkus-specific integration feature such as <<template_extension_methods>>, <<injecting-beans-directly-in-templates>> or even <<type-safe-message-bundles>>."
msgstr "<<quarkus_integration,Quarkus>> では、メッセージのフォーマットに使用されるエンジンは `@Inject Engine` によって注入されるものと同じです。したがって、<<template_extension_methods>> 、 <<injecting-beans-directly-in-templates>>  、または <<type-safe-message-bundles>> のような Quarkus 固有の統合機能を利用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The format object returned by the `Qute.fmt(String)` method can be evaluated lazily and used e.g. as a log message:"
msgstr "`Qute.fmt(String)` メソッドが返すフォーマットオブジェクトは、遅延評価され、たとえば、ログメッセージとして使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Please read the javadoc of the `io.quarkus.qute.Qute` class for more details."
msgstr "詳細は `io.quarkus.qute.Qute` クラスの javadoc をお読みください。"

#. type: Title ==
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Hello World Example"
msgstr "ハローワールドの例"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"In this example, we would like to demonstrate the _basic workflow_ when working with Qute templates.\n"
"Let's start with a simple \"hello world\" example.\n"
"We will always need some *template contents*:"
msgstr "この例では、Quteのテンプレートを扱う際の基本的なワークフローをデモしたいと思います。まず、簡単なhello worldの例から始めましょう。 *テンプレートのコンテンツ* は必ず必要になります。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "hello.html"
msgstr "hello.html"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr "`{name}` は、テンプレートがレンダリングされたときに評価される値の式です。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Then, we will need to parse the contents into a *template definition* Java object.\n"
"A template definition is an instance of `io.quarkus.qute.Template`."
msgstr "そして、その内容を *テンプレート定義* Javaオブジェクトにパースする必要があります。テンプレート定義は、 `io.quarkus.qute.Template` のインスタンスです。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If using Qute \"standalone\" you'll need to create an instance of `io.quarkus.qute.Engine` first.\n"
"The `Engine` represents a central point for template management with dedicated configuration.\n"
"Let's use the convenient builder:"
msgstr "Quteを\"スタンドアロン\"で使用する場合は、まず `io.quarkus.qute.Engine` のインスタンスを作成する必要があります。 `Engine` は、専用の設定でテンプレートを管理するための一元的なポイントを表しています。便利なビルダーを使ってみましょう。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In Quarkus, there is a preconfigured `Engine` available for injection - see <<quarkus_integration>>."
msgstr "Quarkusでは、あらかじめ設定された `Engine` がインジェクション用に利用可能です - link:#quarkus_integration[quarkus_integration] を参照してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Once we have an `Engine` instance we could parse the template contents:"
msgstr "`Engine` のインスタンスがあれば、テンプレートの内容を解析することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In Quarkus, you can simply inject the template definition. The template is automatically parsed and cached - see <<quarkus_integration>>."
msgstr "Quarkusでは、テンプレートの定義を単純に注入することができます。テンプレートは自動的に解析され、キャッシュされます - link:#quarkus_integration[quarkus_integration] を参照してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Finally, create a *template instance*, set the data and render the output:"
msgstr "最後に *テンプレートインスタンス* を作成し、データをセットして出力をレンダリングします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`Template.data(String, Object)` is a convenient method that creates a template instance and sets the data in one step."
msgstr "`Template.data(String, Object)` は、ワンステップでテンプレートのインスタンスを作成してデータを設定する便利なメソッドです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`TemplateInstance.render()` triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished. However, there are also asynchronous ways to trigger the rendering and consume the results. For example there is the `TemplateInstance.renderAsync()` method that returns `CompletionStage<String>` or `TemplateInstance.createMulti()` that returns Mutiny's `Multi<String>`."
msgstr "`TemplateInstance.render()` は同期レンダリングをトリガーします。つまり、レンダリングが終了するまで現在のスレッドはブロックされます。しかし、レンダリングをトリガーして結果を消費する非同期のメソッドもあります。 例えば、 `CompletionStage<String>` を返す `TemplateInstance.renderAsync()` メソッドや、Mutiny の `Multi<String>` を返す `TemplateInstance.createMulti()` です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "So the workflow is simple:"
msgstr "なので、ワークフローはシンプルです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Create the template contents (`hello.html`),"
msgstr "テンプレートコンテンツを作成する ( `hello.html` )"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Parse the template definition (`io.quarkus.qute.Template`),"
msgstr "テンプレートの定義を解析する ( `io.quarkus.qute.Template` )"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Create a template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr "テンプレートインスタンスを作成する ( `io.quarkus.qute.TemplateInstance` )"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Render the output."
msgstr "出力をレンダリングする"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `Engine` is able to cache the template definitions so that it's not necessary to parse the contents again and again. In Quarkus, the caching is done automatically."
msgstr "`Engine` はテンプレート定義をキャッシュすることができるので、何度も内容をパースする必要がありません。Quarkus では、キャッシュは自動的に行われます。"

#. type: Title ==
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Core Features"
msgstr "コア機能"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Basic Building Blocks"
msgstr "基本的なビルディングブロック"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The dynamic parts of a template include comments, expressions, sections and unparsed character data."
msgstr "テンプレートの動的な部分には、コメント、式、セクション、パースされていない文字データなどがあります。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Comments"
msgstr "Comments"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A comment starts with the sequence `{!` and ends with the sequence `!}`, e.g. `{! This is a comment !}`.\n"
"Can be multiline and may contain expressions and sections: `{! {#if true} !}`.\n"
"The content of a comment is completely ignored when rendering the output."
msgstr "コメントは `{!` というシーケンスで始まり、 `!}` というシーケンスで終わり、例えば `{! This is a comment !}` のようになります。  複数行にすることができ、 `{! {#if true} !}` のように式やセクションを含むことができます。  コメントの内容は、出力をレンダリングする際に完全に無視されます。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Expressions"
msgstr "式"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"An <<expressions,expression>> outputs an evaluated value.\n"
"It consists of one or more parts.\n"
"A part may represent simple properties: `{foo}`, `{item.name}`, and virtual methods: `{item.get(name)}`, `{name ?: 'John'}`.\n"
"An expression may also start with a namespace: `{inject:colors}`."
msgstr "<<expressions,式>> は評価値を出力します。これは 1つ以上のパーツから構成されます。パーツは `{foo}`、 `{item.name}` のような単純なプロパティーや、 `{item.get(name)}` 、 `{name ?: 'John'}` のような仮想メソッドを表わすことができます。また、式は名前空間 `{inject:colors}` で始まることもあります。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Sections"
msgstr "セクション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A <<sections,section>> may contain static text, expressions and nested sections: `{#if foo.active}{foo.name}{/if}`.\n"
"The name in the closing tag is optional: `{#if active}ACTIVE!{/}`.\n"
"A section can be empty: `{#myTag image=true /}`.\n"
"A section may also declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. {/if}` and decide which block to render."
msgstr "<<sections,セクション>> は静的テキスト、式、ネストされたセクションを含むことができます( `{#if foo.active}{foo.name}{/if}` )。クロージングタグの名前はオプションです( `{#if active}ACTIVE!{/}` )。セクションは空にすることができます( `{#myTag image=true /}` )。セクションはネストしたセクションブロックを宣言することもでき ( `{#if item.valid} Valid. {#else} Invalid. {/if}` )、どのブロックをレンダリングするかを決定します。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Unparsed Character Data"
msgstr "パース対象外文字データ"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"It is used to mark the content that should be rendered but _not parsed_.\n"
"It starts with the sequence `{|`  and ends with the sequence `|}`: `{| <script>if(true){alert('Qute is cute!')};</script> |}`, and could be multi-line."
msgstr "レンダリングは行うが _パースは行わない_ という内容をマークするために使用されます。  これは `{|` というシーケンスで始まり、 `|}` というシーケンスで終わり( `{|<script>if(true){alert('Qute is cute!')};</script>|}` 、複数行になる可能性もあります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Previously, unparsed character data had to start with `{[` and end with `]}`. This syntax is still supported but we encourage users to switch to the new syntax to avoid some common collisions with constructs from other languages."
msgstr "以前は、パース対象外文字データは `{[` で始まり `]}` で終わる必要がありました。この構文はまだサポートされていますが、他の言語の構文とのよくある衝突を避けるために、新しい構文に切り替えることをお勧めします。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Identifiers and Tags"
msgstr "識別子とタグ"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Identifiers are used in expressions and section tags.\n"
"A valid identifier is a sequence of non-whitespace characters.\n"
"However, users are encouraged to only use valid Java identifiers in expressions."
msgstr "識別子は、式やセクションタグで使用されます。有効な識別子は、空白文字以外の文字列です。ただし、式の中では有効な Java 識別子のみを使用することが推奨されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can use bracket notation if you need to specify an identifier that contains a dot, e.g. `{map['my.key']}`."
msgstr "ドットを含む識別子を指定する必要がある場合は、大括弧表記を使用することができます。例：`{map['my.key']}`"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"When parsing a template document the parser identifies all _tags_.\n"
"A tag starts and ends with a curly bracket, e.g. `{foo}`.\n"
"The content of a tag must start with:"
msgstr "テンプレート文書を解析する際、パーサはすべての _タグ_ を識別します。タグは中括弧で始まり、中括弧で終わります。例: `{foo}` タグの内容は次から始まる必要があります:"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "a digit, or"
msgstr "数字、または"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "an alphabet character, or"
msgstr "アルファベット文字、または"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "underscore, or"
msgstr "アンダースコア、または"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "a built-in command: `#`, `!`, `@`, `/`."
msgstr "組み込みコマンド: `#` , `!` , `@` , `/` ."

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If it does not start with any of the above it is ignored by the parser."
msgstr "上記のいずれかで始まらない場合は、パーサによって無視されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Tag Examples"
msgstr "タグの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Parsed: an expression that starts with underscore."
msgstr "パース対象: アンダースコアで始まる式"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Parsed: a comment"
msgstr "パース対象: コメント"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Ignored: starts with whitespace."
msgstr "無視対象: 空白で開始"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Ignored: starts with `{`."
msgstr "無視対象: `{` で開始"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Ignored: starts with `\"`."
msgstr "無視対象: `\"` で開始"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It is also possible to use escape sequences `\\{` and `\\}` to insert delimiters in the text. In fact, an escape sequence is usually only needed for the start delimiter, ie. `\\\\{foo}` will be rendered as `{foo}` (no parsing/evaluation will happen)."
msgstr "エスケープシーケンス `\\{` や `\\}` を使ってテキストにデリミタを挿入することも可能です。 実際には、エスケープシーケンスは通常、開始デリミタのためにのみ必要とされます。すなわち、 `\\\\{foo}`は `{foo}` として描画されます（パース、評価は行われません）。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Removing Standalone Lines From the Template"
msgstr "テンプレートから独立した行を削除する"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"By default, the parser removes standalone lines from the template output.\n"
"A *standalone line* is a line that contains at least one section tag (e.g. `{#each}` and `{/each}`), parameter declaration (e.g. `{@org.acme.Foo foo}`) or comment but no expression and no non-whitespace character.\n"
"In other words, a line that contains no section tag or a parameter declaration is *not* a standalone line.\n"
"Likewise, a line that contains an _expression_ or a _non-whitespace character_ is *not* a standalone line."
msgstr "デフォルトでは、パーサはテンプレート出力からスタンドアロン行を削除します。スタンドアロン *行* とは、少なくとも1つのセクションタグ(例: `{#each}` や `{/each}` )、パラメーター宣言(例: `{@org.acme.Foo foo}` )、コメントを含むが、式を含まず、空白以外の文字を含まない行のことです。言い換えれば、セクションタグやパラメーター宣言を含まない行は、独立した行ではあり *ません* 。同様に、 _式_ や _空白以外の文字_ を含む行もスタンドアロン行ではあり *ません* 。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template Example"
msgstr "テンプレート例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This is a standalone line and will be removed."
msgstr "これはスタンドアロン行なので削除されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Not a standalone line - contains an expression and non-whitespace characters"
msgstr "スタンドアロン行ではない - 式と非空白文字を含む"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr "スタンドアロン行ではない - セクションタグ/パラメーター宣言を含まない"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This is a standalone line."
msgstr "これはスタンドアロン行です。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Default Output"
msgstr "デフォルト出力"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"In Quarkus, the default behavior can be disabled by setting the property `quarkus.qute.remove-standalone-lines` to `false`.\n"
"In this case, all whitespace characters from a standalone line will be printed to the output."
msgstr "Quarkusでは、プロパティー( `quarkus.qute.remove-standalone-lines` )を `false` に設定することで、デフォルトの動作を無効にすることができます。この場合、スタンドアロン行のすべての空白文字が出力されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr "`quarkus.qute.remove-standalone-lines=false` での出力"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"An expression is evaluated and outputs the value.\n"
"It has one or more parts, where each part represents either a property accessor (aka Field Access Expression) or a virtual method invocation (aka Method Invocation Expression)."
msgstr "式が評価され、値が出力されます。これには 1 つ以上のパーツがあり、各パーツはプロパティーアクセサー (別名 Field Access Expression) または仮想メソッド呼び出し (別名 Method Invocation Expression) のいずれかを表します。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"When accessing the properties you can either use the dot notation or bracket notation.\n"
"In the `object.property` (dot notation) syntax, the `property` must be a <<identifiers,valid identifier>>.\n"
"In the `object[property_name]` (bracket notation) syntax, the `property_name` has to be a non-null <<literals, literal>> value."
msgstr "プロパティーにアクセスする際には、ドット表記とブラケット表記のどちらかを使うことができます。 `object.property` (ドット表記) 構文では、 `property` は <<identifiers,有効な識別子>> でなければなりません。 `object[property_name]` (ブラケット表記) 構文では、 `property_name` は null ではない <<literals, リテラル>> 値でなければなりません。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"An expression can start with an optional namespace followed by a colon (`:`).\n"
"A valid namespace consist of alphanumeric characters and underscores.\n"
"Namespace expressions are resolved differently - see also <<expression_resolution>>."
msgstr "式は、名前空間の後にコロン (`:`) を付けて開始することができます。有効な名前空間は英数字とアンダースコアで構成されます。名前空間の式は別の方法で解決されます。<<expression_resolution>> も参照してください。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Property Accessor Examples"
msgstr "プロパティーアクセサーの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "no namespace, one part: `name`"
msgstr "名前空間がなし、1 つの部分: `name`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "no namespace, two parts: `item`, `name`"
msgstr "名前空間なし、2つの部分: `item` . `name`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr "`{item.name}` と同等ですが、括弧表記を使用しています。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "namespace `global`, one part: `colors`"
msgstr "namespace `global` , 1つの部分: `colors`"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A part of an expression can be a _virtual method_ in which case the name can be followed by a list of comma-separated parameters in parentheses.\n"
"A parameter of a virtual method can be either a nested expression or a <<literals, literal>> value.\n"
"We call these method _\"virtual\"_ because they does not have to be backed by a real Java method.\n"
"You can learn more about virtual methods in the <<virtual_methods,following section>>."
msgstr ""
"式の一部を _仮想メソッド_ に することもでき、その場合は名前の後に、カンマで区切られたパラメータのリストを括弧で囲むことができます。\n"
"仮想メソッドのパラメータは、ネストされた式か xref:literals[リテラル] 値です。\n"
"これらのメソッドを _\"仮想\" と_ 呼ぶのは、実際の Java メソッドによってバックされる必要がないからです。\n"
"仮想メソッドについては、 xref:virtual_methods[次のセクション] で詳しく説明します。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Virtual Method Example"
msgstr "仮想メソッドの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "no namespace, two parts - `item`, `getLabels(1)`, the second part is a virtual method with name `getLabels` and params `1`"
msgstr "名前空間なし、2つのパーツ - `item` , `getLabels(1)` 、2番目のパーツは、名前 `getLabels` と パラメーター `1` を持つ仮想メソッドです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "infix notation that can be used for virtual methods with single parameter, translated to `name.or('John')`; no namespace, two parts - `name`, `or('John')`"
msgstr "`name.or('John')` に翻訳される、単一のパラメーターを持つ仮想メソッドに使用できる 中置 (infix) 記法。名前空間なし、2 つのパーツ - `name` . `or('John')`"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Supported Literals"
msgstr "サポートされているリテラル"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Literal"
msgstr "リテラル"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Examples"
msgstr "サンプル"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "boolean"
msgstr "boolean"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`true`, `false`"
msgstr "`true`, `false`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "null"
msgstr "null"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`null`"
msgstr "`null`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "string"
msgstr "string"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`'value'`, `\"string\"`"
msgstr "`'value'`, `\"string\"`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "integer"
msgstr "integer"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`1`, `-5`"
msgstr "`1`, `-5`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "long"
msgstr "long"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`1l`, `-5L`"
msgstr "`1l`, `-5L`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "double"
msgstr "double"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`1D`, `-5d`"
msgstr "`1D`, `-5d`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "float"
msgstr "float"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`1f`, `-5F`"
msgstr "`1f`, `-5F`"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Resolution"
msgstr "解決"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The first part of the expression is always resolved against the <<current_context_object, current context object>>.\n"
"If no result is found for the first part it's resolved against the parent context object (if available).\n"
"For an expression that starts with a namespace the current context object is found using all the available ``NamespaceResolver``s.\n"
"For an expression that does not start with a namespace the current context object is *derived from the position* of the tag.\n"
"All other parts of an expression are resolved using all ``ValueResolver``s against the result of the previous resolution."
msgstr "式の最初の部分は、常に link:#current_context_object[カレントコンテキストオブジェクト] に対して解決されます。最初の部分の結果が見つからない場合は、(利用可能な場合) 親コンテキストオブジェクトに対して解決されます。名前空間で始まる式の場合、カレントコンテキストオブジェクトは、利用可能なすべての `NamespaceResolver` を使用して検出されます。名前空間で始まらない式の場合、現在のコンテキストオブジェクトはタグの *位置から派生し* ます。式の他のすべての部分は、前の解決結果に対してすべての `ValueResolver` を使用して解決されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"For example, expression `{name}` has no namespace and single part - `name`.\n"
"The \"name\" will be resolved using all available value resolvers against the current context object.\n"
"However, the expression `{global:colors}` has the namespace `global` and single part - `colors`.\n"
"First, all available ``NamespaceResolver``s will be used to find the current context object.\n"
"And afterwards value resolvers will be used to resolve \"colors\" against the context object found."
msgstr "例えば、式 `{name}` には名前空間がなく、単一のパーツ - `name` です。\"name\"は、カレントコンテキストオブジェクトに対して利用可能なすべての値リゾルバを使用して解決されます。しかし、式 `{global:colors}` には、名前空間 `global` と単一パーツ - `colors` があります。まず、現在のコンテキストオブジェクトを見つけるために、利用可能なすべての `NamespaceResolver` s が使用されます。その後、見つかったコンテキストオブジェクトに対して\"colors\"を解決するために値リゾルバが使用されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Data passed to the template instance are always accessible using the `data` namespace.\n"
"This could be useful to access data for which the key is overridden:"
msgstr "テンプレート・インスタンスに渡されたデータは、常に `data` 名前空間を使用してアクセスできます。これは、キーがオーバーライドされているデータにアクセスするのに便利かもしれません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item` is passed to the template instance as a data object."
msgstr "`item` はデータオブジェクトとしてテンプレートインスタンスに渡されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Iterate over the list of derived items."
msgstr "派生アイテムのリストを繰り返し処理します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item` is an alias for the iterated element."
msgstr "`item` は反復要素のエイリアスです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Use the `data` namespace to access the `item` data object."
msgstr "`data` 名前空間を使用して、 `item` データ・オブジェクトにアクセスします。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Current Context"
msgstr "カレントコンテキスト"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If an expression does not specify a namespace the _current context object_ is derived from the position of the tag.\n"
"By default, the current context object represents the data passed to the template instance.\n"
"However, sections may change the current context object.\n"
"A typical example is the <<let_section,`let`>> section that can be used to define named local variables:"
msgstr "式が名前空間を指定しない場合、_カレントコンテキストオブジェクト_ はタグの位置から派生します。デフォルトでは、現在のコンテキストオブジェクトは、テンプレートインスタンスに渡されたデータを表します。しかし、セクションは現在のコンテキストオブジェクトを変更することがあります。典型的な例は、<<let_section,`let`>> セクションで、名前付きローカル変数を定義するために使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The current context object inside the section is the map of resolved parameters."
msgstr "セクション内の現在のコンテキストオブジェクトは、解決されたパラメーターのマップです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The current context can be accessed via the implicit binding `this`."
msgstr "現在のコンテキストは、暗黙のバインディング `this` を通してアクセスできます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Built-in Resolvers"
msgstr "組込Resolver"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Name"
msgstr "名前"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Elvis Operator"
msgstr "エルビス演算子"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Outputs the default value if the previous part cannot be resolved or resolves to `null`."
msgstr "前の部分が解決できなかったり、 `null` に解決された場合のデフォルト値を出力します。"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{person.name ?: 'John'}`, `{person.name or 'John'}`, `{person.name.or('John')}`"
msgstr "`{person.name ?: 'John'}`, `{person.name or 'John'}`, `{person.name.or('John')}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "orEmpty"
msgstr "orEmpty"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Outputs an empty list if the previous part cannot be resolved or resolves to `null`."
msgstr "前のパーツが解決できなかったり、 `null` に解決された場合に空のリストを出力します。"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#for pet in pets.orEmpty}{pet.name}{/for}`"
msgstr "`{#for pet in pets.orEmpty}{pet.name}{/for}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Ternary Operator"
msgstr "Ternary Operator"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Shorthand for if-then-else statement. Unlike in <<if_section>> nested operators are not supported."
msgstr "if-then-else文の省略形。 link:#if_section[if_section]] とは異なり、入れ子になった演算子はサポートされていません。"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item.name` if `item.isActive` resolves to `true`."
msgstr "`{item.isActive ? item.name : 'Inactive item'}` は、 `item.isActive` が `true` に解決した場合に `item.name` の値を出力します。"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Logical AND Operator"
msgstr "論理 AND 演算子"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Outputs `true` if both parts are not `falsy` as described in the <<if_section>>. The parameter is only evaluated if needed."
msgstr "<<if_section>> で説明したように、両方のパーツが `falsy` でない場合に `true` を出力します。このパラメーターは必要な場合にのみ評価されます。"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{person.isActive && person.hasStyle}`"
msgstr "`{person.isActive && person.hasStyle}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Logical OR Operator"
msgstr "論理 OR 演算子"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Outputs `true` if any of the parts is not `falsy` as described in the <<if_section>>. The parameter is only evaluated if needed."
msgstr "link:#if_section[if_section]] で説明したように、いずれかのパーツが `falsy` でない場合に `true` を出力します。このパラメーターは必要な場合のみ評価されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid "`{person.isActive || person.hasStyle}`"
msgstr "`{person.isActive || person.hasStyle}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The condition in a ternary operator evaluates to `true` if the value is not considered `falsy` as described in the <<if_section>>."
msgstr "三項演算子の条件は、 link:#if_section[[if_section]] で説明したように、値が `falsy` とみなされない場合は `true` と評価されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In fact, the operators are implemented as \"virtual methods\" that consume one parameter and can be used with infix notation. For example `{person.name or 'John'}` is translated to `{person.name.or('John')}` and `{item.isActive ? item.name : 'Inactive item'}` is translated to `{item.isActive.ifTruthy(item.name).or('Inactive item')}`"
msgstr "実際には、演算子は1つのパラメーターを消費する「仮想メソッド」として実装されており、中置記法で使用することができます。例えば、 `{person.name or 'John'}` は `{person.name.or('John')}` に翻訳され、 `{item.isActive ? item.name : 'Inactive item'}` は `{item.isActive.ifTruthy(item.name).or('Inactive item')}` に翻訳されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Arrays"
msgstr "配列"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"You can iterate over elements of an array with the <<loop_section>>.\n"
"Moreover, it's also possible to get the length of the specified array and access the elements directly via an index value.\n"
"Additionaly, you can access the first/last `n` elements via the `take(n)/takeLast(n)` methods."
msgstr ""
"配列の要素を繰り返し処理するには、 <<loop_section>> を使用します。 \n"
"さらに、指定した配列の長さを取得したり、インデックス値を使用して要素に直接アクセスしたりすることも可能です。さ\n"
"らに、 `take(n)/takeLast(n)` メソッドを使用すると、最初/最後の `n` 要素にアクセスできます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Array Examples"
msgstr "配列の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Outputs the length of the array."
msgstr "配列の長さを出力します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Outputs the first element of the array."
msgstr "配列の最初の要素を出力します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Outputs the second element of the array using the bracket notation."
msgstr "括弧表記で配列の2つ目の要素を出力します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Outputs the third element of the array via the virtual method `get()`."
msgstr "配列の 3 番目の要素を仮想メソッド `get()` で出力します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Outputs the first two elements of the array."
msgstr "配列の最初の 2 要素を出力します。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Character Escapes"
msgstr "文字エスケープ"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are escaped by default if a template variant is set."
msgstr "HTML と XML テンプレートの場合、 `'` , `\"` , `<` , `>` , `&` の文字は、テンプレートバリアントが設定されている場合はデフォルトでエスケープされます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In Quarkus, a variant is set automatically for templates located in the `src/main/resources/templates`. By default, the `java.net.URLConnection#getFileNameMap()` is used to determine the content type of a template file. The additional map of suffixes to content types can be set via `quarkus.qute.content-types`."
msgstr "Quarkusでは、 `src/main/resources/templates` にあるテンプレートに対してバリアントが自動的に設定されます。デフォルトでは、テンプレートファイルのコンテンツタイプを決定するために `java.net.URLConnection#getFileNameMap()` が使用されます。コンテンツタイプへのサフィックスの追加マップは、 `quarkus.qute.content-types` を通じて設定できます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If you need to render the unescaped value:"
msgstr "エスケープされていない値をレンダリングする必要がある場合:"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Either use the `raw` or `safe` properties implemented as extension methods of the `java.lang.Object`,"
msgstr "`java.lang.Object` の拡張メソッドとして実装されている `raw` または `safe` プロパティーを使用します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Or wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr "`String` の値を `io.quarkus.qute.RawString` でラップします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`"
msgstr "`title` が `Expressions & Escapes` に解決した場合は、 `Expressions &amp; Escapes` としてレンダリングされます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`"
msgstr "`paragraph` が `<p>My text!</p>` に解決された場合は、 `<p>My text!</p>` としてレンダリングされます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "By default, a template with one of the following content types is escaped: `text/html`, `text/xml`, `application/xml` and `application/xhtml+xml`. However, it's possible to extend this list via the `quarkus.qute.escape-content-types` configuration property."
msgstr "デフォルトでは、 `text/html`、 `text/xml`、 `application/xml` および `application/xhtml+xml` コンテンツタイプのいずれかを持つテンプレートがエスケープされます。しかし、 `quarkus.qute.escape-content-types` 設定プロパティーで、このリストを拡張することができます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Virtual Methods"
msgstr "仮想メソッド"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A virtual method is a *part of an expression* that looks like a regular Java method invocation.\n"
"It's called \"virtual\" because it does not have to match the actual method of a Java class.\n"
"In fact, like normal properties a virtual method is also handled by a value resolver.\n"
"The only difference is that for virtual methods a value resolver consumes parameters that are also expressions."
msgstr "仮想メソッドとは、通常のJavaメソッド呼び出しのように見える *式のパーツ* です。Javaクラスの実際のメソッドと一致する必要がないため、「仮想」と呼ばれています。実際には、通常のプロパティーと同様に、仮想メソッドも値リゾルバによって処理されます。唯一の違いは、仮想メソッドの場合、値リゾルバが式でもあるパラメーターを消費することです。"

#: _versions/2.7/guides/qute-reference.adoc
msgid "`buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` . The virtual method could be evaluated by a value resolver generated for the following Java class:"
msgstr "`buildName(item.name,5)` は、名前 `buildName` と 2 つのパラメーター `item.name` と `5` を持つ仮想メソッドを表します。この仮想メソッドは、以下の Java クラスに対して生成された値リゾルバによって評価されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Virtual methods are usually evaluated by value resolvers generated for <<template_extension_methods,@TemplateExtension methods>>, <<template_data,@TemplateData>> or classes used in <<typesafe_expressions,parameter declarations>>. However, a custom value resolver that is not backed by any Java class/method can be registered as well."
msgstr "仮想メソッドは通常、 <<template_extension_methods,@TemplateExtension methods>> 、 <<template_data,@TemplateData>> 、または <<typesafe_expressions,parameter declarations>> で使用されるクラスのために生成された値リゾルバによって評価されます。しかし、Javaのクラス/メソッドに基づかないカスタムの値リゾルバも登録できます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A virtual method with single parameter can be called using the infix notation:"
msgstr "単一のパラメーターを持つ仮想メソッドは 中置記法を使用して呼び出すことができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Infix Notation Example"
msgstr "インフィックス表記例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr "`item.price or 5` は `item.price.or(5)` に翻訳されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr "仮想メソッドのパラメーターは、「入れ子」仮想メソッドの呼び出しにすることができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Nested Virtual Method Example"
msgstr "入れ子になった仮想メソッドの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`."
msgstr "`item.calculateDiscount(10)` が最初に評価され、その後 `item.subtractPrice()` への引数として渡されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Evaluation of `CompletionStage` and `Uni` Objects"
msgstr "`CompletionStage` と `Uni` オブジェクトの評価"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.\n"
"If a part of an expression resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.\n"
"For example, if there is an expression `{foo.size}` and `foo` resolves to `CompletionStage<List<String>>` then `size` is resolved against the completed result, i.e. `List<String>`.\n"
"If a part of an expression resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above."
msgstr "`java.util.concurrent.CompletionStage` および `io.smallrye.mutiny.Uni` を実装したオブジェクトは、特別な方法で評価されます。式の一部が `CompletionStage` に解決された場合、このステージが完了すると解決が継続され、式の次の部分(もしあれば)が完了したステージの結果に対して評価されます。たとえば、式 `{foo.size}` があり、 `foo` が `CompletionStage<List<String>>` に解決された場合、 `size` は完了した結果、すなわち `List<String>` に対して解決されます。式の一部が `Uni` に解決される場合、 `CompletionStage` が `Uni#subscribeAsCompletionStage()` を使用して `Uni` から最初に作成され、その後上記のように評価されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Missing Properties"
msgstr "不明なプロパティ"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"It can happen that an expression may not be evaluated at runtime.\n"
"For example, if there is an expression `{person.age}` and there is no property `age` declared on the `Person` class.\n"
"The behavior differs based on whether the <<strict_rendering>> is enabled or not."
msgstr "式が実行時に評価されない場合があります。たとえば、 `{person.age}` という式があり、 `Person` クラスに `age` というプロパティーが宣言されていない場合です。<<strict_rendering>> が有効かどうかによって、動作が異なってきます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If enabled then a missing property will always result in a `TemplateException` and the rendering is aborted.\n"
"You can use _default values_ and _safe expressions_ in order to suppress the error."
msgstr "これを有効にすると、プロパティーが見つからない場合、常に `TemplateException` が発生し、レンダリングが中断されます。このエラーを抑制するために、_default values_ や _safe expressions_ を使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If disabled then the special constant `NOT_FOUND` is written to the output by default."
msgstr "無効な場合、デフォルトで特別な定数 `NOT_FOUND` が出力に書き込まれます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In Quarkus, it's possible to change the default strategy via the `quarkus.qute.property-not-found-strategy` as described in the <<configuration-reference>>."
msgstr "Quarkus では、<<設定リファレンス>> で説明しているように、 `quarkus.qute.property-not-found-strategy` を使用して、デフォルトのストラテジーを変更することが可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Similar errors are detected at build time if <<typesafe_expressions>> and <<typesafe_templates>> are used."
msgstr "<<typesafe_expressions>> や <<typesafe_templates>> を使用すると、ビルド時に同様のエラーが検出されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A section:"
msgstr "セクションは:"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "has a start tag"
msgstr "開始タグがあります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "starts with `#`, followed by the name of the section such as `{#if}` and `{#each}`,"
msgstr "`#` で始まり、 `{#if}` や `{#each}` などのセクションの名前が続きます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "may be empty"
msgstr "空の場合があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "tag ends with `/`, ie. `{#emptySection /}`"
msgstr "タグは `/` で終わります。例: `{#emptySection /}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "may contain other expression, sections, etc."
msgstr "他の表現、セクションなどを含む場合があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "the end tag starts with `/` and contains the name of the section (optional): `{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`,"
msgstr "終了タグは `/` で始まり、セクションの名前(オプション)を含みます: `{#if foo}Foo!{/if}` または `{#if foo}Foo!{/}` ."

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The start tag can also define parameters.\n"
"The parameters have optional names.\n"
"A section may contain several content *blocks*.\n"
"The \"main\" block is always present.\n"
"Additional/nested blocks also start with `#` and can have parameters too - `{#else if item.isActive}`.\n"
"A section helper that defines the logic of a section can \"execute\" any of the blocks and evaluate the parameters."
msgstr "startタグはパラメーターを定義することもできます。パラメーターにはオプションの名前を付けます。1つのセクションには、いくつかのコンテンツ *ブロック* を含めることができます。\"main\" ブロックは常に存在します。追加/入れ子になったブロックも `#` で始まり、パラメーターを持つことができます - `{#else if item.isActive}` 。セクションのロジックを定義するセクションヘルパーは、任意のブロックを「実行」し、パラメーターを評価することができます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Loop Section"
msgstr "ループセクション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The loop section makes it possible to iterate over an instance of `Iterable`, `Iterator`, array, `Map` (element is a `Map.Entry`), `Stream`, `Integer` and `int` (primitive value).\n"
"It has two flavors.\n"
"The first one is using the `each` name and `it` is an implicit alias for the iteration element."
msgstr ""
"ループセクションでは、 `Iterable` 、 `Iterator` 、array、 `Map` （要素は `Map.Entry` ）、 `Stream` 、 `Integer` 、 `int` （プリミティブ値）のインスタンスを繰り返し処理することができます。\n"
"これには2種類あります。\n"
"1つ目は `each` の名前を使用し、 `it` は反復要素の暗黙のエイリアスです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`name` is resolved against the current iteration element."
msgstr "`name` は現在の反復要素に対して解決されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The other form is using the `for` name and can specify the alias used to reference the iteration element:"
msgstr "もう一つの形態は、 `for` 名を使用し、反復要素の参照に使用するエイリアスを指定することができます:"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item` is the alias used for the iteration element."
msgstr "`item` は、反復処理要素に使用されるエイリアスです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's also possible to access the iteration metadata inside the loop via the following keys:"
msgstr "また、ループ内の反復処理メタデータには、以下のキーでアクセスすることが可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`count` - 1-based index"
msgstr "`count` - 1 を基準としたインデックス"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`index` - zero-based index"
msgstr "`index` - ゼロ基準のインデックス"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`hasNext` - `true` if the iteration has more elements"
msgstr "`hasNext` - イテレーションにさらに要素がある場合は `true` とります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`isLast` - `true` if `hasNext == false`"
msgstr "`isLast` - `true` if `hasNext == false`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`isFirst` - `true` if `count == 1`"
msgstr "`isFirst` - `true` if `count == 1`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`odd` - `true` if the zero-based index is odd"
msgstr "`odd` - ゼロ基準のインデックスが奇数であれば `true` となります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`even` - `true` if the zero-based index is even"
msgstr "`even` - ゼロ基準のインデックスが偶数であれば `true` となります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`indexParity` - outputs `odd` or `even` based on the zero-based index value"
msgstr "`indexParity` - ゼロ基準のインデックス値に基づいて、 `odd` または `even` を出力します。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"However, the keys cannot be used directly.\n"
"Instead, a prefix is used to avoid possible collisions with variables from the outer scope.\n"
"By default, the alias of an iterated element suffixed with an underscore is used as a prefix.\n"
"For example, the `hasNext` key must be prefixed with `it_` inside an `{#each}` section: `{it_hasNext}`."
msgstr "しかし、キーを直接使うことはできません。その代わり、外部スコープの変数と競合する可能性を避けるために、接頭辞が使用されます。デフォルトでは、反復処理された要素のエイリアスの後にアンダースコアを付けたものが接頭辞として使用されます。たとえば、 `{#each}` セクション (`{it_hasNext}`) の中では、 `hasNext` キーは `it_` を接頭辞として使用する必要があります。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`each` Iteration Metadata Example"
msgstr "`each` イテレーションのメタデータの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`it_count` represents one-based index."
msgstr "`it_count` は 1 を基準としたインデックスを表します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`<br>` is only rendered if the iteration has more elements."
msgstr "`<br>` は、反復処理がより多くの要素を持っている場合にのみレンダリングされます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "And must be used in a form of `{item_hasNext}` inside a `{#for}` section with the `item` element alias."
msgstr "また、 `{#for}` セクションの中で `{item_hasNext}` の形式で、 `item` 要素のエイリアスと使用する必要があります。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`for` Iteration Metadata Example"
msgstr "`for` イテレーションのメタデータの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item_count` represents one-based index."
msgstr "`item_count` は 1 を基準としたインデックスを表します。"

#. type: delimited block =
#: _versions/2.7/guides/qute-reference.adoc
msgid "The iteration metadata prefix is configurable either via `EngineBuilder.iterationMetadataPrefix()` for standalone Qute or via the `quarkus.qute.iteration-metadata-prefix` configuration property in a Quarkus application. Three special constants can be used:"
msgstr "反復処理メタデータの接頭辞は、スタンドアロンの Qute では `EngineBuilder.iterationMetadataPrefix()` によって、Quarkus アプリケーションでは `quarkus.qute.iteration-metadata-prefix` 設定プロパティーによって設定することができます。以下の 3 つの特別な定数を使用することができます。"

#. type: delimited block =
#: _versions/2.7/guides/qute-reference.adoc
msgid "`<alias_>` - the alias of an iterated element suffixed with an underscore is used (default)"
msgstr "`<alias_>` - アンダースコアを接尾辞とする反復子要素のエイリアスを使用します (デフォルト)"

#. type: delimited block =
#: _versions/2.7/guides/qute-reference.adoc
msgid "`<alias?>` - the alias of an iterated element suffixed with a question mark is used"
msgstr "`<alias?>` - クエスチョンマークを接尾辞とする反復処理された要素のエイリアスを使用します。"

#. type: delimited block =
#: _versions/2.7/guides/qute-reference.adoc
msgid "`<none>` - no prefix is used"
msgstr "`<none>` - 接頭辞は使用しません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `for` statement also works with integers, starting from 1. In the example below, considering that `total = 3`:"
msgstr "`for` 文は、1 から始まる整数でも動作します。 以下の例では、 `total = 3` ."

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "And the output will be:"
msgstr "出力は、以下のようになります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A loop section may also define the `{#else}` block that is executed when there are no items to iterate:"
msgstr "ループセクションは、反復する項目がないときに実行される `{#else}` ブロックも定義することができます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "If Section"
msgstr "If セクション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The `if` section represents a basic control flow section.\n"
"The simplest possible version accepts a single parameter and renders the content if the condition is evaluated to `true`.\n"
"A condition without an operator evaluates to `true` if the value is not considered `falsy`, i.e. if the value is not `null`, `false`, an empty collection, an empty map, an empty array, an empty string/char sequence or a number equal to zero."
msgstr "`if` セクションは、基本的な制御フローセクションを表しています。最も単純なバージョンでは、単一のパラメーターを受け取り、条件が `true` と評価された場合にコンテンツをレンダリングします。演算子なしの条件は値が `falsy` (つまり、 `null` 、 `false` 、空のコレクション、空のマップ、空の配列、空の文字列/文字列シーケンス、またはゼロに等しい数) ではない場合、 `true` と評価されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can also use the following operators in a condition:"
msgstr "条件では、以下の演算子を使うこともできます:"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Operator"
msgstr "オペレーター"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Aliases"
msgstr "エイリアス"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Precedence (higher wins)"
msgstr "優先順位 (大優先)"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "logical complement"
msgstr "logical complement"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`!`"
msgstr "`!`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "4"
msgstr "4"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "greater than"
msgstr "greater than"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`gt`, `>`"
msgstr "`gt`, `>`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "3"
msgstr "3"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "greater than or equal to"
msgstr "greater than or equal to"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`ge`, `>=`"
msgstr "`ge`, `>=`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "less than"
msgstr "less than"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`lt`, `<`"
msgstr "`lt`, `<`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "less than or equal to"
msgstr "less than or equal to"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`le`, `\\<=`"
msgstr "`le`, `\\<=`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "equals"
msgstr "equals"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`eq`, `==`, `is`"
msgstr "`eq`, `==`, `is`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "2"
msgstr "2"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "not equals"
msgstr "not equals"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`ne`, `!=`"
msgstr "`ne`, `!=`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "logical AND (short-circuiting)"
msgstr "logical AND (short-circuiting)"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`&&`, `and`"
msgstr "`&&`, `and`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "1"
msgstr "1"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "logical OR (short-circuiting)"
msgstr "logical OR (short-circuiting)"

#: _versions/2.7/guides/qute-reference.adoc
msgid "`||`, `or`"
msgstr "`||`, `or`"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "A simple operator example"
msgstr "簡単な演算子の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Multiple conditions are also supported."
msgstr "複数の条件にも対応しています。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Multiple conditions example"
msgstr "複数条件の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Precedence rules can be overridden by parentheses."
msgstr "優先順位の規則は、カッコで上書きすることができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Parentheses example"
msgstr "括弧の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can also add any number of `else` blocks:"
msgstr "また、 `else` ブロックを何個でも追加することができます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "When Section"
msgstr "When セクション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"This section is similar to Java's `switch` or Kotlin's `when` constructs.\n"
"It matches a _tested value_ against all blocks sequentially until a condition is satisfied.\n"
"The first matching block is executed.\n"
"All other blocks are ignored (this behavior differs to the Java `switch` where a `break` statement is necessary)."
msgstr "このセクションは、Java の `switch` や Kotlin の `when` に似ています。条件が満たされるまで、 _テストされた値_ をすべてのブロックに対して順次マッチさせます。最初にマッチしたブロックが実行されます。他のすべてのブロックは無視されます(この動作は、 `break` 文が必要な Java `switch` とは異なります)。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Example using the `when`/`is` name aliases"
msgstr "`when` / `is` の名前のエイリアスを使用した例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If there is exactly one parameter it's tested for equality."
msgstr "パラメーターが1つだけの場合、それは等価かがテストされます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's possible to use <<when_operators,an operator>> to specify the matching logic. Unlike in the <<if_section>> nested operators are not supported."
msgstr "link:#when_operators[演算子] を使ってマッチングロジックを指定することができます。 <<if_section>> とは異なり、入れ子になった演算子はサポートされていません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`else` is block is executed if no other block matches the value."
msgstr "`else` は、他のブロックが値に一致しない場合に実行されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Example using the `switch`/`case` name aliases"
msgstr "`switch` / `case` の名前エイリアスを使用した例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`case` is an alias for `is`."
msgstr "`case` は `is` の別名です。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A tested value that resolves to an enum is handled specifically.\n"
"The parameters of an `is`/`case` block are not evaluated as expressions but compared with the result of `toString()` invocation upon the tested value."
msgstr "enum に解決されるテスト値は特別な扱いを受けます。 `is` / `case` ブロックのパラメーターは式として評価されるのではなく、テストされた値に対して `toString()` を呼び出した結果と比較されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This block is executed if `machine.status.toString().equals(\"ON\")`."
msgstr "このブロックは `machine.status.toString().equals(\"ON\")` の場合に実行されます"

#: _versions/2.7/guides/qute-reference.adoc
msgid "This block is executed if  `machine.status.toString().equals(\"OFF\")` or `machine.status.toString().equals(\"BROKEN\")`."
msgstr "このブロックは、 `machine.status.toString().equals(\"OFF\")` または `machine.status.toString().equals(\"BROKEN\")` の場合に実行されます"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "An enum constant is validated if the tested value has a type information available and resolves to an enum type."
msgstr "列挙型定数は、テストされた値が利用可能な型情報を持ち、列挙型に解決された場合に検証されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The following operators are supported in `is`/`case` block conditions:"
msgstr "`is` / `case` ブロック条件では、以下の演算子がサポートされています。"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Example"
msgstr "例"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "not equal"
msgstr "not equal"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`!=`, `not`, `ne`"
msgstr "`!=`, `not`, `ne`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#is not 10}`,`{#case != 10}`"
msgstr "`{#is not 10}`,`{#case != 10}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#case le 10}`"
msgstr "`{#case le 10}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#is >= 10}`"
msgstr "`{#is >= 10}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#is < 10}`"
msgstr "`{#is < 10}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "in"
msgstr "in"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`in`"
msgstr "`in`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#is in 'foo' 'bar' 'baz'}`"
msgstr "`{#is in 'foo' 'bar' 'baz'}`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "not in"
msgstr "not in"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`ni`,`!in`"
msgstr "`ni`,`!in`"

#. type: Table
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`{#is !in 1 2 3}`"
msgstr "`{#is !in 1 2 3}`"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Let Section"
msgstr "Let セクション"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This section allows you to define named local variables:"
msgstr "このセクションでは、名前付きローカル変数を定義することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The local variable is initialized with an expression that can also represent a <<literals,literal>>."
msgstr "ローカル変数は、 link:#literals[リテラル]を表すこともできる式で初期化されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Keep in mind that the variable is not available outside the `let` section that defines it."
msgstr "この変数は、 `let` セクションを定義している外では利用できないことに留意してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The section tag is also registered under the `set` alias:"
msgstr "セクションタグも `set` のエイリアスで登録されています。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "With Section"
msgstr "With セクション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"This section can be used to set the current context object.\n"
"This could be useful to simplify the template structure:"
msgstr "このセクションは、現在のコンテキストオブジェクトを設定するために使用することができます。これはテンプレート構造を単純化するのに便利かもしれません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `name` will be resolved against the `item.parent`."
msgstr "`name` は `item.parent` に対して解決されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `description` will be also resolved against the `item.parent`."
msgstr "`description` も `item.parent` に対して解決されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Note that the `with` section should not be used in <<typesafe_templates>> or templates that define <<typesafe_expressions>>.\n"
"The reason is that it prevents Qute from validating the nested expressions.\n"
"If possible it should be replaced with the `{#let}` section which declares an explicit binding:"
msgstr "<<typesafe_templates>> や <<typesafe_expressions>> を定義するテンプレートでは、 `with` セクションを使用してはならないことに注意してください。理由は、Qute がネストされた式を検証できなくなるからです。可能であれば、明示的なバインディングを宣言する `{#let}` セクションに置き換える必要があります。"

#. type: delimited block =
#: _versions/2.7/guides/qute-reference.adoc
msgid "This section might also come in handy when we'd like to avoid multiple expensive invocations:"
msgstr "このセクションは、複数の高価な呼び出しを避けたいときにも便利かもしれません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`this` is the result of `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only invoked once even though the result may be used in multiple expressions."
msgstr "`this` は `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)` の結果です。結果が複数の式で使用されても、このメソッドは一度しか呼び出されません。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Include Section"
msgstr "Include セクション"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This section can be used to include another template and possibly override some parts of the template (template inheritance)."
msgstr "このセクションでは、別のテンプレートをインクルードしたり、テンプレートの一部をオーバーライドすることができます(テンプレートの継承)。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Simple Example"
msgstr "簡単な例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Include a template with id `foo`. The included template can reference data from the current context."
msgstr "id `foo` でテンプレートをインクルードします。インクルードされたテンプレートは、現在のコンテキストからデータを参照することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's also possible to define optional parameters that can be used in the included template."
msgstr "また、インクルードされたテンプレートで使用できるオプションのパラメーターを定義することも可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Template inheritance makes it possible to reuse template layouts."
msgstr "テンプレート継承により、テンプレートレイアウトの再利用が可能になります。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template \"base\""
msgstr "テンプレート「ベース」"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`insert` sections are used to specify parts that could be overridden by a template that includes the given template."
msgstr "`insert` セクションは、指定されたテンプレートをインクルードするテンプレートでオーバーライドできる部分を指定するために使われます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "An `insert` section may define the default content that is rendered if not overridden. If no name parameter is supplied then the main block of the relevant `{#include}` section is used."
msgstr "`insert` セクションは、上書きされないとレンダリングされるデフォルトコンテンツを定義することができます。nameパラメータが与えられない場合、関連する `{#include}` セクションのメインブロックが使用されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template \"detail\""
msgstr "テンプレート「詳細」"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`include` section is used to specify the extended template."
msgstr "`include` セクションは、拡張テンプレートを指定するために使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr "入れ子になったブロックは、オーバーライドする部分を指定するために使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The content of the main block is used for an `{#insert}` section with no name parameter specified."
msgstr "メインブロックのコンテンツは、name パラメーターが指定されていない `{#insert}` セクションに使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr "セクションブロックはオプションのエンドタグを定義することもできます - `{/title}` ."

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Eval Section"
msgstr "Eval セクション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"This section can be used to parse and evaluate a template dynamically.\n"
"The behavior is very similar to the <<include_helper>> but:"
msgstr "このセクションは、テンプレートを動的に解析および評価するために使用することができます。動作は <<include_helper>> に非常に似ています。ただし、"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The template content is passed directly, i.e. not obtained via an `io.quarkus.qute.TemplateLocator`,"
msgstr "テンプレートの内容は、 `io.quarkus.qute.TemplateLocator` を介して取得されるのではなく、直接渡されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's not possible to override parts of the evaluated template."
msgstr "評価済みテンプレートの一部をオーバーライドすることはできません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The result of `myData.template` will be used as the template. The template is executed with the <<current_context_object>>, i.e. can reference data from the template it's included into."
msgstr "`myData.template` の結果がテンプレートとして使用されます。テンプレートは <<current_context_object>> で実行されます。つまり、インクルードされているテンプレートのデータを参照することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's also possible to define optional parameters that can be used in the evaluated template."
msgstr "また、評価済みテンプレートで使用可能なオプションのパラメーターを定義することも可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The content of the section is always ignored."
msgstr "セクションの内容は常に無視されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The evaluated template is parsed and evaluated every time the section is executed. In other words, it's not possible to cache the parsed value to conserve resources and optimize the performance."
msgstr "評価済みテンプレートは、セクションが実行されるたびに解析され評価されます。つまり、リソースを節約してパフォーマンスを最適化するために、解析された値をキャッシュすることはできません。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "User-defined Tags"
msgstr "ユーザー定義タグ"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"User-defined tags can be used to include a tag template and optionally pass some parameters.\n"
"Let's suppose we have a tag template called `itemDetail.html`:"
msgstr "ユーザー定義タグは、タグテンプレートをインクルードし、オプションでいくつかのパラメーターを渡すために使用できます。 `itemDetail.html` というタグテンプレートがあるとします："

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`showImage` is a named parameter."
msgstr "`showImage` は名前付きパラメーターです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`it` is a special key that is replaced with the first unnamed parameter of the tag."
msgstr "`it` は、タグの最初の名前のないパラメーターに置き換えられる特別なキーです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "(optional) `nested-content` is a special key that will be replaced by the content of the tag."
msgstr "(オプション) `nested-content` は、タグの内容に置き換えられる特別なキーです。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"In Quarkus, all files from the `src/main/resources/templates/tags` are registered and monitored automatically.\n"
"For Qute standalone, you need to put the parsed template under the name `itemDetail.html` and register a relevant `UserTagSectionHelper` to the engine:"
msgstr "Quarkus では、 `src/main/resources/templates/tags` にあるすべてのファイルが、自動的に登録および監視されます。Qute スタンドアロンでは、解析されたテンプレートを `itemDetail.html` という名前で置き、関連する `UserTagSectionHelper` をエンジンに登録する必要があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Then, we can call the tag like this:"
msgstr "そして、以下のようなタグを呼び出すことができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item` is resolved to an iteration element and can be referenced using the `it` key in the tag template."
msgstr "`item` は反復要素に解決され、タグテンプレートで `it` キーを使用して参照することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Tag content injected using the `nested-content` key in the tag template."
msgstr "タグテンプレートで `nested-content` キーを使用して注入されたタグコンテンツ。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"By default, the tag template can reference data from the parent context.\n"
"For example, the tag above could use the following expression `{items.size}`.\n"
"However, sometimes it might be useful to disable this behavior and execute the tag as an _isolated_ template, i.e. without access to the context of the template that calls the tag.\n"
"In this case, just add `_isolated` or `_isolated=true` argument to the call site, e.g. `{#itemDetail item showImage=true _isolated /}`."
msgstr "デフォルトでは、タグテンプレートは親コンテキストからのデータを参照することができます。たとえば、上記のタグは `{items.size}` の式を使用することができます。しかし、時にはこの動作を無効にして、タグを _isolated_ テンプレートとして、つまり、タグを呼び出すテンプレートのコンテキストにアクセスせずに実行すると便利なことがあります。このような場合には、 `_isolated` または `_isolated=true` の引数を、たとえば `{#itemDetail item showImage=true _isolated /}` のように呼び出しサイトに追加してください。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Rendering Output"
msgstr "レンダリング出力"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"`TemplateInstance` provides several ways to trigger the rendering and consume the result.\n"
"The most straightforward approach is represented by `TemplateInstance.render()`.\n"
"This method triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished, and returns the output.\n"
"By contrast, `TemplateInstance.renderAsync()` returns a `CompletionStage<String>` which is completed when the rendering is finished."
msgstr "`TemplateInstance` は、レンダリングをトリガーして結果を消費するためのいくつかの方法を提供しています。最も簡単な方法は `TemplateInstance.render()` です。このメソッドは同期レンダリングをトリガーし、レンダリングが終了するまで現在のスレッドをブロックして出力を返します。対照的に、 `TemplateInstance.renderAsync()` は `CompletionStage<String>` を返し、レンダリングが終了すると完了します。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`TemplateInstance.renderAsync()` Example"
msgstr "`TemplateInstance.renderAsync()` Example"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Register a callback that is executed once the rendering is finished."
msgstr "レンダリング終了後に実行されるコールバックを登録します。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"There are also two methods that return https://smallrye.io/smallrye-mutiny/[Mutiny] types.\n"
"`TemplateInstance.createUni()` returns a new `Uni<String>` object.\n"
"If you call `createUni()` the template is not rendered right away.\n"
"Instead, every time `Uni.subscribe()` is called a new rendering of the template is triggered."
msgstr "また、 link:https://smallrye.io/smallrye-mutiny/[Mutiny] 型を返す2つのメソッドがあります。 `TemplateInstance.createUni()` は新しい `Uni<String>` オブジェクトを返します。 `createUni()` を呼び出しても、テンプレートはすぐにレンダリングされません。その代わり、 `Uni.subscribe()` が呼び出されるたびに、テンプレートの新しいレンダリングがトリガーされます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`TemplateInstance.createUni()` Example"
msgstr "`TemplateInstance.createUni()` Example"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"`TemplateInstance.createMulti()` returns a new `Multi<String>` object.\n"
"Each item represents a part/chunk of the rendered template.\n"
"Again, `createMulti()` does not trigger rendering.\n"
"Instead, every time a computation is triggered by a subscriber the template is rendered again."
msgstr "`TemplateInstance.createMulti()` は新しい `Multi<String>` オブジェクトを返します。各アイテムはレンダリングされたテンプレートの一部/チャンクを表します。繰り返しになりますが、 `createMulti()` はレンダリングをトリガしません。代わりに、サブスクライバによって実行がトリガされるたびに、テンプレートが再びレンダリングされます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`TemplateInstance.createMulti()` Example"
msgstr "`TemplateInstance.createMulti()` Example"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The template rendering is divided in two phases. During the first phase, which is asynchronous, all expressions in the template are resolved and a _result tree_ is built. In the second phase, which is synchronous, the result tree is _materialized_, i.e. one by one the result nodes emit chunks that are consumed/buffered by the specific consumer."
msgstr "テンプレートのレンダリングは2つのフェーズに分かれています。最初のフェーズ(非同期)では、テンプレート内のすべての式が解決され、 _結果ツリー_ が構築されます。同期的な第2フェーズでは、結果ツリーが _マテリアライズされ_ 、結果ノードが1つずつ、特定のコンシューマによって消費/バッファリングされるチャンクを出力します。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Engine Configuration"
msgstr "エンジン設定"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Value Resolvers"
msgstr "値リゾルバ"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Value resolvers are used when evaluating expressions.\n"
"A custom `io.quarkus.qute.ValueResolver` can be registered programmatically via `EngineBuilder.addValueResolver()`."
msgstr "式を評価する際に値リゾルバを使用します。カスタム `io.quarkus.qute.ValueResolver` は `EngineBuilder.addValueResolver()` からプログラムで登録することができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`ValueResolver` Builder Example"
msgstr "`ValueResolver` ビルダー例"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template Locator"
msgstr "テンプレートロケーター"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Manual registration is sometimes handy but it's also possible to register a template locator using `EngineBuilder.addLocator()`.\n"
"This locator is used whenever the `Engine.getTemplate()` method is called and the engine has no template for a given id stored in the cache.\n"
"The locator is responsible to use the correct character encoding when reading the contents of a template."
msgstr ""
"手動での登録が便利な場合もありますが、 `EngineBuilder.addLocator()` を使用してテンプレートロケータを登録することも可能です。\n"
"このロケーターは、 `Engine.getTemplate()` メソッドが呼び出され、エンジンがキャッシュに保存されている指定された ID のテンプレートがない場合に使用されます。\n"
"ロケーターは、テンプレートの内容を読み込むときに正しい文字エンコーディングを使用する責任があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In Quarkus, all templates from the `src/main/resources/templates` are located automatically and the encoding set via `quarkus.qute.default-charset` (UTF-8 by default) is used."
msgstr "Quarkusでは、 `src/main/resources/templates` のすべてのテンプレートが自動的に配置され、 `quarkus.qute.default-charset` を介して設定されたエンコーディング（デフォルトではUTF-8）が使用されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Content Filters"
msgstr "コンテンツフィルタ"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Content filters can be used to modify the template contents before parsing."
msgstr "コンテンツフィルタを使用して、解析前にテンプレートコンテンツを変更することができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Content Filter Example"
msgstr "コンテンツフィルター例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Escape all occurences of `${`."
msgstr "すべての `${` との一致をエスケープします。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Strict Rendering"
msgstr "strict レンダリング"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The strict rendering enables the developers to catch insidious errors caused by typos and invalid expressions.\n"
"If enabled then any expression that cannot be resolved, i.e. is evaluated to an instance of `io.quarkus.qute.Results.NotFound`, will always result in a `TemplateException` and the rendering is aborted.\n"
"A `NotFound` value is considered an error because it basically means that no value resolver was able to resolve the expression correctly."
msgstr "strict レンダリングにより、開発者は、タイプミスや無効な式によって引き起こされるわかりにくいエラーをキャッチすることができます。この機能を有効にすると、解決できない式、つまり `io.quarkus.qute.Results.NotFound` のインスタンスとして評価される式は、常に `TemplateException` となり、レンダリングは中断されます。 `NotFound` 値は基本的に、値リゾルバーが式を正しく解決できなかったことを意味するため、エラーとみなされます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`null` is a valid value though. It is considered `falsy` as described in the <<if_section>> and does not produce any output."
msgstr "しかし、 `null` は有効な値です。<<if_section>> にあるように `falsy` とみなされ、何も出力されません。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Strict rendering is enabled by default.\n"
"However, you can disable this functionality via `io.quarkus.qute.EngineBuilder.strictRendering(boolean)`."
msgstr "strict レンダリングはデフォルトで有効になっています。しかし、 `io.quarkus.qute.EngineBuilder.strictRendering(boolean)` によって、この機能を無効にすることができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In Quarkus, a dedicated config property can be used instead: `quarkus.qute.strict-rendering`."
msgstr "Quarkus では、専用の config プロパティーである `quarkus.qute.strict-rendering` を代わりに使用することができます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If you really need to use an expression which can potentially lead to a \"not found\" error, you can use _default values_ and _safe expressions_ in order to suppress the error.\n"
"A default value is used if the previous part of an expression cannot be resolved or resolves to `null`.\n"
"You can use the elvis operator to output the default value: `{foo.bar ?: 'baz'}`, which is effectively the same as the following virtual method: `{foo.bar.or('baz')}`.\n"
"A safe expression ends with the `??` suffix and results in `null` if the expression cannot be resolved.\n"
"It can be very useful e.g. in `{#if}` sections: `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}`.\n"
"In fact, `??` is just a shorthand notation for `.or(null)`, i.e. `{#if valueNotFound??}` becomes `{#if valueNotFound.or(null)}`."
msgstr "\"not found\" エラーを引き起こす可能性のある式をどうしても使いたい場合は、_デフォルト値_ および _安全な式_ を使ってエラーを抑制することができます。デフォルト値は、式の前のパーツが解決できないか、 `null` に解決される場合に使用されます。エルビス演算子を使ってデフォルト値 `{foo.bar ?: 'baz'}` を出力することができます。これは事実上、仮想メソッド `{foo.bar.or('baz')}` と同じになります。安全な式は `??` という接尾辞で終わり、式が解決できない場合は `null` という結果になります。これは、たとえば `{#if}` セクションの `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}` では非常に便利です。実際のところ、 `??` は `.or(null)` の簡単な表記法に過ぎず、たとえば `{#if valueNotFound??}` は `{#if valueNotFound.or(null)}` となります。"

#. type: Title ==
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Quarkus Integration"
msgstr "Quarkus 統合"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If you want to use Qute in your Quarkus application add the following dependency to your project:"
msgstr "QuarkusアプリケーションでQuteを使用する場合は、以下の依存関係をプロジェクトに追加してください。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"In Quarkus, a preconfigured engine instance is provided and available for injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus.qute.Engine` and qualifier `@Default` is registered automatically.\n"
"Moreover, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "Quarkusでは、事前に設定されたエンジンインスタンスが提供され、インジェクションに利用できます。 `@ApplicationScoped` スコープのBean、 `io.quarkus.qute.Engine` 型のBean、 `@Default` 修飾子が自動的に登録されます。さらに、 `src/main/resources/templates` ディレクトリーにあるすべてのテンプレートが検証され、簡単にインジェクションすることができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If there is no `Location` qualifier provided, the field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`."
msgstr "`Location` 修飾子が与えられていない場合は、フィールド名がテンプレートを特定するために使われます。この特定のケースでは、コンテナーはパス `src/main/resources/templates/items.html` でテンプレートを見つけようとします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `Location` qualifier instructs the container to inject a template from a path relative from `src/main/resources/templates`. In this case, the full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr "`Location` 修飾子は、 `src/main/resources/templates` からの相対パスからテンプレートを注入するようにコンテナーに指示します。この場合のフルパスは `src/main/resources/templates/detail/items2_v1.html` です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Inject the configured `Engine` instance."
msgstr "設定された `Engine` インスタンスを注入します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's also possible to contribute to the engine configuration via a CDI observer method."
msgstr "CDI observerメソッドを通じてエンジン設定に貢献することも可能です。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`EngineBuilder` Observer Example"
msgstr "`EngineBuilder` オブザーバーの例"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template Variants"
msgstr "テンプレートバリアント"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Sometimes it's useful to render a specific variant of the template based on the content negotiation.\n"
"This can be done by setting a special attribute via `TemplateInstance.setAttribute()`:"
msgstr "コンテンツネゴシエーションに基づいてテンプレートの特定のバリアントをレンダリングすることが有用な場合があります。これは `TemplateInstance.setAttribute()` を通じて特別な属性を設定することで行うことができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "When using `quarkus-resteasy-qute` the content negotiation is performed automatically. See <<resteasy_integration>>."
msgstr "`quarkus-resteasy-qute` を使用している場合、コンテンツネゴシエーションは自動的に行われます。 link:#resteasy_integration[resteasy_integration]] を参照してください。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Injecting Beans Directly In Templates"
msgstr "テンプレートに直接Beansを注入"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A CDI bean annotated with `@Named` can be referenced in any template through `cdi` and/or `inject` namespaces:"
msgstr "`@Named` でアノテーションされた CDI Bean は、 `cdi` や `inject` 名前空間を通して、任意のテンプレートで参照することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "First, a bean with name `personService` is found and then used as the base object."
msgstr "まず、 `personService` という名前の Bean が見つかり、それをベースオブジェクトとして使用します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "First, a bean with name `foo` is found and then used as the base object."
msgstr "まず、 `foo` という名前のBeanを見つけ、それをベースオブジェクトとして使用します。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"All expressions with `cdi` and `inject` namespaces are validated during build.\n"
"For the expression `cdi:personService.findPerson(10).name` the implementation class of the injected bean must either declare the `findPerson` method or a matching <<template_extension_methods,template extension method>> must exist.\n"
"For the expression `inject:foo.price` the implementation class of the injected bean must either have the `price` property (e.g. a `getPrice()` method) or a matching <<template_extension_methods,template extension method>> must exist."
msgstr "名前空間 `cdi` と `inject` を含むすべての式は、ビルド時に検証されます。 `cdi:personService.findPerson(10).name` という式では、注入される Bean の実装クラスは `findPerson` メソッドを宣言しているか、マッチする<<template_extension_methods,テンプレート拡張メソッド>> が存在しなければなりません。 `inject:foo.price` という式では、注入される Bean の実装クラスは `price` プロパティー (例: `getPrice()` メソッド) を持つか、マッチする <<template_extension_methods,テンプレート拡張メソッド>> が存在しなければなりません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A `ValueResolver` is also generated for all beans annotated with `@Named` so that it's possible to access its properties without reflection."
msgstr "`@Named` でアノテーションされたすべてのBeanに対して `ValueResolver` も生成され、そのプロパティーにリフレクションなしでアクセスできるようになります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If your application serves xref:http-reference.adoc[HTTP requests] you can also inject the current `io.vertx.core.http.HttpServerRequest` via the `inject` namespace, e.g. `{inject:vertxRequest.getParam('foo')}`."
msgstr "アプリケーションが xref:http-reference.adoc[HTTP リクエスト] を提供する場合、 `inject` 名前空間を介して現在の `io.vertx.core.http.HttpServerRequest` を注入することもできます (例: `{inject:vertxRequest.getParam('foo')}`)。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Type-safe Expressions"
msgstr "型安全な式"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Template expressions can be optionally type-safe.\n"
"Which means that an expression is validated against the existing Java types and template extension methods.\n"
"If an invalid/incorrect expression is found then the build fails."
msgstr "テンプレート式は、オプションでタイプセーフにすることができます。これは、式が既存のJavaの型とテンプレート拡張メソッドに対して検証されることを意味します。無効な/不正確な式が見つかった場合、ビルドは失敗します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "For example, if there is an expression `item.name` where `item` maps to `org.acme.Item` then `Item` must have a property `name` or a matching template extension method must exist."
msgstr "例えば、 `item.name` という式があり、 `item` が `org.acme.Item` にマップされている場合、 `Item` には `name` というプロパティーがあるか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"An optional _parameter declaration_ is used to bind a Java type to expressions whose first part matches the parameter name.\n"
"Parameter declarations are specified directly in a template."
msgstr "オプションの _パラメーター宣言_ は、最初のパートがパラメーター名と一致する式に Java 型をバインドするために使用されます。パラメーター宣言はテンプレートで直接指定します。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Parameter Declaration Example"
msgstr "パラメーター宣言の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "パラメーター宣言 - `foo` を `org.acme.Foo` にマップします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Not validated - not matching a param declaration."
msgstr "検証されていません - パラメーター宣言にマッチしません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This expression is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "この式は検証されています。 `org.acme.Foo` はプロパティー `message` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Likewise, the Java type of the object resolved from `foo.message` must have a property `toLowerCase` or a matching template extension method must exist."
msgstr "同様に、 `foo.message` から解決されたオブジェクトの Java 型は、プロパティー `toLowerCase` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A value resolver is automatically generated for all types used in parameter declarations so that it's possible to access its properties without reflection."
msgstr "パラメーター宣言で使用されるすべての型に対して値リゾルバが自動的に生成され、そのプロパティーにリフレクションなしでアクセスできるようになります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Method parameters of <<typesafe_templates,type-safe templates>> are automatically turned into parameter declarations."
msgstr "<<typesafe_templates,type-safe templates>> のメソッドパラメーターは、自動的にパラメーター宣言に変換されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Note that sections can override names that would otherwise match a parameter declaration:"
msgstr "セクションは、パラメーター宣言にマッチする名前をオーバーライドできることに注意してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Validated against `org.acme.Foo`."
msgstr "`org.acme.Foo` に対して検証されています。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Not validated - `foo` is overridden in the loop section."
msgstr "検証されていません - `foo` はループセクションでオーバーライドされています。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Type-safe Templates"
msgstr "タイプセーフテンプレート"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"You can also define type-safe templates in your Java code.\n"
"If using <<resteasy_integration,templates in JAX-RS resources>>, you can rely on the following convention:"
msgstr "また、Java コードの中で、タイプセーフのテンプレートを定義することもできます。<<resteasy_integration,JAX-RS リソース内でテンプレート>> を使う場合は、以下の規約に従うことができます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Organise your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if\n"
"your `ItemResource` class references two templates `hello` and `goodbye`, place them at `/src/main/resources/templates/ItemResource/hello.txt`\n"
"and `/src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr "テンプレートファイルを `/src/main/resources/templates` ディレクトリーに整理し、リソースクラスごとに 1 つのディレクトリーにグループ化します。つまり、 `ItemResource` クラスが `hello` と `goodbye` の 2 つのテンプレートを参照している場合は、 `/src/main/resources/templates/ItemResource/hello.txt` と `/src/main/resources/templates/ItemResource/goodbye.txt` に配置します。リソースクラスごとにテンプレートをグループ化することで、テンプレートへのナビゲートが容易になります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr "各リソースクラスで、リソースクラス内で `@CheckedTemplate static class Template {}` クラスを宣言します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr "リ ソ ース のテ ン プ レー ト フ ァ イ ルごとに `public static native TemplateInstance method();` を 1 つずつ宣言 し ます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Use those static methods to build your template instances."
msgstr "テンプレートインスタンスを構築するには、これらの静的メソッドを使用します。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "ItemResource.java"
msgstr "ItemResource.java"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr "`templates/ItemResource/item.html` に対して `TemplateInstance` を与えるメソッドを宣言し、その `Item item` パラメーターを宣言することで、テンプレートを検証することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `item` parameter is automatically turned into a <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr "`item` パラメーターは自動的に <<typesafe_expressions,parameter declaration>> に変換されるので、この名前を参照するすべての式が検証されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Make the `Item` object accessible in the template."
msgstr "テンプレート内で `Item` オブジェクトにアクセスできるようにします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "By default, the templates defined in a class annotated with `@CheckedTemplate` can only contain type-safe expressions, i.e. expressions that can be validated at build time. You can use `@CheckedTemplate(requireTypeSafeExpressions = false)` to relax this requirement."
msgstr "デフォルトでは、 `@CheckedTemplate` でアノテーションされたクラスで定義されたテンプレートは、タイプセーフな式、つまり、ビルド時に検証可能な式のみを含むことができます。この要件を緩和するために、 `@CheckedTemplate(requireTypeSafeExpressions = false)` を使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can also declare a top-level Java class annotated with `@CheckedTemplate`:"
msgstr "また、 `@CheckedTemplate` でアノテーションされたトップレベルの Java クラスを宣言することもできます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Top-level checked templates"
msgstr "トップレベルチェック済テンプレート"

#: _versions/2.7/guides/qute-reference.adoc
msgid "This declares a template with path `templates/hello.txt`. The `name` parameter is automatically turned into a  <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr "これは、パス `templates/hello.txt` を持つテンプレートを宣言します。 `name` パラメーターは自動的に link:#typesafe_expressions[パラメーター宣言] に変換されるので、この名前を参照するすべての式が検証されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Then declare one `public static native TemplateInstance method();` per template file.\n"
"Use those static methods to build your template instances:"
msgstr "そして、テンプレートファイルごとに `public static native TemplateInstance method();` を宣言します。これらの静的メソッドを使用してテンプレートインスタンスを構築します。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "HelloResource.java"
msgstr "HelloResource.java"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template Extension Methods"
msgstr "テンプレート拡張メソッド"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Extension methods can be used to extend the data classes with new functionality (to extend the set of accessible properties and methods) or to resolve expressions for a specific <<namespace_extension_methods,namespace>>.\n"
"For example, it is possible to add _computed properties_ and _virtual methods_."
msgstr "拡張メソッドは、データクラスを新しい機能で拡張するため(アクセス可能なプロパティーとメソッドのセットを拡張するため)、または特定の link:#namespace_extension_methods[名前空間] のための式を解決するために使用することができます。例えば、 _計算されたプロパティー_ や _仮想メソッド_ を追加することができます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A value resolver is automatically generated for a method annotated with `@TemplateExtension`.\n"
"If a class is annotated with `@TemplateExtension` then a value resolver is generated for every _non-private static method_ declared on the class.\n"
"Method-level annotations override the behavior defined on the class.\n"
"Methods that do not meet the following requirements are ignored."
msgstr "値リゾルバは、 `@TemplateExtension` でアノテーションされたメソッドに対して自動的に生成されます。クラスが `@TemplateExtension` でアノテーションされている場合、そのクラスで宣言されている _プライベートではないスタティック・メソッド_ ごとに値リゾルバが生成されます。メソッドレベルのアノテーションは、クラスで定義された動作をオーバーライドします。以下の要件を満たさないメソッドは無視されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A template extension method:"
msgstr "テンプレート拡張メソッド:"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "must not be `private`"
msgstr "`private` であってはなりません"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "must be static,"
msgstr "`static` でなければなりません"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "must not return `void`."
msgstr "`void` を返してはいけません"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If there is no namespace defined the class of the first parameter that is not annotated with `@TemplateAttribute` is used to match the base object. Otherwise the namespace is used to match an expression."
msgstr "名前空間が定義されていない限り、 `@TemplateAttribute` でアノテーションされた最初のパラメーターのクラスがベース・オブジェクトにマッチするように使用されます。そうでなければ、名前空間が式をマッチするのに使用されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The method name is used to match the property name by default.\n"
"However, it is possible to specify the matching name with `TemplateExtension#matchName()`.\n"
"A special constant - `TemplateExtension#ANY` - may be used to specify that the extension method matches any name.\n"
"It is also possible to match the name against a regular expression specified in `TemplateExtension#matchRegex()`.\n"
"In both cases, an additional string method parameter must be used to pass the property name.\n"
"If both `matchName()` and `matchRegex()` are set the regular expression is used for matching."
msgstr "メソッド名は、デフォルトではプロパティー名とのマッチングに使用されます。ただし、マッチする名前を `TemplateExtension#matchName()` で指定することは可能です。特別な定数 `TemplateExtension#ANY` を使用して、拡張メソッドが任意の名前にマッチすることを指定することができます。また、 `TemplateExtension#matchRegex()` で指定された正規表現に対して名前を一致させることも可能です。どちらの場合も、文字列メソッド・パラメーターを使用してプロパティー名を渡します。 `matchName()` と `matchRegex()` の両方が設定されている場合は、正規表現がマッチングに使用されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Extension Method Example"
msgstr "拡張メソッドの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This method matches an expression with base object of the type `Item.class` and the `discountedPrice` property name."
msgstr "このメソッドは、 `Item.class` 型のベース・オブジェクトと `discountedPrice` プロパティー名を持つ式にマッチします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This template extension method makes it possible to render the following template:"
msgstr "このテンプレート拡張メソッドを使うと、以下のテンプレートをレンダリングすることができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr "`item` は `org.acme.Item` のインスタンスに解決されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Method Parameters"
msgstr "メソッドパラメーター"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"An extension method may declare parameters.\n"
"If no namespace is specified then the first parameter that is not annotated with `@TemplateAttribute` is used to pass the base object, i.e. `org.acme.Item` in the first example.\n"
"If matching any name or using a regular expression then a string method parameter needs to be used to pass the property name.\n"
"Parameters annotated with `@TemplateAttribute` are obtained via `TemplateInstance#getAttribute()`.\n"
"All other parameters are resolved when rendering the template and passed to the extension method."
msgstr "拡張メソッドはパラメーターを宣言することができます。名前空間が指定されていない場合、 `@TemplateAttribute` でアノテーションされていない最初のパラメーターが基底オブジェクトを渡すために使用されます。例：最初の例における `org.acme.Item` 。任意の名前に一致する場合、または正規表現を使用する場合は、文字列メソッドパラメータを使用してプロパティ名を渡す必要があります。 `@ TemplateAttribute` でアノテーションされたパラメーターは、 `TemplateInstance#getAttribute()` を介して取得されます。 他のすべてのパラメーターは、テンプレートをレンダリングするときに解決され、拡張メソッドに渡されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Multiple Parameters Example"
msgstr "複数のパラメーターの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This method matches an expression with base object of the type `BigDecimal.class`, with the `scale` virtual method name and two virtual method parameters."
msgstr "このメソッドは、 `BigDecimal.class` 型の基底オブジェクトと、 `scale` の仮想メソッド名と 2 つの仮想メソッドパラメーターを持つ式にマッチします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr "`item.discountedPrice` は `BigDecimal` のインスタンスに解決されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Namespace Extension Methods"
msgstr "名前空間拡張メソッド"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If `TemplateExtension#namespace()` is specified then the extension method is used to resolve expressions with the given <<expressions,namespace>>.\n"
"Template extension methods that share the same namespace are grouped in one resolver ordered by `TemplateExtension#priority()`.\n"
"The first matching extension method is used to resolve an expression."
msgstr "`TemplateExtension#namespace()` が指定された場合、拡張メソッドが、指定された <<expressions,namespace>> を持つ式を解決するために使用されます。同じ名前空間を共有するテンプレート拡張メソッドは、 `TemplateExtension#priority()` で順に 1 つのリゾルバにグループ化されます。最初にマッチする拡張メソッドが式の解決に使用されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Namespace Extension Method Example"
msgstr "名前空間拡張メソッド例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "These extension methods can be used as follows."
msgstr "これらの拡張メソッドは、以下のように使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The output is `Hello world!`"
msgstr "出力は `Hello world!` です"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The output is `olleh`"
msgstr "出力は `olleh` です"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Built-in Template Extensions"
msgstr "組み込みテンプレートエクステンション"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Quarkus provides a set of built-in extension methods."
msgstr "Quarkusは、組み込みの拡張メソッドのセットを提供しています。"

#. type: Title =====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Maps"
msgstr "マップ"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr "`keys` または `keySet` : マップに含まれるキーのセットビューを返します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#for key in map.keySet}`"
msgstr "`{#for key in map.keySet}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr "`values` : マップに含まれる値のコレクションビューを返します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#for value in map.values}`"
msgstr "`{#for value in map.values}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr "`size` : マップ内のキーと値の対応付けの個数を返します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{map.size}`"
msgstr "`{map.size}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr "`isEmpty` : マップにキーと値のマッピングが含まれていない場合に true を返します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#if map.isEmpty}`"
msgstr "`{#if map.isEmpty}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr "`get(key)` : 指定したキーがマッピングされた値を返します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{map.get('foo')}`"
msgstr "`{map.get('foo')}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A map value can be also accessed directly: `{map.myKey}`. Use the bracket notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr "マップ値は、直接アクセスすることもできます : `{map.myKey}` 。正規の識別子ではないキーには大括弧表記を使用します: `{map['my key']}` 。"

#. type: Title =====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Collections"
msgstr "Collections"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr "`get(index)` : リストの指定した位置の要素を返す"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{list.get(0)}`"
msgstr "`{list.get(0)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`reversed`: Returns a reversed iterator over a list"
msgstr "`reversed`: リストを逆にしたイテレータを返す"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#for r in recordsList.reversed}`"
msgstr "`{#for r in recordsList.reversed}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`take`: Returns the first `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr "`take`: 与えられたリストから最初の `n` 要素を返します。 `n` が範囲外の場合は `IndexOutOfBoundsException` を投げます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#for r in recordsList.take(3)}`"
msgstr "`{#for r in recordsList.take(3)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`takeLast`: Returns the last `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr "`takeLast`: 与えられたリストから最後の `n` 要素を返します。 `n` が範囲外の場合は `IndexOutOfBoundsException` を投げます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#for r in recordsList.takeLast(3)}`"
msgstr "`{#for r in recordsList.takeLast(3)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A list element can be accessed directly: `{list.10}` or `{list[10]}`."
msgstr "list 要素に直接アクセスすることができます: `{list.10}` または `{list[10]}` ."

#. type: Title =====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Numbers"
msgstr "数値"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`mod`: Modulo operation"
msgstr "`mod` : モデューロ演算"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{#if counter.mod(5) == 0}`"
msgstr "`{#if counter.mod(5) == 0}`"

#. type: Title =====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Strings"
msgstr "Strings"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`fmt` or `format`: format the string instance via `java.lang.String.format()`"
msgstr "`fmt` または `format`: `java.lang.String.format()` によって文字列のインスタンスをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{myStr.fmt(\"arg1\",\"arg2\")}`"
msgstr "`{myStr.fmt(\"arg1\",\"arg2\")}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{myStr.format(locale,arg1)}`"
msgstr "`{myStr.format(locale,arg1)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`str:fmt` or `str:format`: format the supplied string value via `java.lang.String.format()`"
msgstr "`str:fmt` または `str:format`: 与えられた文字列値を `java.lang.String.format()` でフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{str:format(\"Hello %s!\",name)}`"
msgstr "`{str:format(\"Hello %s!\",name)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{str:fmt(locale,'%tA',now)}`"
msgstr "`{str:fmt(locale,'%tA',now)}`"

#: _versions/2.7/guides/qute-reference.adoc
msgid "Config"
msgstr "設定"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`config:<name>` or `config:[<name>]`: Returns the config value for the given property name"
msgstr "`config:<name>` 又は `config:[<name>]` : 指定したプロパティー名の設定値を返します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr "`{config:foo}` または `{config:['property.with.dot.in.name']}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`config:property(name)`: Returns the config value for the given property name; the name can be obtained dynamically by an expression"
msgstr "`config:property(name)` : 指定したプロパティー名の設定値を返します。名前は式で動的に取得することが可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:property('quarkus.foo')}`"
msgstr "`{config:property('quarkus.foo')}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:property(foo.getPropertyName())}`"
msgstr "`{config:property(foo.getPropertyName())}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`config:boolean(name)`: Returns the config value for the given property name as a boolean; the name can be obtained dynamically by an expression"
msgstr "`config:boolean(name)`: 指定したプロパティー名の設定値をbooleanとして返します。名前は式で動的に取得することが可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}`"
msgstr "`{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:boolean(foo.getPropertyName()) ?: 'property is false'}`"
msgstr "`{config:boolean(foo.getPropertyName()) ?: 'property is false'}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`config:integer(name)`: Returns the config value for the given property name as an integer; the name can be obtained dynamically by an expression"
msgstr "`config:integer(name)`: 指定したプロパティー名の設定値をintegerで返します。名前は式で動的に取得することが可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:integer('quarkus.foo')}`"
msgstr "`{config:integer('quarkus.foo')}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{config:integer(foo.getPropertyName())}`"
msgstr "`{config:integer(foo.getPropertyName())}`"

#. type: Title =====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Time"
msgstr "時間"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`format(pattern)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{dateTime.format('d MMM uuuu')}`"
msgstr "`{dateTime.format('d MMM uuuu')}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`format(pattern,locale)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern,locale)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{dateTime.format('d MMM uuuu',myLocale)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`format(pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern,locale,timeZone)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`time:format(dateTime,pattern)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{time:format(myDate,'d MMM uuuu')}`"
msgstr "`{time:format(myDate,'d MMM uuuu')}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`time:format(dateTime,pattern,locale)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern,locale)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{time:format(myDate,'d MMM uuuu', myLocale)}`"
msgstr "`{time:format(myDate,'d MMM uuuu', myLocale)}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`time:format(dateTime,pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern,locale,timeZone)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr "`{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}`"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "@TemplateData"
msgstr "@TemplateData"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"A value resolver is automatically generated for a type annotated with `@TemplateData`.\n"
"This allows Quarkus to avoid using reflection to access the data at runtime."
msgstr "値リゾルバは、 `@TemplateData` でアノテーションされた型に対して自動的に生成されます。これにより、Quarkusでは、実行時にデータにアクセスするためのリフレクションの使用を避けることができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Non-public members, constructors, static initializers, static, synthetic and void methods are always ignored."
msgstr "非publicのメンバー、コンストラクタ、静的イニシャライザ、静的メソッド、合成メソッド、ボイドメソッドは常に無視されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Any instance of `Item` can be used directly in the template:"
msgstr "`Item` の任意のインスタンスをテンプレート内で直接使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr "`items` は `org.acme.Item` インスタンスのリストに解決されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can be used to fine-tune the generated resolver.\n"
"Finally, it is also possible to specify the \"target\" of the annotation - this could be useful for third-party classes not controlled by the application:"
msgstr "さらに、 `@TemplateData.properties()` と `@TemplateData.ignore()` を使用して、生成されるリゾルバを微調整することができます。最後に、アノテーションの「ターゲット」を指定することも可能です。これは、アプリケーションによって管理されないサードパーティーのクラスに便利です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The generated value resolver knows how to invoke the `BigDecimal.setScale()` method."
msgstr "生成された値リゾルバは、 `BigDecimal.setScale()` メソッドを呼び出す方法を知っています。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Accessing Static Fields and Methods"
msgstr "静的なフィールドとメソッドへのアクセス"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If `@TemplateData#namespace()` is set to a non-empty value then a namespace resolver is automatically generated to access the public static fields and methods of the target class.\n"
"By default, the namespace is the FQCN of the target class where dots and dollar signs are replaced by underscores.\n"
"For example, the namespace for a class with name `org.acme.Foo` is `org_acme_Foo`.\n"
"The static field `Foo.AGE` can be accessed via `{org_acme_Foo:AGE}`.\n"
"The static method `Foo.computeValue(int number)` can be accessed via `{org_acme_Foo:computeValue(10)}`."
msgstr "もし `@TemplateData#namespace()` が空でない値に設定されている場合、ターゲットクラスのパブリック静的フィールドとメソッドにアクセスするための名前空間リゾルバーが自動的に生成されます。デフォルトでは、名前空間はターゲットクラスの FQCN で、ドットやドル記号はアンダースコアに置き換えられます。たとえば、名前 `org.acme.Foo` を持つクラスの名前空間は `org_acme_Foo` となります。静的フィールド `Foo.AGE` には、 `{org_acme_Foo:AGE}` からアクセスすることができます。静的メソッド `Foo.computeValue(int number)` には、 `{org_acme_Foo:computeValue(10)}` を介してアクセスすることができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A namespace can only consist of alphanumeric characters and underscores."
msgstr "名前空間は、英数字とアンダースコアだけで構成されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Class Annotated With `@TemplateData`"
msgstr "`@TemplateData` でアノテーションされたクラス"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A name resolver with the namespace `model_Status` is generated automatically."
msgstr "名前空間 `model_Status` を持つネームリゾルバーが自動的に生成されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template Accessing Class Constants"
msgstr "クラス定数にアクセスするテンプレート"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Convenient Annotation For Enums"
msgstr "enum の便利なアノテーション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"There's also a convenient annotation to access enum constants: `@io.quarkus.qute.TemplateEnum`.\n"
"This annotation is functionally equivalent to `@TemplateData(namespace = TemplateData.SIMPLENAME)`, i.e. a namespace resolver is automatically generated for the target enum and the simple name of the target enum is used as the namespace."
msgstr "また、enum 定数にアクセスするための便利なアノテーションとして、 `@io.quarkus.qute.TemplateEnum` があります。このアノテーションは、機能的には `@TemplateData(namespace = TemplateData.SIMPLENAME)` と同等です。つまり、対象の enum に対して自動的に名前空間リゾルバーが生成され、対象の enum の単純名が名前空間として使用されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Enum Annotated With `@TemplateEnum`"
msgstr "`@TemplateEnum` でアノテーションされた enum"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A name resolver with the namespace `Status` is generated automatically."
msgstr "名前空間 `Status` を持つネームリゾルバーが自動的に生成される。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`@TemplateEnum` declared on a non-enum class is ignored. Also if an enum also declares the `@TemplateData` annotation then the `@TemplateEnum` annotation is ignored."
msgstr "`@TemplateEnum` 非enumクラスで宣言されたものは無視されます。また、enum が アノテーションを宣言している場合、 アノテーションは無視される。 `@TemplateData` `@TemplateEnum` "

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Template Accessing Enum Constants"
msgstr "enum 定数にアクセスするテンプレート"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Quarkus detects possible namespace collisions and fails the build if a specific namespace is defined by multiple `@TemplateData` and/or `@TemplateEnum` annotations."
msgstr "Quarkus は、名前空間の競合の可能性を検出し、特定の名前空間が複数の `@TemplateData` や `@TemplateEnum` アノテーションによって定義されている場合、ビルドを失敗させます。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Global Variables"
msgstr "グローバル変数"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The `io.quarkus.qute.TemplateGlobal` annotation can be used to denote static fields and methods that supply _global variables_ which are accessible in any template.\n"
"Internally, each global variable is added to the data map of any `TemplateInstance` via the `TemplateInstance#data(String, Object)` method."
msgstr "`io.quarkus.qute.TemplateGlobal` アノテーションは、任意のテンプレートでアクセス可能な _グローバル変数_ を提供する静的フィールドとメソッドを示すために使用されます。内部的には、各グローバル変数は `TemplateInstance#data(String, Object)` メソッドを介して、任意の `TemplateInstance` のデータマップに追加されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Global Variables Definition"
msgstr "グローバル変数の定義"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If a class is annotated with `@TemplateGlobal` then every non-void non-private static method that declares no parameters and every non-private static field is considered a global variable. The name is defaulted, i.e. the name of the field/method is used."
msgstr "クラスが `@TemplateGlobal` でアノテーションが付けられている場合、パラメーターを宣言しないすべての非 void 非プライベート静的メソッドとすべての非プライベート静的フィールドは、グローバル変数と見なされます。名前はデフォルトです。つまり、フィールド/メソッドの名前が使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Method-level annotations override the class-level annotation. In this particular case, the name is not defaulted but selected explicitly."
msgstr "メソッドレベルのアノテーションは、クラスレベルのアノテーションをオーバーライドします。この特別なケースでは、名前はデフォルトではなく、明示的に選択されます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "A Template Accessing Global Variables"
msgstr "グローバル変数にアクセスするテンプレート"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`currentUser` resolves to `Globals#user()`."
msgstr "`currentUser` resolves to `Globals#user()`."

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`age` resolves to `Globals#age`."
msgstr "`age` は `Globals#age` に解決されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`myColors` resolves to `Globals#myColors()`."
msgstr "`myColors` resolves to `Globals#myColors()`."

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Note that global variables implicitly add <<typesafe_expressions, parameter declarations>> to all templates and so any expression that references a global variable is validated during build."
msgstr "グローバル変数は暗黙のうちにすべてのテンプレートに <<typesafe_expressions, パラメーター宣言>> を追加するため、グローバル変数を参照する式はビルド時に検証されることに注意してください。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "The Output"
msgstr "出力"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Resolving Conflicts"
msgstr "競合の解消"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Global variables may conflict with regular data objects.\n"
"<<typesafe_templates,Type-safe templates>> override the global variables automatically.\n"
"For example, the following definition overrides the global variable supplied by the `Globals#user()` method:"
msgstr "グローバル変数は、通常のデータオブジェクトと競合する場合があります。<<typesafe_templates,タイプセーフテンプレート>> は、グローバル変数を自動的にオーバーライドします。たとえば、以下の定義は `Globals#user()` メソッドが提供するグローバル変数をオーバーライドします。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Type-safe Template Definition"
msgstr "タイプセーフテンプレート定義"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`currentUser` conflicts with the global variable supplied by `Globals#user()`."
msgstr "`currentUser` は `Globals#user()` が提供するグローバル変数と競合しています。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "So the corresponding template does not result in a validation error even though the `Globals#user()` method returns `java.lang.String` which does not have the `name` property:"
msgstr "そのため、 `Globals#user()` メソッドが `java.lang.String` を返し、それが `name` プロパティーを持たないにもかかわらず、対応するテンプレートはバリデーションエラーにはなりません。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`templates/hello.txt`"
msgstr "`templates/hello.txt`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`org.acme.User` has the `name` property."
msgstr "`org.acme.User` には `name` プロパティーがあります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "For other templates an explicit parameter declaration is needed:"
msgstr "その他のテンプレートでは、明示的なパラメーター宣言が必要です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This parameter declaration overrides the declaration added by the global variable supplied by the `Globals#user()` method."
msgstr "このパラメーター宣言は、 `Globals#user()` メソッドが提供するグローバル変数によって追加される宣言を上書きします。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Native Executables"
msgstr "ネイティブ実行可能ファイル"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"In the JVM mode a reflection-based value resolver may be used to access properties and call methods of the model classes.\n"
"But this does not work for xref:building-native-image.adoc[a native executable] out of the box.\n"
"As a result, you may encounter template exceptions like `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` even if the `Foo` class declares a relevant getter method."
msgstr "JVM モードでは、リフレクションベースの値リゾルバーが、プロパティーにアクセスし、モデルクラスのメソッドを呼び出すために使われる場合があります。しかし、これは xref:building-native-image.adoc[ネイティブ実行可能ファイル] に対しては、そのままではうまくいきません。その結果、たとえ `Foo` クラスが関連するゲッターメソッドを宣言していたとしても、 `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` といったテンプレート例外に遭遇するかも知れません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "There are several ways to solve this problem:"
msgstr "この問題を解決するには、いくつかの方法があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Make use of <<typesafe_templates,type-safe templates>> or <<typesafe_expressions,type-safe expressions>>"
msgstr "<<typesafe_templates,タイプセーフテンプレート>> または <<typesafe_expressions,タイプセーフな式>> をご利用ください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In this case, an optimized value resolver is generated automatically and used at runtime"
msgstr "この場合、最適化されたバリューリゾルバーが自動的に生成され、実行時に使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "This is the preferred solution"
msgstr "これが望ましい解決策です"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Annotate the model class with <<template_data,`@TemplateData`>> - a specialized value resolver is generated and used at runtime"
msgstr "モデルクラスに <<template_data,`@TemplateData`>> のアノテーションを付ける - 実行時に専用の値リゾルバーが生成され、使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Annotate the model class with `@io.quarkus.runtime.annotations.RegisterForReflection` to make the reflection-based value resolver work"
msgstr "モデルクラスに `@io.quarkus.runtime.annotations.RegisterForReflection` のアノテーションを付けて、リフレクションベースの値リゾルバーを動作させます。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "RESTEasy Integration"
msgstr "RESTEasy 統合"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"If you want to use Qute in your JAX-RS application, then depending on which JAX-RS stack you are using, you'll need to register the proper extension first.\n"
"If you are using the traditional `quakus-resteasy` extension, then in your `pom.xml` file, add:"
msgstr "JAX-RSアプリケーションでQuteを使用したい場合、使用しているJAX-RSスタックによっては、まず適切なエクステンションを登録する必要があります。トラディショナルな `quakus-resteasy` のエクステンションを使用している場合は、 以下を `pom.xml` ファイルに追加してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If instead you are using RESTEasy Reactive via the `quarkus-resteasy-reactive` extension, then in your `pom.xml` file, add:"
msgstr "代わりに `quarkus-resteasy-reactive` エクステンションを介して RESTEasy Reactive を使用している場合は、 次を `pom.xml` ファイルに追加してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Both of these extensions register a special `ContainerResponseFilter` implementation which enables resource methods to return a `TemplateInstance`, thus freeing users of having to take care of all necessary internal steps."
msgstr "これらのエクステンションはどちらも、リソースメソッドが `TemplateInstance` を返すことを可能にする特別な `ContainerResponseFilter` 実装を登録しています。そのため、ユーザーは必要なすべての内部ステップを処理する必要がなくなります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The end result is that a using Qute within a JAX-RS resource may look as simple as:"
msgstr "最終的には、JAX-RSリソース内でQuteを使用すると、次のようにシンプルに見えるかもしれません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "If there is no `@Location` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "`@Location` の修飾子が指定されていない場合は、フィールド名がテンプレートの場所を特定するために使用されます。この特定のケースでは、パスが `templates/hello.txt` であるテンプレートを注入しています。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr "`Template.data()` は、実際のレンダリングがトリガーされる前にカスタマイズできる新しいテンプレートインスタンスを返します。この場合、名前の値をキー `name` の下に置きます。データマップはレンダリング中にアクセス可能です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "レンダリングをトリガーしないことに注意してください - これは特別な `ContainerResponseFilter` の実装によって自動的に行われます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Users are encouraged to use <<typesafe_templates,Type-safe templates>> that help to organize the templates for a specific JAX-RS resource and enable <<typesafe_expressions,type-safe expressions>> automatically."
msgstr "ユーザーは、特定のJAX-RSリソースのテンプレートを整理し、自動的に <<typesafe_expressions,タイプセーフ表現>> を有効にするのに役立つ <<typesafe_templates,タイプセーフテンプレート>> を使用することが推奨されます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The content negotiation is performed automatically.\n"
"The resulting output depends on the `Accept` header received from the client."
msgstr "コンテンツネゴシエーションは自動的に実行されます。結果の出力はクライアントから受け取った `Accept` ヘッダーに依存します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Inject a variant template with base path derived from the injected field - `src/main/resources/templates/item`."
msgstr "注入されたフィールドから派生したベースパスを持つバリアントテンプレートを注入します - `src/main/resources/templates/item`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "For `text/plain` the `src/main/resources/templates/item.txt` template is used. For `text/html` the `META-INF/resources/templates/item.html` template is used."
msgstr "`text/plain` では `src/main/resources/templates/item.txt` のテンプレートが使用されます。 `text/html` では `META-INF/resources/templates/item.html` のテンプレートが使用されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `RestTemplate` util class can be used to obtain a template instance from a body of a JAX-RS resource method:"
msgstr "`RestTemplate` utilクラスは、JAX-RSリソースメソッドのボディからテンプレートインスタンスを取得するために使用することができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "RestTemplate Example"
msgstr "RestTemplate の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The name of the template is derived from the resource class and method name; `DetailResource/item` in this particular case."
msgstr "テンプレートの名前は、リソースクラスとメソッド名から派生しています。このケースでは、 `DetailResource/item` です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Unlike with `@Inject` the templates obtained via `RestTemplate` are not validated, i.e. the build does not fail if a template does not exist."
msgstr "`@Inject` とは異なり、 `RestTemplate` 経由で取得したテンプレートは検証されません。即ち、テンプレートが存在しなくてもビルドは失敗しません。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Development Mode"
msgstr "開発モード"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "In the development mode, all files located in `src/main/resources/templates` are watched for changes and modifications are immediately visible."
msgstr "開発モードでは、 `src/main/resources/templates` にあるすべてのファイルの変更が監視され、変更はすぐに表示されます。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Type-safe Message Bundles"
msgstr "タイプセーフメッセージバンドル"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Basic Concepts"
msgstr "基本概念"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The basic idea is that every message is potentially a very simple template.\n"
"In order to prevent type errors a message is defined as an annotated method of a *message bundle interface*.\n"
"Quarkus generates the *message bundle implementation* at build time.\n"
"Subsequently, the bundles can be used at runtime:"
msgstr "基本的な考え方は、すべてのメッセージは潜在的に非常にシンプルなテンプレートであるということです。型エラーを防ぐために、メッセージは *メッセージバンドルインターフェース* のアノテーションメソッドとして定義されます。Quarkusは、ビルド時に *メッセージバンドルの実装を* 生成します。そのため、実行時にバンドルを使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr "`io.quarkus.qute.i18n.MessageBundles#get()` を経由し、直接コードの中で使用。例: `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr "`@Inject` であなたのBeanに注入されます。 例: `@Inject AppMessages`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Referenced in the templates via the message bundle namespace:"
msgstr "メッセージ・バンドル名前空間を介してテンプレート内で参照。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`msg` is the default namespace."
msgstr "`msg` がデフォルトの名前空間です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`hello_name` is the message key."
msgstr "`hello_name` がメッセージキーです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "`Lucie` is the parameter of the message bundle interface method."
msgstr "`Lucie` はメッセージバンドルインターフェースメソッドのパラメーターです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It is also possible to obtain a localized message for a key resolved at runtime using a reserved key `message`. The validation is skipped in this case though."
msgstr "また、予約されたキー `message` を使用して、実行時に解決されたキーのローカライズされたメッセージを取得することも可能である。この場合、検証はスキップされます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Message Bundle Interface Example"
msgstr "メッセージバンドルインターフェイスの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Denotes a message bundle interface. The bundle name is defaulted to `msg` and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
msgstr "メッセージバンドルインターフェイスを表します。 バンドル名のデフォルトは `msg` で、テンプレート式の名前空間として使用されます。例: `{msg:hello_name}`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Each method must be annotated with `@Message`. The value is a qute template."
msgstr "各メソッドは `@Message` でアノテーションする必要があります。値は qute テンプレートです。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The method parameters can be used in the template."
msgstr "メソッドのパラメーターはテンプレートで使用することができます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Bundle Name and Message Keys"
msgstr "バンドル名とメッセージキー"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Keys are used directly in templates.\n"
"The bundle name is used as a namespace in template expressions.\n"
"The `@MessageBundle` can be used to define the default strategy used to generate message keys from method names.\n"
"However, the `@Message` can override this strategy and even define a custom key.\n"
"By default, the annotated element's name is used as-is.\n"
"Other possibilities are:"
msgstr "キーはテンプレート内で直接使用されます。バンドル名はテンプレート式の名前空間として使用されます。 `@MessageBundle` は、メソッド名からメッセージキーを生成するために使用されるデフォルトのストラテジーを定義するために使用することができます。しかし、 `@Message` はこのストラテジーをオーバーライドし、カスタム・キーを定義することもできます。デフォルトでは、アノテーションされた要素の名前がそのまま使用されます。他の可能性としては、以下のようなものがあります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr "キャメルケースを止め、ハイフン化したもの。 例: `helloName()` -> `hello-name`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "De-camel-cased and parts separated by underscores; e.g. `helloName()` -> `hello_name`."
msgstr "キャメルケースを止め、パーツをアンダースコア区切りとしたもの。例: `helloName()` -> `hello_name`"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Validation"
msgstr "バリデーション"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "All message bundle templates are validated:"
msgstr "すべてのメッセージバンドルテンプレートは検証されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "All expressions without a namespace must map to a parameter; e.g. `Hello {foo}` -> the method must have a param of name `foo`"
msgstr "名前空間を持たない全ての式はパラメーターにマッピングする必要があります。例: `Hello {foo}` の場合、メソッドは `foo` という名前のパラメータを持つ必要があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "All expressions are validated against the types of the parameters; e.g. `Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> `org.acme.Foo` must have a property of name `bar`"
msgstr "すべての式はパラメーターの型に対して検証されます。例: `Hello {foo.bar}` で、パラメーター `foo` の型が `org.acme.Foo` の場合、 `org.acme.Foo` は `bar` という名前のプロパティーを持つ必要があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A warning message is logged for each _unused_ parameter."
msgstr "_未使用の_ パラメーターごとに警告メッセージが記録されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Expressions that reference a message bundle method, such as `{msg:hello(item.name)}`, are validated too."
msgstr "`{msg:hello(item.name)}` のようなメッセージバンドルメソッドを参照する式も検証されます。"

#. type: Title ====
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Localization"
msgstr "ローカライゼーション"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"The default locale specified via the `quarkus.default-locale` config property is used for the `@MessageBundle` interface by default.\n"
"However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to specify a custom locale.\n"
"Additionally, there are two ways to define a localized bundle:"
msgstr "デフォルトでは、 `@MessageBundle` インターフェイスには `quarkus.default-locale` 設定プロパティーで指定したデフォルトロケールが使用されます。しかし、 `io.quarkus.qute.i18n.MessageBundle#locale()` を使用して、カスタムのロケールを指定することができます。さらに、ローカライズされたバンドルを定義するには、以下の 2 つの方法があります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Create an interface that extends the default interface that is annotated with `@Localized`"
msgstr "`@Localized` でアノテーションされたデフォルトのインターフェイスを拡張するインターフェイスを作成します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Create an UTF-8 encoded file located in `src/main/resources/messages`; e.g. `msg_de.properties`."
msgstr "`src/main/resources/messages` に UTF-8 エンコードされたファイルを作成します。例: `msg_de.properties`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A localized interface is the preferred solution mainly due to the possibility of easy refactoring."
msgstr "ローカライズされたインターフェイスは、主にリファクタリングの容易性から、好ましい解決策です。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Localized Interface Example"
msgstr "ローカライズされたインターフェースの例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The value is the locale tag string (IETF)."
msgstr "値はロケールタグ文字列(IETF)です。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The value is the localized template."
msgstr "値はローカライズされたテンプレートです。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Message bundle files must be encoded in UTF-8.\n"
"The file name consists of the relevant bundle name (e.g. `msg`) and underscore followed by the locate tag (IETF).\n"
"The file format is very simple: each line represents either a key/value pair with the equals sign used as a separator or a comment (line starts with `#`).\n"
"Blank lines are ignored.\n"
"Keys are _mapped to method names_ from the corresponding message bundle interface.\n"
"Values represent the templates normally defined by `io.quarkus.qute.i18n.Message#value()`.\n"
"A value may be spread out across several adjacent normal lines.\n"
"In such case, the line terminator must be escaped with a backslash character `\\`.\n"
"The behavior is very similar to the behavior of the `java.util.Properties.load(Reader)` method."
msgstr ""
"メッセージバンドルファイルはUTF-8でエンコードされていなければなりません。\n"
"ファイル名は、関連するバンドル名(例: `msg` )とアンダースコア、そしてlocateタグ(IETF)で構成されます。\n"
"ファイル形式は非常にシンプルで、各行はキーと値のペアを表し、等号がセパレータとして使われるか、コメント(行頭は `#` )が使われます。\n"
"空行は無視されます。\n"
"キーは、対応するメッセージ・バンドル・インターフェースの _メソッド名にマッピング_ されます。\n"
"値は通常 `io.quarkus.qute.i18n.Message#value()` で定義されているテンプレートを表します。\n"
"値は、隣接する複数の行にまたがっていてもかまいません。\n"
"その場合、行の終端をバックスラッシュ文字 `\\` でエスケープする必要があります。\n"
"動作は `java.util.Properties.load(Reader)` メソッドの動作に非常に似ています。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Localized File Example - `msg_de.properties`"
msgstr "ローカライズされたファイルの例 - `msg_de.properties`"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Each line in a localized file represents a key/value pair. The key must correspond to a method declared on the message bundle interface. The value is the message template."
msgstr "ローカライズされたファイルの各行は、キーと値のペアを表します。キーは、メッセージバンドルインターフェイスで宣言されたメソッドに対応しなければなりません。値はメッセージテンプレートになります。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Keys and values are separated by the equals sign."
msgstr "キーと値は等号で区切られています。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "We use the `.properties` suffix in our example because most IDEs and text editors support syntax highlighting of `.properties` files. But in fact, the suffix could be anything - it is just ignored."
msgstr "この例では `.properties` という接尾辞を使用していますが、これはほとんどの IDE やテキストエディターが `.properties` ファイルのシンタックスハイライトをサポートしているからです。しかし、実際には接尾辞は何でもよいため、単に無視されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "An example properties file is generated into the target directory for each message bundle interface automatically. For example, by default if no name is specified for `@MessageBundle` the file `target/qute-i18n-examples/msg.properties` is generated when the application is build via `mvn clean package`. You can use this file as a base for a specific locale. Just rename the file - e.g. `msg_fr.properties`, change the message templates and move it in the `src/main/resources/messages` directory."
msgstr "メッセージバンドルインターフェイスごとに、ターゲットディレクトリーにサンプルのプロパティーファイルが自動的に生成されます。たとえば、デフォルトで `@MessageBundle` に名前が指定されない場合、 `mvn clean package` を用いてアプリケーションをビルドすると、 `target/qute-i18n-examples/msg.properties` というファイルが生成されます。このファイルは、特定のロケールのベースとして使用することができます。単にファイル名を変更 (例: `msg_fr.properties`) して メッセージのテンプレートを変更し、これを `src/main/resources/messages` ディレクトリーに移動します。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Value Spread Out Across Several Adjacent Lines"
msgstr "複数の隣接する行にまたがる値"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Note that the line terminator is escaped with a backslash character `\\` and white space at the start of the following line is ignored. I.e. `{msg:hello('Edgar')}` would be rendered as `Hello Edgar and good morning!`."
msgstr "行の終端はバックスラッシュ文字 `\\` でエスケープされ、次の行の先頭の空白は無視されることに注意してください。つまり、 `{msg:hello('Edgar')}` は `Hello Edgar and good morning!` とレンダリングされます。"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Once we have the localized bundles defined we need a way to _select_ the correct bundle for a specific template instance, i.e. to specify the locale for all message bundle expressions in the template.\n"
"By default, the locale specified via the `quarkus.default-locale` configuration property is used to select the bundle.\n"
"Alternatively, you can specify the `locale` attribute of a template instance."
msgstr "ローカライズされたバンドルを定義したら、特定のテンプレートインスタンスに対して正しいバンドルを _select_ する方法、つまりテンプレート内のすべてのメッセージバンドル式に対してロケールを指定する方法が必要です。デフォルトでは、 `quarkus.default-locale` 設定プロパティーで指定したロケールが、バンドルの選択に使用されます。また、テンプレートインスタンスの `locale` 属性を指定することもできます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "`locale` Attribute Example"
msgstr "`locale` 属性の例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can set a `Locale` instance or a locale tag string (IETF)."
msgstr "`Locale` インスタンスかロケールタグ文字列 (IETF) をセットすることが出来ます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "When using <<resteasy_integration,quarkus-resteasy-qute>> the `locale` attribute is derived from the the `Accept-Language` header if not set by a user."
msgstr "<<resteasy_integration,quarkus-resteasy-qute>> を使用する場合、 `locale` 属性は、ユーザが設定していない場合は `Accept-Language` ヘッダから派生します。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The `@Localized` qualifier can be used to inject a localized message bundle interface."
msgstr "`@Localized` 修飾子を使用して、ローカライズされたMessage Bundleインタフェースを注入することができます。"

#. type: Block title
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Injected Localized Message Bundle Example"
msgstr "注入されたローカライズされた Message Bundle例"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "The annotation value is a locale tag string (IETF)."
msgstr "アノテーションの値はロケールタグ文字列(IETF)です。"

#. type: Title ===
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Title ==
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Qute Used as a Standalone Library"
msgstr "スタンドアローンライブラリーとして使用する場合のQute"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"Qute is primarily designed as a Quarkus extension.\n"
"However. it is possible to use it as a \"standalone\" library.\n"
"In this case, some features are not available and some additional configuration is needed."
msgstr "Quteは、主にQuarkusのエクステンションとして設計されています。しかし、「スタンドアロン」のライブラリとして使用することも可能です。この場合、いくつかの機能は利用できず、いくつかの追加設定が必要となります。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Engine"
msgstr "エンジン"

#: _versions/2.7/guides/qute-reference.adoc
msgid ""
"First of all, no managed `Engine` instance is available out of the box.\n"
"You'll need to configure a new instance via `Engine.builder()`."
msgstr ""
"まず第一に、マネージド `Engine` インスタンスはそのままでは利用できません。 \n"
"`Engine.builder()` を使って新しいインスタンスを設定する必要があります。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Templates"
msgstr "テンプレート"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "By default, no <<template-locator,template locators>> are registered, i.e. `Engine.getTemplate(String)` will not work."
msgstr "デフォルトでは、<<template-locator,テンプレートロケーター>> は登録されていません。つまり、 `Engine.getTemplate(String)` は機能しません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "You can register a custom template locator or parse a template manually and put the reulst in the cache via `Engine.putTemplate(String, Template)`."
msgstr "カスタムテンプレートロケータを登録するか、テンプレートを手動で解析して、 `Engine.putTemplate(String, Template)` を介してキャッシュに格納することができます。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Value resolvers"
msgstr "値リゾルバー"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "No <<value-resolvers,``ValueResolver``s>> are generated automatically."
msgstr "<<value-resolvers,``ValueResolver``s>> は自動的に生成されません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "<<template_extension_methods,`@TemplateExtension` methods>> will not work."
msgstr "<<template_extension_methods,`@TemplateExtension` メソッド>> は動作しません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "<<template_data,`@TemplateData`>> annotations are ignored."
msgstr "<<template_data,`@TemplateData`>> アノテーションは無視されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It's recommended to register a `ReflectionValueResolver` instance via `Engine.addValueResolver(new ReflectionValueResolver())` so that Qute can access object properties and call public methods."
msgstr "Qute がオブジェクトのプロパティーにアクセスし、パブリックメソッドを呼び出せるように、 `Engine.addValueResolver (new ReflectionValueResolver())` を介して `ReflectionValueResolver` インスタンスを登録することが推奨されます。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "Keep in mind that reflection may not work correctly in some restricted environments or may require additional configuration, e.g. registration in case of a GraalVM native image."
msgstr "リフレクションは、一部の制限された環境では正しく動作しないか、GraalVM ネイティブイメージの場合の登録など、追加の設定が必要な場合があることに留意してください。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "A custom value resolver can be easily built via `ValueResolver.builder()`"
msgstr "`ValueResolver.builder()` を経由して、簡単にカスタム値リゾルバを構築することができます。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Type-safety"
msgstr "型安全"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "<<typesafe_expressions>> are not validated."
msgstr "link:#typesafe_expressions[typeafe_expressions] は検証されません。"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "<<type-safe-message-bundles,Type-safe message bundles>> are not supported."
msgstr "link:#type-safe-message-bundles[Type-safeメッセージバンドル]はサポートされていません。"

#. type: Labeled list
#: _versions/2.7/guides/qute-reference.adoc
#, no-wrap
msgid "Injection"
msgstr "注入"

#. type: Plain text
#: _versions/2.7/guides/qute-reference.adoc
msgid "It is not possible to inject a `Template` instance and vice versa - a template cannot inject a `@Named` CDI bean via the `inject:` namespace."
msgstr "`Template` インスタンスを注入することはできませんし、その逆もできません。テンプレートは、 `inject:` 名前空間を介して `@Named` CDI Bean を注入することはできません。"
