msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Tips for writing native applications"
msgstr "ネイティブ・アプリケーションを作成するためのヒント"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "This guide contains various tips and tricks for getting around problems that might arise when attempting to run Java applications as native executables."
msgstr "このガイドには、Java アプリケーションをネイティブ実行可能ファイルとして実行しようとしたときに発生する可能性のある問題を回避するためのさまざまなヒントやコツが記載されています。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Note that we differentiate two contexts where the solution applied might be different:"
msgstr "適用されるソリューションが異なる可能性のある 2 つの文脈を区別していることに注意してください。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "in the context of an application, you will rely on configuring the `native-image` configuration by tweaking your `pom.xml`;"
msgstr "アプリケーションのコンテキストでは、 `pom.xml` を変更した `native-image` 設定に依存することになります。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "in the context of an extension, Quarkus offers a lot of infrastructure to simplify all of this."
msgstr "エクステンションのコンテキストでは、Quarkus はこれらすべてを簡素化するための多くのインフラストラクチャーを提供しています。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Please refer to the appropriate section depending on your context."
msgstr "コンテキストに応じて適切なセクションを参照してください。"

#. type: Title ==
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Supporting native in your application"
msgstr "アプリケーションでのネイティブのサポート"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "GraalVM imposes a number of constraints and making your application a native executable might require a few tweaks."
msgstr "GraalVM は多くの制約を課しており、アプリケーションをネイティブ実行可能なものにするには、いくつかの調整が必要になるかもしれません。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Including resources"
msgstr "リソースを含む"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"By default, when building a native executable, GraalVM will not include any of the resources that are on the classpath into the native executable it creates.\n"
"Resources that are meant to be part of the native executable need to be configured explicitly."
msgstr "デフォルトでは、ネイティブ実行可能ファイルをビルドする際に、GraalVM はクラスパス上にあるリソースを、作成するネイティブ実行可能ファイルには含めません。ネイティブ実行可能ファイルの一部となるリソースは、明示的に設定する必要があります。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Quarkus automatically includes the resources present in `META-INF/resources` (the web resources) but, outside of this directory, you are on your own."
msgstr "Quarkus では、 `META-INF/resources` (Web リソース) にあるリソースが自動的に含まれていますが、このディレクトリー以外の場所では自己責任でお願いします。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"Note that you need to be extremely careful here as anything in `META-INF/resources` will be exposed as static web resources.\n"
"So this directory is not a shortcut for \"let's automatically include these resources in the native executable\" and should only be used for static web resources."
msgstr "`META-INF/resources` にあるものはすべて、静的な Web リソースとして公開されるので、ここでは非常に注意が必要です。このディレクトリーは、「これらのリソースを自動的にネイティブ実行可能ファイルに含める」ためのショートカットではなく、静的な Web リソースのためにのみ使用する必要があります。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Other resources should be declared explicitly."
msgstr "その他のリソースは明示的に宣言する必要があります。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"To include more resources in the native executable, the easiest way is to use the `quarkus.native.resources.includes` configuration property,\n"
"and its counterpart to exclude resources `quarkus.native.resources.excludes`."
msgstr "より多くのリソースをネイティブ実行可能ファイルに含めるには、 `quarkus.native.resources.includes` という設定プロパティーと、 `quarkus.native.resources.excludes` リソースを除外するための `quarkus.native.resources.excludes` を使用するのが最も簡単です。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Both configuration properties support glob patterns."
msgstr "どちらの設定プロパティーもグロブパターンに対応しています。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For instance, having the following properties in your `application.properties`:"
msgstr "たとえば、 `application.properties` で以下のプロパティーを使用すると"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "will include:"
msgstr "以下が含まれます。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "all files in the `foo/` directory and its subdirectories except for files in `foo/private/` and its subdirectories,"
msgstr "`foo/` ディレクトリーとそのサブディレクトリーにあるすべてのファイルのうち、 `foo/private/` とそのサブディレクトリーにあるファイルを除く。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "all text files in the `bar/` directory and its subdirectories."
msgstr "`bar/` ディレクトリーとそのサブディレクトリーにあるすべてのテキストファイル。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"If globs are not sufficiently precise for your use case and you need to rely on regular expressions or if you prefer relying on the GraalVM infrastructure,\n"
"you can also create a `resources-config.json` (the most common location is within `src/main/resources`) JSON file defining which resources should be included:"
msgstr "グロブが不十分で正規表現に頼る必要がある場合や、GraalVM インフラストラクチャーを使用することを好む場合は、どのリソースを含めるべきかを定義する JSON ファイル `resources-config.json` (最も一般的な場所は `src/main/resources` 内) を作成します。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"The patterns are valid Java regexps.\n"
"Here we include all the XML files and JSON files into the native executable."
msgstr "このパターンは有効な Java 正規表現です。ここでは、すべての XML ファイルと JSONファイル をネイティブ実行可能ファイルに含めています。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "You can find more information about this topic in https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[the GraalVM documentation]."
msgstr "このトピックに関する詳しい情報は、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[GraalVMのドキュメント]に記載されています。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "The final order of business is to make the configuration file known to the `native-image` executable by adding the proper configuration to `application.properties`:"
msgstr "最後にやるべきことは、 `application.properties` に適切な設定を追加して、設定ファイルを `native-image` 実行可能ファイルに知らせることです。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"In the previous snippet we were able to simply use `resources-config.json` instead of specifying the entire path of the file simply because it was added to `src/main/resources`.\n"
"If the file had been added to another directory, the proper file path would have had to be specified manually."
msgstr "前のスニペットでは、 `src/main/resources` に追加されたため、ファイルのパス全体を指定するのではなく、単に `resources-config.json` を使用することができました。ファイルが別のディレクトリーに追加されていた場合は、適切なファイルパスを手動で指定する必要がありました。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Multiple options may be separated by a comma. For example, one could use:"
msgstr "複数のオプションはカンマで区切ることができます。例えば、次のように使用することができます。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "in order to ensure that various resources are included and additional reflection is registered."
msgstr "さまざまなリソースが含まれており、追加のリフレクションが登録されていることを確認するため。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If for some reason adding the aforementioned configuration to `application.properties` is not desirable, it is possible to configure the build tool to effectively perform the same operation."
msgstr "何らかの理由で `application.properties` に前述の構成を追加することが望ましくない場合には、ビルドツールで効果的に同様の操作を行うように構成することも可能です。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "When using Maven, we could use the following configuration:"
msgstr "Maven を使用する場合は、以下のような構成にすることができます。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Registering for reflection"
msgstr "リフレクションのための登録"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"When building a native executable, GraalVM operates with a closed world assumption.\n"
"It analyzes the call tree and removes all the classes/methods/fields that are not used directly."
msgstr "ネイティブ実行可能ファイルを構築する際、GraalVM はクローズな環境を想定して動作します。これは、コールツリーを解析し、直接使用しないクラス/メソッド/フィールドをすべて削除します。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"The elements used via reflection are not part of the call tree so they are dead code eliminated (if not called directly in other cases).\n"
"To include these elements in your native executable, you need to register them for reflection explicitly."
msgstr "リフレクションで使用される要素はコールツリーの一部ではないので、デッドコードとして排除されます (他のケースでは直接呼び出されない場合)。ネイティブ実行可能ファイルにこれらの要素を含めるには、リフレクションに明示的に登録する必要があります。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "This is a very common case as JSON libraries typically use reflection to serialize the objects to JSON:"
msgstr "これは、JSONライブラリがリフレクションを使用してオブジェクトをJSONにシリアライズするのが一般的なので、非常によくあるケースです。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If we were to use the code above, we would get an exception like the following when using the native executable:"
msgstr "上記のコードを使用した場合、ネイティブ実行可能ファイルを使用すると以下のような例外が発生します。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "or if you are using Jackson:"
msgstr "または Jackson を使用している場合。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "An even nastier possible outcome could be for no exception to be thrown, but instead the JSON result would be completely empty."
msgstr "さらに厄介なのは、例外がスローされずに JSON の結果が完全に空になってしまうことです。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "There are two different ways to fix this type of issues."
msgstr "このタイプの問題を解決するには、2 つの方法があります。"

#. type: Title ====
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Using the @RegisterForReflection annotation"
msgstr "@RegisterForReflection アノテーションの使用"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "The easiest way to register a class for reflection is to use the `@RegisterForReflection` annotation:"
msgstr "リフレクション用のクラスを登録する最も簡単な方法は、 `@RegisterForReflection` アノテーションを使用することです。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If your class is in a third-party jar, you can do it by using an empty class that will host the `@RegisterForReflection` for it."
msgstr "クラスがサードパーティの jar にある場合は、そのクラスの `@RegisterForReflection` をホストする空のクラスを使用することで行うことができます。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Note that `MyClassRequiringReflection` and  `MySecondClassRequiringReflection` will be registered for reflection but not `MyReflectionConfiguration`."
msgstr "なお、 `MyClassRequiringReflection` と `MySecondClassRequiringReflection` はリフレクションに登録されますが、 `MyReflectionConfiguration` は登録されません。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "This feature is handy when using third-party libraries using object mapping features (such as Jackson or GSON):"
msgstr "この機能は、オブジェクトマッピング機能を使用するサードパーティのライブラリ（JacksonやGSONなど）を使用する際に便利です。"

#. type: Title ====
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Using a configuration file"
msgstr "設定ファイルの使用"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "You can use a configuration file to register classes for reflection."
msgstr "この場合、設定ファイルを使用してリフレクション用のクラスを登録することができます。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "As an example, in order to register all methods of class `com.acme.MyClass` for reflection, we create `reflection-config.json` (the most common location is within `src/main/resources`)"
msgstr "例えば、クラス `com.acme.MyClass` のすべてのメソッドをリフレクションのために登録するには、 `reflection-config.json` を作成します (最も一般的な場所は `src/main/resources` の中です)。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more details on the format of this file, please refer to https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[the GraalVM documentation]."
msgstr "このファイルのフォーマットの詳細については、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[GraalVMのドキュメント]を参照してください。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"In the previous snippet we were able to simply use `reflection-config.json` instead of specifying the entire path of the file simply because it was added to `src/main/resources`.\n"
"If the file had been added to another directory, the proper file path would have had to be specified manually."
msgstr "前のスニペットでは、 `src/main/resources` に追加されたため、ファイルのパス全体を指定するのではなく、単に `reflection-config.json` を使用することができました。ファイルが別のディレクトリーに追加されていた場合は、適切なファイルパスを手動で指定する必要がありました。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Delaying class initialization"
msgstr "クラスの初期化を遅らせる"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "By default, Quarkus initializes all classes at build time."
msgstr "デフォルトでは、Quarkus はビルド時にすべてのクラスを初期化します。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"There are cases where the initialization of certain classes is done in a static block needs to be postponed to runtime.\n"
"Typically omitting such configuration would result in a runtime exception like the following:"
msgstr "特定のクラスの初期化が静的ブロックで行われる場合、実行時に延期する必要がある場合があります。通常、このような設定を省略すると、以下のような実行時例外が発生します。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If you need to delay the initialization of a class, you can use the `--initialize-at-run-time=<package or class>` configuration knob."
msgstr "クラスの初期化を遅らせる必要がある場合は、 `--initialize-at-run-time=<package or class>` 設定ノブを使用します。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "It should be added to the `native-image` configuration using the `quarkus.native.additional-build-args` configuration property as shown in the examples above."
msgstr "上記の例のように、 `quarkus.native.additional-build-args` 設定プロパティーを使用して `native-image` 設定に追加する必要があります。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "You can find more information about all this in https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[the GraalVM documentation]."
msgstr "これらすべての情報は、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[GraalVMのドキュメント]に記載されています。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"When multiple classes or packages need to be specified via the `quarkus.native.additional-build-args` configuration property, the `,` symbol needs to be escaped.\n"
"An example of this is the following:"
msgstr "`quarkus.native.additional-build-args` 設定プロパティーを介して複数のクラスやパッケージを指定する必要がある場合は、 `,` シンボルをエスケープする必要があります。その例を以下に示します。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "and in the case of using the Maven configuration instead of `application.properties`:"
msgstr "`application.properties` の代わりに Maven 設定を使用する場合。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Managing Proxy Classes"
msgstr "プロキシークラスの管理"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "While writing native application you'll need to define proxy classes at image build time by specifying the list of interfaces that they implement."
msgstr "ネイティブアプリケーションを書く際には、実装するインターフェースのリストを指定して、イメージのビルド時にプロキシークラスを定義する必要があります。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "In such a situation, the error you might encounter is:"
msgstr "このような状況では、以下のようなエラーが発生します。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"Solving this issue requires adding the `-H:DynamicProxyConfigurationResources=<comma-separated-config-resources>` option and to provide a dynamic proxy configuration file.\n"
"You can find all the information about the format of this file in https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md#manual-configuration[the GraalVM documentation]."
msgstr "この問題を解決するには、 `-H:DynamicProxyConfigurationResources=<comma-separated-config-resources>` オプションを追加し、ダイナミックプロキシ設定ファイルを用意する必要があります。このファイルのフォーマットに関するすべての情報は、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md#manual-configuration[GraalVMのドキュメント]に記載されています。"

#. type: Title ==
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Supporting native in a Quarkus extension"
msgstr "Quarkus エクステンションでネイティブをサポートする"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Supporting native in a Quarkus extension is even easier as Quarkus provides a lot of tools to simplify all this."
msgstr "Quarkus のエクステンションでのネイティブのサポートは、Quarkus がこれらすべてを単純化するための多くのツールを提供しているため、さらに簡単になりました。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Everything described here will only work in the context of Quarkus extensions, it won't work in an application."
msgstr "ここで説明したことはすべて、Quarkus エクステンションのコンテキストでのみ機能し、アプリケーションでは機能しません。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Register reflection"
msgstr "リフレクションの登録"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Quarkus makes registration of reflection in an extension a breeze by using `ReflectiveClassBuildItem`, thus eliminating the need for a JSON configuration file."
msgstr "Quarkus では、 `ReflectiveClassBuildItem` を使用することで、エクステンションへのリフレクションの登録が簡単になり、JSON 設定ファイルが不要になります。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "To register a class for reflection, one would need to create a Quarkus processor class and add a build step that registers reflection:"
msgstr "リフレクション用のクラスを登録するには、Quarkus プロセッサークラスを作成し、リフレクションを登録するビルドステップを追加する必要があります。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "More information about reflection in GraalVM can be found https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[here]."
msgstr "GraalVMでのリフレクションについての詳細は link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[こちら]をご覧ください。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "In the context of an extension, Quarkus eliminates the need for a JSON configuration file by allowing extension authors to specify a `NativeImageResourceBuildItem`:"
msgstr "エクステンションのコンテキストでは、Quarkus は、エクステンションの作成者が `NativeImageResourceBuildItem` .NET Frameworkを指定できるようにすることで、JSON 設定ファイルの必要性を排除しています。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more information about GraalVM resource handling in native executables please refer to https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[the GraalVM documentation]."
msgstr "ネイティブ実行可能ファイルにおけるGraalVMのリソース処理についての詳細は、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[GraalVMのドキュメント]を参照してください。"

#. type: Title ==
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Delay class initialization"
msgstr "クラスの初期化を遅らせる"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Quarkus simplifies things by allowing extensions authors to simply register a `RuntimeInitializedClassBuildItem`. A simple example of doing so could be:"
msgstr "Quarkus では、エクステンションの作成者が簡単に `RuntimeInitializedClassBuildItem` を登録できるようにすることで、物事を簡素化しています。簡単な例としては、次のようなものが考えられます。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Using such a construct means that a `--initialize-at-run-time` option will automatically be added to the `native-image` command line."
msgstr "このような構文を使用すると、 `--initialize-at-run-time` オプションが自動的に `native-image` コマンドラインに追加されることを意味します。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more information about `--initialize-at-run-time`, please read https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[the GraalVM documentation]."
msgstr "`--initialize-at-run-time` の詳細については、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[GraalVMのドキュメント]をお読みください。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Very similarly, Quarkus allows extensions authors to register a `NativeImageProxyDefinitionBuildItem`. An example of doing so is:"
msgstr "同様に、Quarkus では、エクステンションの作成者が `NativeImageProxyDefinitionBuildItem` を登録することができます。その例としては、以下のようなものがあります。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Using such a construct means that a `-H:DynamicProxyConfigurationResources` option will automatically be added to the `native-image` command line."
msgstr "このような構文を使用すると、 `-H:DynamicProxyConfigurationResources` オプションが自動的に `native-image` コマンドラインに追加されることを意味します。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more information about Proxy Classes you can read https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md[the GraalVM documentation]."
msgstr "プロキシクラスの詳細については、 link:https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md[GraalVMのドキュメント]をご覧ください。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Logging with Native Image"
msgstr "ネイティブイメージでのロギング"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If you are using dependencies that require logging components such as Apache Commons Logging or Log4j and are experiencing a `ClassNotFoundException` when building the native executable, you can resolve this by excluding the logging library and adding the corresponding JBoss Logging adapter."
msgstr "Apache Commons Logging や Log4j などのロギングコンポーネントを必要とする依存関係を使用していて、ネイティブ実行可能ファイルをビルドする際に `ClassNotFoundException` が発生する場合、ロギングライブラリーを除外し、対応する JBoss Logging アダプターを追加することで解決できます。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more details please refer to the xref:logging.adoc#logging-adapters[Logging guide]."
msgstr "詳しくは、link:logging.html#logging-adapters[Loggingガイド] をご覧ください。"
