msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Using JWT RBAC"
msgstr "JWT RBAC の使用"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"This guide explains how to integrate link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] into your Quarkus application to implement link:https://tools.ietf.org/html/rfc7519[JSON Web Token (JWT)] security in compliance with the MicroProfile JWT specification.\n"
"You’ll learn how to verify JWTs, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`, and secure Quarkus HTTP endpoints using bearer token authorization and link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr "このガイドでは、 link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT ] をQuarkus アプリケーションに統合して、MicroProfile JWT 仕様に準拠した link:https://tools.ietf.org/html/rfc7519[JSON Web トークン（JWT）] セキュリティを実装する方法について説明します。JWTの検証方法、JWTをMicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` として表現する方法、およびベアラートークン認証と link:https://en.wikipedia.org/wiki/Role-based_access_control[ロールベースアクセス制御] を使用してQuarkus HTTPエンドポイントを保護する方法について説明します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The Quarkus OpenID Connect (`quarkus-oidc`) extension also supports bearer token authorization and uses `smallrye-jwt` to represent bearer tokens as `JsonWebToken`.\n"
"For details, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr "Quarkus OpenID Connect ( `quarkus-oidc` ) エクステンションはベアラートークンの認証にも対応しており、 `smallrye-jwt` を使用してベアラートークンを `JsonWebToken` として表現します。詳細については、 xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン認証] ガイドを参照してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If your Quarkus application needs to authenticate users using the OIDC Authorization Code Flow, you must use the OpenID Connect extension.\n"
"For more information, refer to the xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow Mechanism for Protecting Web Applications]."
msgstr "QuarkusアプリケーションでOIDC認可コードフローを使用してユーザーを認証する必要がある場合は、OpenID Connectエクステンションを使用する必要があります。詳細については、 xref:security-oidc-code-flow-authentication.adoc[Webアプリケーションを保護するためのOIDCコードフロー] メカニズムを参照してください。"

#. type: Title ==
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Quickstart"
msgstr "クイックスタート"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"We recommend following the instructions in the upcoming sections to create the application step by step.\n"
"If you prefer, you can skip ahead to the completed example."
msgstr "次のセクションの指示に従って、ステップ・バイ・ステップでアプリケーションを作成することをお勧めします。お望みであれば、完成した例まで読み飛ばすことができます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To access the example, either clone the Git repository or download an archive:"
msgstr "サンプルにアクセスするには、Gitリポジトリをクローンするか、アーカイブをダウンロードしてください："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Clone the repository: `git clone {quickstarts-clone-url}`."
msgstr "リポジトリのクローン: `git clone {quickstarts-clone-url}` ."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Download the {quickstarts-archive-url}[archive]."
msgstr "quickstarts-archive-url}[archive]をダウンロードしてください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The completed solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "完成したソリューションは、 `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリ] にあります。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "First, create a new project with the following command:"
msgstr "まず、以下のコマンドで新規プロジェクトを作成します:"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、{mp-jwt} サポートを含む `smallrye-jwt` エクステンションをインポートします。"

#: _versions/main/guides/security-jwt.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `smallrye-jwt` エクステンションを追加することができます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This command adds the following dependencies to your build file:"
msgstr "このコマンドは、ビルドファイルに以下の依存関係を追加します："

#. type: Block title
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "Jakarta REST リソースの調査"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr "RESTエンドポイントを `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` に以下の内容で作成します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "REST endpoint V1"
msgstr "RESTエンドポイントV1"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `JsonWebToken` interface is injected, providing access to claims associated with the current authenticated token. This interface extends `java.security.Principal`."
msgstr "`JsonWebToken` インタフェースが注入され、現在の認証済みトークンに関連付けられたクレームへのアクセスを提供します。このインターフェイスは `java.security.Principal` を継承しています。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `@PermitAll` is a standard Jakarta security annotation. It indicates that the given endpoint is accessible by all callers, whether authenticated or not."
msgstr "`@PermitAll` は、標準的な Jakarta セキュリティ注釈です。これは、認証の有無にかかわらず、指定されたエンドポイントにすべての呼び出し元がアクセスできることを示します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The Jakarta REST `SecurityContext` is injected to inspect the security state of the request. The `getResponseString()` function generates the response."
msgstr "Jakarta REST `SecurityContext` がリクエストのセキュリティ状態を検査するために注入されます。 `getResponseString()` 関数がレスポンスを生成します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Checks if the call is insecure by checking if the request user/caller `Principal` against null."
msgstr "リクエストユーザー/発信者 `Principal` がnullかどうかをチェックすることで、呼び出しが安全でないかどうかを調べます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Ensures the names in the `Principal` and `JsonWebToken` match because the `JsonWebToken` represents the current `Principal`."
msgstr "`JsonWebToken` が現在の `Principal` を表しているため、 `Principal` と `JsonWebToken` の名前が一致していることを確認。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Retrieves the name of the `Principal`."
msgstr "`Principal` の名前を取得します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Builds a response containing the caller's name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "呼び出し元の名前、リクエストの `isSecure()` と `getAuthenticationScheme()` の状態、 `SecurityContext` 、 `JsonWebToken` がnullでないかどうかを含む応答を構築します。"

#: _versions/main/guides/security-jwt.adoc
msgid "Run the application in dev mode"
msgstr "アプリケーションを開発モードで実行する"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Now, you are ready to run the application in dev mode by using one of the following commands:"
msgstr "これで、以下のコマンドのいずれかを使って、開発者モードでアプリケーションを実行する準備が整いました："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Then, you should see output similar to the following example:"
msgstr "すると、次の例のような出力が表示されるはずです："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`quarkus:dev` output"
msgstr "`quarkus:dev` 出力"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Now that the REST endpoint is running, you can access it by using a command line tool such as curl:"
msgstr "RESTエンドポイントが実行されているので、curlのようなコマンドラインツールを使ってアクセスすることができます："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`curl` command for `/secured/permit-all`"
msgstr "`curl` コマンド `/secured/permit-all`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This command returns the following response:"
msgstr "このコマンドは次のような応答を返します："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You have not provided any JWT in our request, so you would not expect the endpoint to see any security state, and the response is consistent with that:"
msgstr "あなたはリクエストでJWTを提供していないので、エンドポイントがセキュリティ状態を見ることは期待できないでしょう："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`username` is anonymous."
msgstr "`username` は匿名です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`isHttps` is `false` because `https` is not used."
msgstr "`isHttps` は が使われていないので、 。 `https` `false` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`authScheme` is `null`."
msgstr "`authScheme` は 。 `null`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`hasJWT` is `false`."
msgstr "`hasJWT` は 。 `false`"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "Ctrl-Cを使用してQuarkusサーバーを停止します。"

#: _versions/main/guides/security-jwt.adoc
msgid ""
"So now let's actually secure something.\n"
"Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "では実際に何かをセキュア化してみましょう。下記の新しいエンドポイントメソッド `helloRolesAllowed` を見てみましょう:"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "REST endpoint V2"
msgstr "RESTエンドポイントV2"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `JsonWebToken` is injected to access claims from the JWT."
msgstr "`JsonWebToken` は、JWT からクレームにアクセスするために注入されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This endpoint is exposed at `/secured/roles-allowed`."
msgstr "このエンドポイントは `/secured/roles-allowed` で公開されています。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `@RolesAllowed` annotation restricts access to users with either the \"User\" or \"Admin\" role."
msgstr "`@RolesAllowed` アノテーションは、「User」または「Admin」ロールを持つユーザーにアクセスを制限します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The response is constructed similarly to the `hello` method, with the addition of the `birthdate` claim retrieved directly from the injected `JsonWebToken`."
msgstr "レスポンスは `hello` の方法と同様に構築され、注入された `JsonWebToken` から直接取得された `birthdate` のクレームが追加されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr "`TokenSecuredResource` にこの追加を行った後、 `./mvnw quarkus:dev` コマンドを再実行してください。 `curl -v http://127.0.0.1:8080/secured/roles-allowed ; echo` 新しいエンドポイントへのアクセスを試みます。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Your output should be as follows:"
msgstr "出力は以下のようになるはずです:"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`curl` command for `/secured/roles-allowed`"
msgstr "`curl` コマンド `/secured/roles-allowed`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Excellent.\n"
"You did not provide a JWT in the request, so access to the endpoint was correctly denied.\n"
"Instead, you received an HTTP 401 Unauthorized error."
msgstr "素晴らしい。リクエストで JWT を提供していないため、エンドポイントへのアクセスは正しく拒否されました。代わりに、HTTP 401 Unauthorized エラーが発生しました。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To access the endpoint, you must obtain and include a valid JWT in your request. This involves two steps:"
msgstr "エンドポイントにアクセスするには、有効なJWTを取得してリクエストに含める必要があります。これには2つのステップがあります："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Configuring the {extension-name} extension with the necessary information to validate a JWT."
msgstr "JWTを検証するために必要な情報を{extension-name}拡張子に設定します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Generating a JWT with the appropriate claims to match the configuration."
msgstr "設定に一致する適切なクレームを持つJWTを生成します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Configuring the {extension-name} extension security information"
msgstr "拡張子名}のセキュリティ情報の設定"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "次の内容で `security-jwt-quickstart/src/main/resources/application.properties` を作成します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Application properties for `TokenSecuredResource`"
msgstr "アプリケーション特性 `TokenSecuredResource`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Specifies the location of the public key file `publicKey.pem` on the classpath.\n"
"See <<add-public-key>> for adding this key."
msgstr "公開鍵ファイル `publicKey.pem` の場所をクラスパスに指定します。この鍵の追加については <<add-public-key>> を参照してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Defines the expected issuer as `https://example.com/issuer`."
msgstr "予想される発行者を次のように定義します。 `https://example.com/issuer` ."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Ensures the `publicKey.pem` file is included as a resource in the native executable."
msgstr "`publicKey.pem` ファイルがネイティブ実行ファイルにリソースとして含まれるようにします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Adding a public key"
msgstr "公開鍵の追加"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The link:https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires JWTs signed with the RSA-256 signature algorithm.\n"
"This in turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr "link:https://tools.ietf.org/html/rfc7519[JWT] 仕様は、使用できるJWTの様々なセキュリティレベルを定義しています。mp-jwt}仕様では、RSA-256署名アルゴリズムで署名されたJWTが必要です。これには RSA 公開鍵ペアが必要です。RESTエンドポイントサーバー側では、リクエストと共に送信されるJWTを検証するために使用するRSA公開鍵の場所を設定する必要があります。先に設定した `mp.jwt.verify.publickey.location=publicKey.pem` 設定は、公開鍵がクラスパス上で `publicKey.pem` として利用可能であることを想定しています。これを実現するには、次の内容を `security-jwt-quickstart/src/main/resources/publicKey.pem` ファイルにコピーします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "RSA public key PEM content"
msgstr "RSA公開鍵PEMコンテンツ"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Generating a JWT"
msgstr "JWT の生成"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Often, one obtains a JWT from an identity manager such as link:https://www.keycloak.org/[Keycloak].\n"
"But for this quickstart, you generate our own by using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "多くの場合、 link:https://www.keycloak.org/[Keycloakの] ようなIDマネージャからJWTを取得します。しかし、このクイックスタートでは、 `smallrye-jwt` が提供するJWT生成APIを使用して独自のJWTを生成します。詳細については、「 xref:security-jwt-build.adoc[SmallRye JWTでJWTトークンを生成する] 」を参照してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Take the code from the following listing and place it into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "以下のコードを `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java` に入力してください："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`GenerateToken` main driver class"
msgstr "`GenerateToken` メインドライバクラス"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Sets the `iss` (issuer) claim in the JWT.\n"
"This value must match the server-side `mp.jwt.verify.issuer` configuration for the token to be considered valid."
msgstr "JWT の `iss` (issuer) claim を設定します。トークンが有効とみなされるためには、この値がサーバ側の `mp.jwt.verify.issuer` 設定と一致する必要があります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Specifies the `upn` (User Principal Name) claim, which the {mp-jwt} specification defines as the preferred claim for identifying the `Principal` in container security APIs."
msgstr "`upn` (User Principal Name)クレームを指定します。{mp-jwt} 仕様では、コンテナ・セキュリティ API で `Principal` を識別するために好ましいクレームとして定義されています。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Defines the `groups` claim, which provides the group memberships and top-level roles assigned to the JWT bearer."
msgstr "JWTベアラに割り当てられたグループメンバーシップとトップレベルのロールを提供する、 `groups` クレームを定義します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Adds a `birthdate` claim.\n"
"Because this can be considered sensitive information, consider encrypting claims as described in xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "`birthdate` クレームを追加します。これは機密情報とみなされる可能性があるため、 xref:security-jwt-build.adoc[SmallRye JWTでJWTトークンを生成する] で説明されているように、クレームを暗号化することを検討してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Note that for this code to work, you need the content of the RSA private key corresponding to the public key you have in the `TokenSecuredResource` application.\n"
"Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr "このコードを動作させるには、 `TokenSecuredResource` アプリケーションにある公開鍵に対応する RSA 秘密鍵のコンテンツが必要であることに注意してください。以下のPEMコンテンツを `security-jwt-quickstart/src/test/resources/privateKey.pem` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "RSA private key PEM content"
msgstr "RSA秘密鍵 PEMコンテンツ"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Later, you configure the `smallrye.jwt.sign.key.location` property to specify the location of the private signing key."
msgstr "後で、 `smallrye.jwt.sign.key.location` プロパティを構成して、秘密署名鍵の場所を指定します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Generating keys with OpenSSL"
msgstr "OpenSSLによる鍵の生成"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "It is also possible to generate a public and private key pair by using the OpenSSL command line tool."
msgstr "OpenSSLのコマンドラインツールを使って公開鍵と秘密鍵のペアを生成することも可能です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`openssl` commands to generate keys"
msgstr "`openssl` キーを生成するコマンド"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "An additional step is required to generate and convert the private key to the PKCS#8 format, commonly used for secure key storage and transport."
msgstr "秘密鍵を生成し、安全な鍵の保管と転送に一般的に使用される PKCS#8 形式に変換するために、追加のステップが必要です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`openssl` commands to perform the conversion"
msgstr "`openssl` 変換を実行するコマンド"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can use the generated key pair instead of those used in this quickstart."
msgstr "このクイックスタートで使用した鍵ペアの代わりに、生成された鍵ペアを使用することができます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Ensure the <<run-application, application is running>> before generating the JSON Web Token (JWT) for the `TokenSecuredResource` endpoint."
msgstr "`TokenSecuredResource` エンドポイントの JSON Web トークン（JWT）を生成する前に、 xref:run-application[アプリケーションが実行されている] ことを確認します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Next, use the following command to generate the JWT:"
msgstr "次に、以下のコマンドを使用してJWTを生成します："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Sample JWT generation output"
msgstr "JWT生成出力のサンプル"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The JWT string is a Base64 URL-encoded string consisting of three parts, separated by `.` characters:"
msgstr "JWT文字列は、 `.` 文字で区切られた3つの部分で構成されるBase64 URLエンコード文字列です："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The header, which contains metadata about the token, such as the signing algorithm."
msgstr "署名アルゴリズムなど、トークンに関するメタデータを含むヘッダー。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The payload, also called \"claims\", which includes the token's claims or data."
msgstr "ペイロードは「クレーム」とも呼ばれ、トークンのクレームやデータを含みます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The signature, which verifies the token's integrity."
msgstr "トークンの完全性を検証する署名。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Finally, secured access to `/secured/roles-allowed`"
msgstr "最後に、安全なアクセス `/secured/roles-allowed`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Now, let's use this to make a secured request to the `/secured/roles-allowed` endpoint.\n"
"Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr "では、これを使って `/secured/roles-allowed` エンドポイントにセキュアなリクエストを行ってみましょう。Quarkusサーバーがまだdevモードで動作していることを確認し、次のコマンドを実行します："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`curl` command for `/secured/roles-allowed` with JWT"
msgstr "`curl` JWT を使った コマンド `/secured/roles-allowed` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Make sure to use the generated token as the HTTP Authorization Bearer scheme value."
msgstr "生成されたトークンをHTTP Authorization Bearerスキーム値として使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Success! You now have the following:"
msgstr "成功です！これで以下のようになりました："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "A non-anonymous caller name: `jdoe@quarkus.io`"
msgstr "匿名でない発信者名： `jdoe@quarkus.io`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "An authentication scheme: `Bearer`"
msgstr "認証スキーム： `Bearer`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "A non-null `JsonWebToken`"
msgstr "ヌルでない `JsonWebToken`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `birthdate` claim value"
msgstr "`birthdate` 請求額"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Using the `JsonWebToken` and claim injection"
msgstr "`JsonWebToken` とクレーム・インジェクションの使用"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Now that you can generate a JWT to access our secured REST endpoints, let's see what more you can do with the `JsonWebToken` interface and the JWT claims.\n"
"The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal` interface, and is the object type returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call you used previously.\n"
"This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr "JWTを生成してセキュアなRESTエンドポイントにアクセスできるようになったので、 `JsonWebToken` インターフェースとJWTクレームを使ってさらに何ができるかを見てみましょう。 `org.eclipse.microprofile.jwt.JsonWebToken` インターフェースは `java.security.Principal` インターフェースを拡張したもので、以前使用した `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` 呼び出しによって返されるオブジェクト型です。これは、CDI を使用せず、REST コンテナ `SecurityContext` にアクセスできるコードは、 `SecurityContext#getUserPrincipal()` をキャストすることで、呼び出し元 `JsonWebToken` インタフェースを取得できることを意味します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification and arbitrary claims that might exist in the JWT."
msgstr "`JsonWebToken` インタフェースは、基礎となる JWT 内のクレームにアクセスするためのメソッドを定義します。これは{mp-jwt}仕様で要求される一般的なクレームと、JWTに存在するかもしれない任意のクレームのためのアクセサを提供します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint `/secured/roles-allowed-admin` which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr "すべてのJWTクレームは注入することもできます。注入された `birthdate` クレームを使う別のエンドポイント `/secured/roles-allowed-admin` で `TokenSecuredResource` を拡張してみましょう（ `JsonWebToken` から取得するのとは対照的です）："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `@RequestScoped` scope is required to enable injection of the `birthdate` claim as a `String`."
msgstr "`@RequestScoped` の範囲は、 `birthdate` のクレームを `String` として注入できるようにするために必要です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `JsonWebToken` is injected here, providing access to all claims and JWT-related information."
msgstr "`JsonWebToken` がここに注入され、すべてのクレームとJWT関連情報へのアクセスを提供します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `birthdate` claim is injected as a `String`. This highlights why the `@RequestScoped` scope is mandatory."
msgstr "`birthdate` クレームは、 `String` として挿入されます。このことは、 `@RequestScoped` のスコープが必須である理由を浮き彫りにしています。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The injected `birthdate` claim is directly used to construct the response."
msgstr "注入された `birthdate` クレームは、レスポンスの構築に直接使用されます。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Now generate the token again and run:"
msgstr "次に、トークンを再度生成して実行します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the application in JVM mode"
msgstr "JVMモードでアプリケーションを実行"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can run the application as a standard Java application."
msgstr "標準的なJavaアプリケーションとして実行できます。"

#: _versions/main/guides/security-jwt.adoc
msgid "Compile the application:"
msgstr "アプリケーションをコンパイルします:"

#: _versions/main/guides/security-jwt.adoc
msgid "CLI"
msgstr "コマンドラインインタフェース"

#: _versions/main/guides/security-jwt.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/main/guides/security-jwt.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/main/guides/security-jwt.adoc
msgid "Run the application:"
msgstr "アプリケーションの実行:"

#: _versions/main/guides/security-jwt.adoc
msgid "Run the application in native mode"
msgstr "ネイティブ・モードでアプリケーションを実行"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"You can compile this same demo into native mode without any modifications.\n"
"This implies that you no longer need to install a JVM on your production environment.\n"
"The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr "この同じデモを、何の修正も加えることなくネイティブ・モードにコンパイルすることができます。これは、本番環境にJVMをインストールする必要がないことを意味します。ランタイム・テクノロジーは生成されたバイナリに含まれており、必要最小限のリソースで実行できるように最適化されています。"

#: _versions/main/guides/security-jwt.adoc
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr "コンパイルには少し時間がかかるため、この手順はデフォルトで無効になっています。"

#: _versions/main/guides/security-jwt.adoc
msgid "Build your application again by enabling the `native` profile:"
msgstr "`native` プロファイルを有効にして、アプリケーションを再度ビルドします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the following binary directly:"
msgstr "以下のバイナリを直接実行してください："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Explore the solution"
msgstr "解決策を探る"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] repository contains all the versions covered in this quickstart guide, along with additional endpoints that demonstrate subresources using injected `JsonWebToken` tokens and their claims via CDI APIs."
msgstr "`security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[ディレクトリリポジトリには] 、このクイックスタートガイドで取り上げたすべてのバージョンと、注入された `JsonWebToken` トークンを使用したサブリソースと CDI API を介したその主張を示す追加のエンドポイントが含まれています。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "We encourage you to explore the `security-jwt-quickstart` directory and review the quickstart solutions to learn more about the features of the {extension-name} extension."
msgstr "`security-jwt-quickstart` ディレクトリを探索し、クイックスタート ソリューションを確認して、{extension-name} 拡張モジュールの機能についてさらに学ぶことをお勧めします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Reference guide"
msgstr "リファレンスガイド"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Supported injection scopes"
msgstr "サポートされる注入スコープ"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr "`org.eclipse.microprofile.jwt.JsonWebToken` が注入される場合、`@ApplicationScoped`、`@Singleton`、および `@RequestScoped` の外部 Bean 注入スコープがすべてサポートされます。また、現在のトークンが示されていることを確認するために、`JsonWebToken` の `@RequestScoped` スコープが適用されます。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr "ただし、個々のトークンクレームが `String` などの単純な型として挿入される場合は、`@RequestScoped` を使用する必要があります。以下はその例です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims, but setting `@RequestScoped` is unnecessary in this case."
msgstr "注入された `JsonWebToken` を使って個々のクレームにアクセスすることもできますが、この場合 `@RequestScoped` の設定は不要であることに注意してください。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr "詳細については、 link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI 注入要件] を参照してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Supported public key formats"
msgstr "対応公開鍵フォーマット"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Public keys can be formatted in any of the following formats, specified in order of precedence:"
msgstr "公開鍵の書式は、優先順位の高いものから順に、以下のいずれか："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "Public Key Cryptography Standards #8 (PKCS#8) PEM"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key (JWK)"
msgstr "JSON Web Key (JWK)"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS)"
msgstr "JSON Web Key Set (JWKS)"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "JSON Web Key (JWK) Base64 URL エンコード"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "JSON Web Key Set (JWKS) Base64 URL エンコード"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Dealing with verification keys"
msgstr "検証キーの取り扱い"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you need to verify the token signature by using the asymmetric RSA or Elliptic Curve (EC) key, use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr "非対称 RSA または楕円曲線（EC）キーを使用してトークン署名を検証する必要がある場合は、 `mp.jwt.verify.publickey.location` プロパティを使用して、ローカルまたはリモートの検証キーを参照します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`); for example, set it to `ES256` when working with the EC keys."
msgstr "`ES256` 検証アルゴリズムをカスタマイズするには、 `mp.jwt.verify.publickey.algorithm` を使用します（デフォルトは `RS256` ）。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you need to verify the token signature by using the symmetric secret key, then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr "対称秘密鍵を使用してトークン署名を検証する必要がある場合は、この秘密鍵を表すために、 `JSON Web Key` （JWK）または `JSON Web Key Set` （JWK Set）形式を使用する必要があります："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"This secret key JWK must also be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr "この秘密鍵 JWK は、 `smallrye.jwt.verify.key.location` でも参照する必要があります。 `smallrye.jwt.verify.algorithm` は、 `HS256` / `HS384` / `HS512` に設定する必要があります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Parse and verify `JsonWebToken` with `JWTParser`"
msgstr "で `JsonWebToken` を解析し、検証します。 `JWTParser`"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "JWT トークンを挿入できない場合、たとえば、サービスリクエストペイロードに埋め込まれていたり、サービスエンドポイントが帯域外でトークンを取得する場合、`JWTParser` を使用できます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"You can also use it to customize how the token is verified or decrypted.\n"
"For example, one can supply a local `SecretKey`:"
msgstr "また、トークンの検証方法や復号化方法をカスタマイズすることもできます。例えば、ローカルの `SecretKey` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Please also see the <<add-smallrye-jwt,How to Add SmallRye JWT directly>> section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr "`quarkus-smallrye-jwt` が提供する `HTTP` サポートを使用せずに `JWTParser` を使用する方法については、「 xref:add-smallrye-jwt[SmallRye JWT を直接追加する方法] 」のセクションも参照してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Token decryption"
msgstr "トークンの復号化"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If your application needs to accept tokens with encrypted claims or encrypted inner-signed claims, simply set the `smallrye.jwt.decrypt.key.location` property to point to the decryption key."
msgstr "アプリケーションが暗号化されたクレームまたは暗号化された内部署名付きのクレームを持つトークンを受け入れる必要がある場合は、 `smallrye.jwt.decrypt.key.location` プロパティを設定して復号化キーを指すようにするだけです。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If this is the only key property set, the incoming token is expected to contain only encrypted claims.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set, then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "この鍵プロパティのみが設定されている場合、受信トークンには暗号化されたクレームのみが含まれます。 `mp.jwt.verify.publickey` または `mp.jwt.verify.publickey.location` 検証プロパティも設定されている場合、受信トークンには暗号化された内部署名トークンが含まれることが期待されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens quickly."
msgstr "xref:security-jwt-build.adoc[SmallRye JWTでJWTトークンを生成する] 」を参照して、暗号化または内部署名後に暗号化されたトークンを迅速に生成する方法を学んでください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Custom factories"
msgstr "カスタム工場"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is the default implementation used to parse and verify JWT tokens, converting them into `JsonWebToken` principals. This factory relies on the `MP JWT` and `smallrye-jwt` properties, as described in the `Configuration` section, to validate and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` は、JWT トークンを解析および検証し、 `JsonWebToken` プリンシパルに変換するために使用されるデフォルトの実装です。このファクトリーは、 `Configuration` セクションで説明されているように、 `MP JWT` と `smallrye-jwt` プロパティに依存して、JWT トークンを検証しカスタマイズします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you need to implement a custom factory—such as to skip re-verifying tokens that have already been validated by a firewall—you can do so in one of the following ways:"
msgstr "ファイアウォールで検証済みのトークンの再検証をスキップするなど、カスタムファクトリを実装する必要がある場合は、以下のいずれかの方法で実装できます："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Use the `ServiceLoader` mechanism by creating a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource."
msgstr "`META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` リソースを作成し、 `ServiceLoader` メカニズムを使用します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Provide an `Alternative` CDI bean implementation, like the example below:"
msgstr "以下の例のように、 `Alternative` CDIビーン実装を提供します："

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Blocking calls"
msgstr "ブロッキング呼出"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "`quarkus-smallrye-jwt` extension uses link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] library which is currently not reactive."
msgstr "`quarkus-smallrye-jwt` エクステンションでは、現在リアクティブではない link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] ライブラリを使用します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "What it means from the perspective of `quarkus-smallrye-jwt`, which operates as part of the reactive Quarkus security architecture, is that an IO thread entering the link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] verification or decryption code might block in one of the following cases:"
msgstr "リアクティブなQuarkusセキュリティ・アーキテクチャの一部として動作する `quarkus-smallrye-jwt` の観点からは、 link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] 検証または復号化コードに入るIOスレッドが、以下のいずれかのケースでブロックされる可能性があるということです："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The default key resolver refreshes the `JsonWebKey` set containing the keys, which involves a remote call to the OIDC endpoint."
msgstr "デフォルトのキー・リゾルバは、OIDCエンドポイントへのリモート・コールを伴う、キーを含む `JsonWebKey` セットをリフレッシュします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The custom key resolver, such as `AWS Application Load Balancer` (`ALB`) key resolver, resolves the keys against the AWS ALB key endpoint by using the current token's key identifier header value."
msgstr "`AWS Application Load Balancer` ( `ALB` ) キーリゾルバなどのカスタムキーリゾルバは、現在のトークンのキー識別子のヘッダ値を使用して、AWS ALB キーエンドポイントに対してキーを解決します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "In such cases, if connections are slow—for instance, taking more than 3 seconds to respond to the key endpoint—the current event loop thread is likely to become blocked."
msgstr "このような場合、接続が遅い場合（例えば、キーエンドポイントへの応答に3秒以上かかる場合）、現在のイベントループスレッドがブロックされる可能性が高くなります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To prevent it from blocking, set `quarkus.smallrye-jwt.blocking-authentication=true`."
msgstr "ブロックされないようにするには、 `quarkus.smallrye-jwt.blocking-authentication=true` を設定します。"

#: _versions/main/guides/security-jwt.adoc
msgid "Token propagation"
msgstr "トークンの伝播"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Please see the xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "下流サービスへのベアラ・アクセストークンの伝播については、「 xref:security-openid-connect-client-reference.adoc#token-propagation-rest[トークンの伝播] 」のセクションを参照してください。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Testing"
msgstr "テスト"

#. type: Title ====
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "HTTPS または HTTP ベースの JsonWebKey (JWK) セットを指すように `mp.jwt.verify.publickey.location` を設定する場合は、 xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` のセクションで説明したのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティを使用するように `application.properties` を変更するだけです："

#. type: Title ====
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "Keycloak と連携し、 `mp.jwt.verify.publickey.location` を HTTPS または HTTP ベースの JsonWebKey (JWK) セットを指すように設定する場合、 xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak セクションで説明したのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティを使用するように `application.properties` を変更するだけです："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr "Keycloakが発行したトークンは、レルムエンドポイントアドレスが `iss` （発行者）クレームに設定されていることに注目してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If your Quarkus application runs in a Docker container, it might share a network interface with a Keycloak container started by DevServices for Keycloak.\n"
"In this scenario, the Quarkus application and Keycloak communicate through an internal shared Docker network."
msgstr "QuarkusアプリケーションがDockerコンテナで実行されている場合、DevServices for Keycloakによって起動されたKeycloakコンテナとネットワークインターフェースを共有している可能性があります。このシナリオでは、QuarkusアプリケーションとKeycloakはDockerの内部共有ネットワークを通じて通信します。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "In such cases, use the following configuration instead:"
msgstr "そのような場合は、代わりに以下のような設定にしてください。"

#: _versions/main/guides/security-jwt.adoc
msgid "Local public key"
msgstr "ローカル公開鍵"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Local public key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Local public key` のセクションで説明したのと同じアプローチを使用できますが、代わりに MP JWT 設定プロパティを使用するように `application.properties` を変更するだけです："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`TestSecurity` annotation"
msgstr "`TestSecurity` 注釈"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Add the following dependency:"
msgstr "次の依存関係を追加します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Then, write test code such as this:"
msgstr "そして、次のようなテストコードを書きます："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "where the `ProtectedResource` class might look like this:"
msgstr "`ProtectedResource` クラスは次のようになります："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Note that the `@TestSecurity` annotation must always be used, and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr "`@TestSecurity` `@JwtSecurity` アノテーションは常に使用する必要があり、その プロパティは として、 プロパティは として返されることに注意してください。 `user` `JsonWebToken.getName()` `roles` `JsonWebToken.getGroups()`"

#. type: delimited block =
#: _versions/main/guides/security-jwt.adoc
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr "`@TestSecurity` と `@JwtSecurity` は、次のようにメタアノテーションで組み合わせることができます："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "これは、同じセキュリティ設定のセットを複数のテストメソッドで使用する必要がある場合に特に便利です。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "How to check the errors in the logs"
msgstr "ログでエラーを確認する方法"

#. type: delimited block =
#: _versions/main/guides/security-jwt.adoc
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr "トークンの検証または復号化エラーの詳細を確認するには、`io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` レベルのログを有効にしてください。"

#: _versions/main/guides/security-jwt.adoc
msgid "Proactive authentication"
msgstr "プロアクティブ認証"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr "パブリックエンドポイントメソッド呼び出し時のトークン検証を省略したい場合は、 xref:security-proactive-authentication.adoc[プロアクティブ認証] を無効にします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Note that you can't access the injected `JsonWebToken` through public methods if token verification has not been done."
msgstr "トークン検証が行われていない場合、注入された `JsonWebToken` にパブリック・メソッドからアクセスすることはできないことに注意してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "How to add SmallRye JWT directly"
msgstr "SmallRye JWTを直接追加する方法"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To <<jwt-parser,parse and verify JsonWebToken with JWTParser>>, use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr "xref:jwt-parser[JWTParser で JsonWebToken をパースして検証] するには、 `quarkus-smallrye-jwt` の代わりに `smallrye-jwt` を使用してください："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr "`HTTP` をサポートしていないQuarkusエクステンション、例えば `Quarkus GRPC` などを使用している場合。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus AWS Lambda`."
msgstr "あなたはエクステンション固有の `HTTP` を提供しますが、そのサポートは `quarkus-smallrye-jwt` や `Vert.x HTTP` が提供する `Quarkus AWS Lambda` などのサポートと競合します。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr "まず、 `smallrye-jwt` の依存関係を追加することから始めます:"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Then, update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr "次に、 `application.properties` を更新して、 `smallrye-jwt` が提供するすべてのCDIプロデューサーを以下のように含めます："

#: _versions/main/guides/security-jwt.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Quarkus configuration"
msgstr "Quarkus の設定"

#: _versions/main/guides/security-jwt.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "MicroProfile JWT configuration"
msgstr "MicroProfile JWT の設定"

#: _versions/main/guides/security-jwt.adoc
msgid "Property Name"
msgstr "プロパティ名"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Default"
msgstr "デフォルト"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Description"
msgstr "説明"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.publickey`"
msgstr "`mp.jwt.verify.publickey`"

#: _versions/main/guides/security-jwt.adoc
msgid "none"
msgstr "none"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `mp.jwt.verify.publickey` config property allows the public key text to be supplied as a string. The public key is parsed from the supplied string in the order defined in the <<supported-public-key-formats>> section."
msgstr "`mp.jwt.verify.publickey` 構成プロパティでは、公開鍵テキストを文字列として指定できます。公開鍵は、 <<supported-public-key-formats>> セクションで定義された順序で、提供された文字列から解析されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.publickey.location`"
msgstr "`mp.jwt.verify.publickey.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property allows for a specified external or internal location of the public key. The value can be a relative path or a URL. If the value points to an HTTPS-based JWK set, then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`. See xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr "設定プロパティでは、公開鍵の外部または内部の場所を指定できます。この値には、相対パスまたは URL を指定できます。値が HTTPS ベースの JWK セットを指す場合、ネイティブ・モードで動作させるには、 `quarkus.ssl.native` プロパティも `true` に設定する必要があります。 詳細は、「 xref:native-and-ssl.adoc[ネイティブ実行可能ファイルで SSL を使用する] 」を参照してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.publickey.algorithm`"
msgstr "`mp.jwt.verify.publickey.algorithm`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`RS256`"
msgstr "`RS256`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "List of signature algorithms. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "署名アルゴリズムのリスト。楕円曲線署名アルゴリズムをサポートするには、 `ES256` に設定します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.decrypt.key.location`"
msgstr "`mp.jwt.decrypt.key.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property allows for a specified external or internal location of the Private Decryption Key."
msgstr "設定プロパティでは、秘密復号鍵の外部または内部の場所を指定できます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.decrypt.key.algorithm`"
msgstr "`mp.jwt.decrypt.key.algorithm`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`RSA-OAEP`,`RSA-OAEP-256`"
msgstr "`RSA-OAEP` , `RSA-OAEP-256`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "List of decryption algorithms. Set it to `RSA-OAEP-256` to support RSA-OAEP with SHA-256 only."
msgstr "復号アルゴリズムのリスト。SHA-256を使用したRSA-OAEPのみをサポートするには、 `RSA-OAEP-256` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.issuer`"
msgstr "`mp.jwt.verify.issuer`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server accepts as valid."
msgstr "Config プロパティは、サーバーが有効として受け入れる JWT の `iss` (発行者) クレームの値を指定します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.audiences`"
msgstr "`mp.jwt.verify.audiences`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list of audiences a token `aud` claim might contain."
msgstr "カンマで区切られた、トークン `aud` のクレームに含まれる可能性のあるオーディエンスのリスト。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.clock.skew`"
msgstr "`mp.jwt.verify.clock.skew`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`60`"
msgstr "`60`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr "トークンの有効期限と年齢確認時に使用されるクロックスキュー（秒）。トークンの有効期限切れ後、現在時刻がこのプロパティで指定された秒数以内であれば、期限切れのトークンは受理されます。デフォルト値は60秒です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.token.age`"
msgstr "`mp.jwt.verify.token.age`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr "トークン発行時刻 `iat` から経過してはならない秒数です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.token.header`"
msgstr "`mp.jwt.token.header`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`Authorization`"
msgstr "`Authorization`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property if another header, such as `Cookie`, is used to pass the token."
msgstr "`Cookie` などの別のヘッダがトークンの受け渡しに使用される場合は、このプロパティを設定します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.token.cookie`"
msgstr "`mp.jwt.token.cookie`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Name of the cookie containing a token. This property is effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr "トークンを含むクッキーの名前。このプロパティは、 `mp.jwt.token.header` が `Cookie` に設定されている場合にのみ有効です。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Additional SmallRye JWT configuration"
msgstr "追加の SmallRye JWT 設定"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "SmallRye JWT provides more properties that can be used to customize the token processing:"
msgstr "SmallRye JWTには、トークン処理をカスタマイズするために使用できるプロパティがさらに用意されています："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.secretkey`"
msgstr "`smallrye.jwt.verify.secretkey`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Secret key supplied as a string."
msgstr "文字列として与えられる秘密鍵。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.key.location`"
msgstr "`smallrye.jwt.verify.key.location`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "NONE"
msgstr "NONE"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Location of the verification key, which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' is ignored if this property is set."
msgstr "公開鍵と秘密鍵の両方を指すことができます。秘密鍵は JWK 形式のみです。このプロパティが設定されている場合、'mp.jwt.verify.publickey.location' は無視されることに注意してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.algorithm`"
msgstr "`smallrye.jwt.verify.algorithm`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Signature algorithm. This property should only be used to set a symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr "署名アルゴリズム。このプロパティは、 `HS256` のような対称アルゴリズムを設定するためだけに使用されるべきです。 `ES256` 代わりに 'mp.jwt.verify.publickey.algorithm' を使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.key-format`"
msgstr "`smallrye.jwt.verify.key-format`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`ANY`"
msgstr "`ANY`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "このプロパティーを `PEM_KEY`、`PEM_CERTIFICATE`、`JWK`、`JWK_BASE64URL` などの特定のキー鍵形式に設定して、検証鍵のロード方法を最適化します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.key-provider`"
msgstr "`smallrye.jwt.verify.key-provider`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`DEFAULT`"
msgstr "`DEFAULT`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "By default, PEM, JWK, or JWK key sets can be read from the local file system or fetched from URIs as required by MicroProfile JWT specification. Set this property to `AWS_ALB` to support an AWS Application Load Balancer verification key resolution."
msgstr "デフォルトでは、PEM、JWK、または JWK キーセットは、ローカルファイルシステムから読み取るか、MicroProfile JWT 仕様で要求される URI から取得できます。AWS Application Load Balancer の検証キー解決をサポートするには、このプロパティを `AWS_ALB` に設定します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.relax-key-validation`"
msgstr "`smallrye.jwt.verify.relax-key-validation`"

#: _versions/main/guides/security-jwt.adoc
msgid "false"
msgstr "false"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Relax the validation of the verification keys; setting this property to `true` allows public RSA keys with a length of less than 2048 bits."
msgstr "このプロパティを `true` に設定すると、2048 ビット未満の長さの RSA 公開鍵が許可されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.certificate-thumbprint`"
msgstr "`smallrye.jwt.verify.certificate-thumbprint`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If this property is enabled, a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats. JWK keys must have an 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "このプロパティが有効な場合、署名済みトークンには、'x5t' または 'x5t#S256' X509Certificate thumbprint ヘッダーのいずれかが含まれている必要があります。検証キーは、JWK または PEM 証明書キー形式のみとなります。JWK 鍵には、「x5c」（Base64 エンコード X509Certificate）プロパティが設定されている必要があります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.header`"
msgstr "`smallrye.jwt.token.header`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property if another header, such as `Cookie`, is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr "トークンを渡すために `Cookie` のような他のヘッダが使用される場合、このプロパティを設定します。このプロパティは非推奨です - 'mp.jwt.token.header' を使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.key-cache-size`"
msgstr "`smallrye.jwt.key-cache-size`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`100`"
msgstr "`100`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Key cache size. Use this property and `smallrye.jwt.key-cache-time-to-live` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "鍵キャッシュのサイズ。 `AWS_ALB` のような鍵プロバイダが、鍵を動的に解決するために `smallrye.jwt.verify.key-provider=AWS_ALB` で構成されている場合、鍵キャッシュを制御するには、このプロパティと `smallrye.jwt.key-cache-time-to-live` を使用します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.key-cache-time-to-live`"
msgstr "`smallrye.jwt.key-cache-time-to-live`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`10`"
msgstr "`10`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Key cache entry time-to-live in minutes. Use this property and `smallrye.jwt.key-cache-size` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "キー・キャッシュ・エントリーの有効期限を分単位で指定。キーを動的に解決するために `AWS_ALB` のようなキー・プロバイダが `smallrye.jwt.verify.key-provider=AWS_ALB` で構成されている場合、キー・キャッシュを制御するには、このプロパティと `smallrye.jwt.key-cache-size` を使用します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.cookie`"
msgstr "`smallrye.jwt.token.cookie`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Name of the cookie containing a token. This property is effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use `mp.jwt.token.cookie`."
msgstr "トークンを含むクッキーの名前。このプロパティは、 `smallrye.jwt.token.header` が `Cookie` に設定されている場合にのみ有効です。 このプロパティは非推奨です - `mp.jwt.token.cookie` を使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.always-check-authorization`"
msgstr "`smallrye.jwt.always-check-authorization`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property to `true` for the `Authorization` header to be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "このプロパティを `true` に設定すると、 `smallrye.jwt.token.header` が `Cookie` に設定されていても、 `smallrye.jwt.token.cookie` の名前を持つクッキーが存在しない場合でも、 `Authorization` ヘッダがチェックされます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.schemes`"
msgstr "`smallrye.jwt.token.schemes`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list containing alternative single or multiple schemes, such as `DPoP`."
msgstr "カンマ区切りのリストには、 `DPoP` のような単一または複数の代替スキームが含まれます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.kid`"
msgstr "`smallrye.jwt.token.kid`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Key identifier. The verification JWK key and every JWT token must have a matching `kid` header if it is set."
msgstr "鍵識別子。検証 JWK キーとすべての JWT トークンは、 `kid` ヘッダが設定されていれば、それに一致する必要があります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.time-to-live`"
msgstr "`smallrye.jwt.time-to-live`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The maximum number of seconds a JWT can be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr "JWTを使用するために発行できる最大秒数。事実上、JWTの有効期限と発行日時の差はこの値を超えてはなりません。このプロパティに正でない値を設定すると、トークンが有効な「iat」（issued at）クレームを持つという要件が緩和されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.require.named-principal`"
msgstr "`smallrye.jwt.require.named-principal`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`true`"
msgstr "`true`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If an application relies on `java.security.Principal` returning a name, then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property results in SmallRye JWT throwing an exception if none of these claims is available for the application code to deal with a non-null `Principal` name reliably."
msgstr "アプリケーションが名前を返す `java.security.Principal` に依存する場合、トークンには `upn` または `preferred_username` または `sub` のクレームが設定されている必要があります。このプロパティを設定すると、SmallRye JWTは、アプリケーション・コードが非NULL `Principal` 名を確実に処理するために、これらのクレームのいずれも利用できない場合に例外をスローします。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.path.sub`"
msgstr "`smallrye.jwt.path.sub`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Path to the claim containing the subject name. It starts from the top-level JSON object and can contain multiple segments where each segment only represents a JSON object name, for example, `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr "サブジェクト名を含むクレームへのパス。トップレベルの JSON オブジェクトから始まり、複数のセグメントを含むことができます。各セグメントは、JSON オブジェクト名のみを表します。例えば、 `realms/subject` 。このプロパティは、トークンに 'sub' クレームがなく、別のクレームにサブジェクトが設定されている場合に使用で きます。名前空間修飾されたクレームには二重引用符を使用します。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.claims.sub`"
msgstr "`smallrye.jwt.claims.sub`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively, this property can be used to customize the `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "このプロパティは、現在のトークンに利用可能な標準またはカスタムの `sub` クレームがない場合に、デフォルトのサブクレーム値を設定できます。事実上、このプロパティは、 `upn` 、 `preferred_username` 、 `sub` クレームが設定されていない場合に、 `java.security.Principal` 名をカスタマイズするために使用できます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.path.groups`"
msgstr "`smallrye.jwt.path.groups`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Path to the claim containing the groups. It starts from the top-level JSON object and can contain multiple segments where each segment represents a JSON object name only, for example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr "グループを含むクレームへのパス。トップレベルのJSONオブジェクトから始まり、複数のセグメントを含むことができます。各セグメントはJSONオブジェクト名のみを表します。例えば、 `realm/groups` 。このプロパティは、トークンに'groups'クレームがなく、別のクレームにグループが設定されている場合に使用できます。名前空間修飾されたクレームは二重引用符で囲んでください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.groups-separator`"
msgstr "`smallrye.jwt.groups-separator`"

#: _versions/main/guides/security-jwt.adoc
msgid "space"
msgstr "space"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Separator for splitting a string which might contain multiple group values. It is only used if the `smallrye.jwt.path.groups` property points to a custom claim with a string value. The default value is a single space because a standard OAuth2 `scope` claim might contain a space-separated sequence."
msgstr "複数のグループ値を含む可能性のある文字列を分割するためのセパレータ。これは、 `smallrye.jwt.path.groups` プロパティが文字列値を持つカスタムクレームを指している場合にのみ使用されます。標準的な OAuth2 `scope` クレームには、スペースで区切られたシーケンスが含まれる可能性があるため、デフォルト値は単一のスペースです。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.claims.groups`"
msgstr "`smallrye.jwt.claims.groups`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "このプロパティは、現在のトークンに標準またはカスタムのグループクレームがない場合に、デフォルトのグループクレーム値を設定することができます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.jwks.refresh-interval`"
msgstr "`smallrye.jwt.jwks.refresh-interval`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "60"
msgstr "60"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "JWK cache refresh interval in minutes. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr "分単位の JWK キャッシュ更新間隔。 `mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指していて、JWK HTTPS エンドポイントから正の `max-age` パラメータ値を持つ HTTP `Cache-Control` 応答ヘッダが返されない限り、これは無視されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.jwks.forced-refresh-interval`"
msgstr "`smallrye.jwt.jwks.forced-refresh-interval`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "30"
msgstr "30"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Forced JWK cache refresh interval in minutes, which is used to restrict the frequency of the forced refresh attempts that might happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set."
msgstr "これは、現在のトークンの `kid` ヘッダと一致する `kid` プロパティを持つ JWK キーがキャッシュにないためにトークン検証が失敗した場合に、強制的にリフレッシュを試みる頻度を制限するために使用されます。これは、 `mp.jwt.verify.publickey.location` が HTTP または HTTPS URL ベースの JWK セットを指していない限り無視されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.expiration.grace`"
msgstr "`smallrye.jwt.expiration.grace`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "0"
msgstr "0"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Expiration grace in seconds. By default, an expired token is still accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr "有効期限を秒単位で指定します。デフォルトでは、現在時刻がトークンの有効期限から1分以上経過していない場合、期限切れのトークンはまだ受け入れられます。このプロパティは非推奨です。代わりに `mp.jwt.verify.clock.skew` を使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.aud`"
msgstr "`smallrye.jwt.verify.aud`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list of audiences a token `aud` claim might contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr "カンマで区切られた、トークン `aud` クレームに含まれる可能性のあるオーディエンスのリスト。このプロパティは非推奨です - `mp.jwt.verify.audiences` を使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.required.claims`"
msgstr "`smallrye.jwt.required.claims`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list of the claims a token must contain."
msgstr "トークンが含まなければならないクレームのカンマ区切りリスト。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.decrypt.key.location`"
msgstr "`smallrye.jwt.decrypt.key.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property to specify the external or internal location of Private Decryption Key. This property is deprecated - use `mp.jwt.decrypt.key.location`."
msgstr "秘密復号鍵の外部または内部の場所を指定するための設定プロパティです。このプロパティは非推奨です - `mp.jwt.decrypt.key.location` を使用してください。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.decrypt.algorithm`"
msgstr "`smallrye.jwt.decrypt.algorithm`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`RSA_OAEP`"
msgstr "`RSA_OAEP`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption algorithm."
msgstr "復号化アルゴリズム。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.decrypt.key`"
msgstr "`smallrye.jwt.decrypt.key`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption key supplied as a string."
msgstr "文字列として提供される復号化キー。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.decryption.kid`"
msgstr "`smallrye.jwt.token.decryption.kid`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "復号化キー識別子。設定されている場合、復号化 JWK キーとすべての JWT トークンには、一致する `kid` ヘッダーが必要です。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.client.tls.certificate.path`"
msgstr "`smallrye.jwt.client.tls.certificate.path`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Path to TLS trusted certificate which might need to be configured if the keys have to be fetched over `HTTPS`."
msgstr "TLS 信頼済み証明書へのパス。これは、鍵を `HTTPS` 経由で取得する必要がある場合に設定する必要があります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.client.tls.trust-all`"
msgstr "`smallrye.jwt.client.tls.trust-all`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr "すべてのホスト名を信頼します。キーを `HTTPS` 経由でフェッチする必要があり、このプロパティーが `true` に設定されている場合、デフォルトですべてのホスト名が信頼されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.client.tls.hosts`"
msgstr "`smallrye.jwt.client.tls.hosts`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr "信頼できるホスト名のセット。キーを `HTTPS` 経由でフェッチする必要があり、`smallrye.jwt.client.tls.trust-all` が `false` に設定されている場合、このプロパティーを使用して信頼できるホスト名を設定できます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.http.proxy.host`"
msgstr "`smallrye.jwt.http.proxy.host`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy host."
msgstr "HTTP プロキシーホスト。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.http.proxy.port`"
msgstr "`smallrye.jwt.http.proxy.port`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "80"
msgstr "80"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy port."
msgstr "HTTP プロキシーポート。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.type`"
msgstr "`smallrye.jwt.keystore.type`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`JKS`"
msgstr "`JKS`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set, the file name is checked to determine the keystore type before defaulting to `JKS`."
msgstr "このプロパティは、 `mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` のいずれかが `KeyStore` ファイルを指している場合に、キーストア・タイプをカスタマイズするために使用できます。設定されていない場合は、ファイル名をチェックしてキーストア・タイプを決定してから、デフォルトの `JKS` に設定されます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.provider`"
msgstr "`smallrye.jwt.keystore.provider`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "`mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指している場合、このプロパティーを使用して `KeyStore` プロバイダーをカスタマイズできます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.password`"
msgstr "`smallrye.jwt.keystore.password`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location`, this property must be set."
msgstr "キーストアのパスワード。 `mp.jwt.verify.publickey.location` または `mp.jwt.decrypt.key.location` の場合、このプロパティを設定する必要があります。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.verify.key.alias`"
msgstr "`smallrye.jwt.keystore.verify.key.alias`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property has to be set to identify a public verification key which is extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `mp.jwt.verify.publickey.location` が `KeyStore` ファイルを指している場合、一致する証明書から `KeyStore` から抽出される公開検証鍵を識別するために設定されなければなりません。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.decrypt.key.alias`"
msgstr "`smallrye.jwt.keystore.decrypt.key.alias`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.decrypt.key.password`"
msgstr "`smallrye.jwt.keystore.decrypt.key.password`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can be set if a private decryption key's password in `KeyStore` is different from `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `mp.jwt.decrypt.key.location` が `KeyStore` ファイルを指しているとき、 `KeyStore` の秘密復号鍵のパスワードが `smallrye.jwt.keystore.password` と異なる場合に設定できます。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.resolve-remote-keys-at-startup`"
msgstr "`smallrye.jwt.resolve-remote-keys-at-startup`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property to true to resolve the remote keys at the application startup."
msgstr "アプリケーション起動時にリモート・キーを解決するには、このプロパティをtrueに設定します。"

#. type: Title ==
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "References"
msgstr "リファレンス"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[認証メカニズムの組み合わせ]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
