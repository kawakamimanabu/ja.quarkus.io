msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _versions/main/guides/security-proactive-authentication.adoc
#, no-wrap
msgid "Proactive authentication"
msgstr "プロアクティブ認証"

#: _versions/main/guides/security-proactive-authentication.adoc
msgid ""
"Learn how to manage proactive authentication in Quarkus, including customizing settings and handling exceptions.\n"
"Gain practical insights and strategies for various application scenarios."
msgstr ""
"設定のカスタマイズや例外処理など、Quarkusでプロアクティブ認証を管理する方法を学びます。\n"
"さまざまなアプリケーションシナリオに対する実践的な洞察と戦略を得ることができます。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"Proactive authentication is enabled in Quarkus by default.\n"
"It ensures that all incoming requests with credentials are authenticated, even if the target page does not require authentication.\n"
"As a result, requests with invalid credentials are rejected, even if the target page is public.\n"
"Requests without credentials are not rejected, because anonymous requests are allowed."
msgstr "Quarkusでは、プロアクティブ認証がデフォルトで有効になっています。これにより、ターゲットページが認証を必要としない場合でも、認証情報を持つすべての受信リクエストが認証されます。その結果、ターゲットページが公開されている場合でも、無効な認証情報を持つリクエストは拒否されます。匿名リクエストは許可されるので、認証情報のないリクエストは拒否されません。"

#: _versions/main/guides/security-proactive-authentication.adoc
msgid ""
"You can turn off this default behavior if you want to authenticate only when the target page requires it.\n"
"To turn off proactive authentication so that authentication occurs only when the target page requires it, modify the `application.properties` configuration file as follows:"
msgstr ""
"ターゲット・ページが要求したときにのみ認証を行いたい場合は、このデフォルトの動作をオフにすることができます。\n"
"プロアクティブ認証をオフにして、ターゲット・ページが要求したときにのみ認証を行なうようにするには、 `application.properties` の設定ファイルを以下のように変更します："

#: _versions/main/guides/security-proactive-authentication.adoc
msgid ""
"If you turn off proactive authentication, the authentication process runs only when an identity is requested.\n"
"An identity can be requested because of security rules that require the user to authenticate or because programmatic access to the current identity is required."
msgstr ""
"プロアクティブ認証をオフにすると、ID が要求されたときにのみ認証プロセスが実行されます。\n"
"ID が要求されるのは、ユーザ認証を必要とするセキュリティ・ルールがあるため、または現在の ID へのプログラムによるアクセスが必要なためです。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"If proactive authentication is not used, accessing `SecurityIdentity` is a blocking operation.\n"
"This is because authentication might have yet to happen, and accessing `SecurityIdentity` might require calls to external systems, such as databases, that might block the operation.\n"
"For blocking applications, this is not an issue.\n"
"However, if you have disabled authentication in a reactive application, this fails because you cannot do blocking operations on the I/O thread.\n"
"To work around this, you need to `@Inject` an instance of `io.quarkus.security.identity.CurrentIdentityAssociation` and call the `Uni<SecurityIdentity> getDeferredIdentity();` method.\n"
"Then, you can subscribe to the resulting `Uni` to be notified when authentication is complete and the identity is available."
msgstr "プロアクティブ認証を使用しない場合、 `SecurityIdentity` へのアクセスはブロッキング操作となります。これは、認証がまだ行われていない可能性があり、 `SecurityIdentity` へのアクセスにはデータベースなどの外部システムへの呼び出しが必要になるため、操作がブロックされる可能性があるためです。ブロッキング・アプリケーションの場合、これは問題ではありません。しかし、リアクティブなアプリケーションで認証を無効にしている場合は、 I/O スレッドでブロッキング操作を行うことができないため、失敗します。 `@Inject` これを回避するには、 `io.quarkus.security.identity.CurrentIdentityAssociation` のインスタンスを作成し、 `Uni<SecurityIdentity> getDeferredIdentity();` メソッドを呼び出します。そして、認証が完了して ID が利用可能になったときに通知されるように、生成された `Uni` をサブスクライブします。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"You can still access `SecurityIdentity` synchronously with `public SecurityIdentity getIdentity()` in xref:rest.adoc[Quarkus REST (formerly RESTEasy Reactive)] from endpoints that are annotated with `@RolesAllowed`, `@Authenticated`, or with respective configuration authorization checks because authentication has already happened.\n"
"The same is also valid for xref:reactive-routes.adoc[Reactive routes] if a route response is synchronous."
msgstr "xref:rest.adoc[Quarkus REST（旧RESTEasy Reactive] ）では、 `@RolesAllowed` 、 `@Authenticated` 、または各構成の認証チェックでアノテーションされたエンドポイントから、 `public SecurityIdentity getIdentity()` を使用して同期的に `SecurityIdentity` にアクセスできます。ルートレスポンスが同期的である場合、同じことが xref:reactive-routes.adoc[Reactiveルート] にも当てはまります。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"When proactive authentication is disabled, xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[standard security annotations] used on CDI beans do not function on an I/O thread if a secured method that is not void synchronously returns a value.\n"
"This limitation arises from the necessity for these methods to access `SecurityIdentity`."
msgstr "プロアクティブ認証が無効な場合，CDI Beanで使用される xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[標準的なセキュリティアノテーションは] ， voidでないセキュリティで保護されたメソッドが同期的に値を返す場合， I/O スレッド上で機能しない。この制限は，これらのメソッドが `SecurityIdentity` にアクセスする必要性から発生します。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"The following example defines `HelloResource` and `HelloService`.\n"
"Any GET request to `/hello` runs on the I/O thread and throws a `BlockingOperationNotAllowedException` exception."
msgstr "以下の例では、 `HelloResource` と `HelloService` を定義しています。 `/hello` への GET リクエストはすべて I/O スレッドで実行され、 `BlockingOperationNotAllowedException` 例外がスローされます。"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
msgid "There is more than one way to fix the example:"
msgstr "例の修正方法は1つではありません:"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid "Switch to a worker thread by annotating the `hello` endpoint with `@Blocking`."
msgstr "`@Blocking` で `hello` エンドポイントをアノテーションして、ワーカースレッドに切り替えます。"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid "Change the `sayHello` method return type by using a reactive or asynchronous data type."
msgstr "リアクティブまたは非同期データ型を使用して、 `sayHello` メソッドの戻り値の型を変更します。"

#: _versions/main/guides/security-proactive-authentication.adoc
msgid ""
"Move the `@RolesAllowed` annotation to the endpoint.\n"
"This could be one of the safest ways because accessing `SecurityIdentity` from endpoint methods is never the blocking operation."
msgstr ""
"`@RolesAllowed` アノテーションをエンドポイントに移動します。\n"
"エンドポイントメソッドからの `SecurityIdentity` へのアクセスは決してブロッキング操作ではないので、これは最も安全な方法のひとつです。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid "Activating the CDI request context"
msgstr "CDIリクエストコンテキストのアクティブ化"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"You may need to inject `@RequestScoped` beans during authentication and authorization.\n"
"A good example of this is accessing a database during a `SecurityIdentity` augmentation,\n"
"which is described in the xref:security-customization.adoc#security-identity-customization[Security Identity Customization] section of the \"Security Tips and Tricks\" guide.\n"
"If authentication or authorization fails with the `jakarta.enterprise.context.ContextNotActiveException`, disabling proactive authentication is most often the best solution.\n"
"Users can also activate xref:cdi-reference.adoc#request-context-lifecycle[CDI request context], for example, by using the `@ActivateRequestContext` annotation.\n"
"However, some CDI beans may not be ready for use."
msgstr "認証や認可の際に `@RequestScoped` Bean を注入する必要があるかもしれません。 `SecurityIdentity` これは \"Security Tips and Tricks\" ガイドの xref:security-customization.adoc#security-identity-customization[Security Identity Customization] セクションで説明します。 `jakarta.enterprise.context.ContextNotActiveException` 、認証または認可に失敗する場合、プロアクティブ認証を無効にすることが最良の解決策になることがほとんどです。ユーザは、 `@ActivateRequestContext` アノテーションを使用するなどして、 xref:cdi-reference.adoc#request-context-lifecycle[CDIリクエストコンテキスト] を有効にすることもできます。しかし、CDI Bean の中には使用できないものもあります。"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"One exception to this solution is a situation when application endpoints are secured with the xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[Authorization using configuration].\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc#policy-active-cdi-request-context[Inject RequestScoped beans into HttpSecurityPolicy] section of the \"Authorization of Web endpoints\" guide for more information."
msgstr "この解決策の例外は、アプリケーション・エンドポイントが xref:security-authorize-web-endpoints-reference.adoc#authorization-using-configuration[Authorization using configuration] で保護されている場合です。詳細については、\"Web エンドポイントの認証\" ガイドの \" xref:security-authorize-web-endpoints-reference.adoc#policy-active-cdi-request-context[HttpSecurityPolicy への RequestScoped Bean の注入] \" セクションを参照してください。"

#. type: Title ==
#: _versions/main/guides/security-proactive-authentication.adoc
#, no-wrap
msgid "Customize authentication exception responses"
msgstr "認証例外応答のカスタマイズ"

#: _versions/main/guides/security-proactive-authentication.adoc
msgid ""
"You can use Jakarta REST `ExceptionMapper` to capture Quarkus Security authentication exceptions such as `io.quarkus.security.AuthenticationFailedException`.\n"
"For example:"
msgstr ""
"Jakarta REST `ExceptionMapper` を使用して、 `io.quarkus.security.AuthenticationFailedException` のような Quarkus Security 認証の例外をキャプチャできます。\n"
"例:"

#: _versions/main/guides/security-proactive-authentication.adoc
#, fuzzy
msgid ""
"Some HTTP authentication mechanisms must handle authentication exceptions themselves to create a correct authentication challenge.\n"
"For example, `io.quarkus.oidc.runtime.CodeAuthenticationMechanism`, which manages OpenID Connect (OIDC) authorization code flow authentication, must build a correct redirect URL and set a state cookie.\n"
"Therefore, avoid using custom exception mappers to customize authentication exceptions thrown by such mechanisms.\n"
"Instead, a safer approach is to ensure that proactive authentication is enabled and to use Vert.x HTTP route failure handlers.\n"
"This is because events come to the handler with the correct response status and headers.\n"
"Then, you must only customize the response; for example:"
msgstr "HTTP認証メカニズムの中には、正しい認証チャレンジを作成するために、認証例外を自分で処理しなければならないものがあります。たとえば、OpenID Connect (OIDC) の認可コードフロー認証を管理する `io.quarkus.oidc.runtime.CodeAuthenticationMechanism` は、正しいリダイレクト URL を作成し、状態クッキーを設定する必要があります。したがって、このようなメカニズムがスローする認証例外をカスタマイズするために、カスタム例外マッパーを使用することは避けてください。代わりに、より安全な方法は、プロアクティブ認証が有効になっていることを確認し、Vert.x HTTPルート失敗ハンドラを使用することです。これは、イベントが正しいレスポンスステータスとヘッダでハンドラに来るためです。そして、レスポンスだけをカスタマイズする必要があります："

#. type: Title ==
#: _versions/main/guides/security-proactive-authentication.adoc
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "xref:security-architecture.adoc[Quarkus Security アーキテクチャ]"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
msgid "xref:security-authentication-mechanisms.adoc[Authentication mechanisms in Quarkus]"
msgstr "xref:security-authentication-mechanisms.adoc[Quarkusの認証メカニズム]"

#. type: Plain text
#: _versions/main/guides/security-proactive-authentication.adoc
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "xref:security-identity-providers.adoc[アイデンティティ・プロバイダー]"
