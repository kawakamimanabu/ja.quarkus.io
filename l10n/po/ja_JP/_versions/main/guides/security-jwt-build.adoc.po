msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Build, sign, and encrypt JSON Web Tokens"
msgstr "JSONウェブトークンの構築、署名、暗号化"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "JSON Web Token (JWT) is defined by the link:https://datatracker.ietf.org/doc/html/rfc7519[RFC 7519] specification as a compact, URL-safe means of representing claims. These claims are encoded as a JSON object and can be used as the payload of a JSON Web Signature (JWS) structure or the plaintext of a JSON Web Encryption (JWE) structure. This mechanism enables claims to be digitally signed or protected for integrity with a Message Authentication Code (MAC) and encrypted."
msgstr "JSON Web Token（JWT）は、コンパクトでURLセーフなクレーム表現手段として、 link:https://datatracker.ietf.org/doc/html/rfc7519[RFC 7519] 仕様で定義されています。これらのクレームはJSONオブジェクトとしてエンコードされ、JSON Web Signature（JWS）構造のペイロードまたはJSON Web Encryption（JWE）構造のプレーンテキストとして使用できます。このメカニズムにより、クレームをデジタル署名したり、メッセージ認証コード（MAC）で完全性を保護したり、暗号化したりすることができます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signing the claims is the most common method for securing them. Typically, a JWT token is produced by signing claims formatted as JSON, following the steps outlined in the link:https://tools.ietf.org/html/rfc7515[JSON Web Signature (JWS)] specification."
msgstr "クレームに署名することは、クレームを保護するための最も一般的な方法です。通常、JWTトークンは、 link:https://tools.ietf.org/html/rfc7515[JSON Web Signature (JWS)] 仕様で説明されている手順に従って、JSONとしてフォーマットされたクレームに署名することで生成されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "When the claims contain sensitive information, their confidentiality can be ensured by using the link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption (JWE)] specification. This approach produces a JWT with encrypted claims."
msgstr "クレームに機密情報が含まれている場合、 link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption (JWE)] 仕様を使用することで機密性を確保できます。このアプローチは、暗号化されたクレームを含むJWTを生成します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "For enhanced security, you can combine both methods: sign the claims first and then encrypt the resulting nested JWT. This process ensures both the confidentiality and integrity of the claims."
msgstr "セキュリティを強化するには、両方の方法を組み合わせることができます。つまり、最初にクレームに署名し、次に結果のネストされたJWTを暗号化します。このプロセスにより、クレームの機密性と完全性の両方が保証されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The SmallRye JWT Build API simplifies securing JWT claims by supporting all these options. It uses the link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] library internally to provide this functionality."
msgstr "SmallRye JWT Build APIは、これらすべてのオプションをサポートすることで、JWTクレームの保護を簡素化します。この機能を提供するために、内部的に link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] ライブラリを使用しています。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Dependency"
msgstr "依存関係"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "To use the SmallRye JWT Build API, add the following dependency to your project:"
msgstr "SmallRye JWT Build API を使用するには、以下の依存関係をプロジェクトに追加します："

#. type: Block title
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can use the SmallRye JWT Build API independently, without creating MicroProfile JWT endpoints supported by the `quarkus-smallrye-jwt` extension."
msgstr "`quarkus-smallrye-jwt` エクステンションでサポートされる MicroProfile JWT エンドポイントを作成せずに、SmallRye JWT Build API を単独で使用できます。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Create JwtClaimsBuilder and set the claims"
msgstr "JwtClaimsBuilder の作成とクレームの設定"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The first step is to initialize a `JwtClaimsBuilder` by using one of the following options and add some claims to it:"
msgstr "最初のステップは、以下のオプションのいずれかを使用して `JwtClaimsBuilder` を初期化し、クレームを追加することです："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The API is fluent so you can initialize the builder as part of a fluent sequence."
msgstr "APIはフルエントなので、フルエントシーケンスの一部としてビルダーを初期化できます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The builder automatically sets the following claims if they are not explicitly configured:"
msgstr "以下のクレームが明示的に設定されていない場合、ビルダは自動的に設定します："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`iat` (issued at): Current time"
msgstr "`iat` (で発行）：現在時刻"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`exp` (expires at): Five minutes from the current time (customizable with the `smallrye.jwt.new-token.lifespan` property)"
msgstr "`exp` (で期限切れ）：現在時刻から5分後（ プロパティでカスタマイズ可能） `smallrye.jwt.new-token.lifespan` "

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`jti` (unique token identifier)"
msgstr "`jti` (一意のトークン識別子）"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can configure the following properties globally to avoid setting them directly in the builder:"
msgstr "以下のプロパティは、ビルダーで直接設定しないように、グローバルに設定できます："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.issuer`: Specifies the default issuer."
msgstr "`smallrye.jwt.new-token.issuer` :デフォルトの発行者を指定します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.audience`: Specifies the default audience."
msgstr "`smallrye.jwt.new-token.audience` :デフォルトの観客を指定します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "After initializing and setting claims, the next step is to decide how to secure the claims."
msgstr "クレームを初期化して設定したら、次はクレームをどのように保護するかを決めます。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Sign the claims"
msgstr "クレームへの署名"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can sign the claims immediately or after configuring the `JSON Web Signature (JWS)` headers:"
msgstr "`JSON Web Signature (JWS)` ヘッダを設定した後でも、すぐにでもクレームに署名できます："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Default behaviors:"
msgstr "デフォルトの動作："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `alg` (algorithm) header is set to `RS256` by default."
msgstr "`alg` (アルゴリズム)ヘッダーは、デフォルトで `RS256` に設定されています。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You do not have to set a signing key identifier (`kid` header) if a single JSON Web Key (JWK) containing a `kid` property is used."
msgstr "`kid` プロパティを含む単一の JSON ウェブ鍵（JWK）を使用する場合、署名鍵識別子（ `kid` ヘッダー）を設定する必要はありません。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Supported keys and algorithms:"
msgstr "サポートされているキーとアルゴリズム"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "To sign the claims, you can use RSA private keys, Elliptic Curve (EC) private keys, and symmetric secret keys."
msgstr "クレームに署名するには、RSA秘密鍵、楕円曲線（EC）秘密鍵、共通秘密鍵を使用できます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`RS256` is the default RSA private key signature algorithm."
msgstr "`RS256` はデフォルトのRSA秘密鍵署名アルゴリズムです。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`ES256` is the default EC private key signature algorithm."
msgstr "`ES256` はデフォルトのEC秘密鍵署名アルゴリズムです。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`HS256` is the default symmetric key signature algorithm."
msgstr "`HS256` はデフォルトの共通鍵署名アルゴリズムです。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "To customize the signature algorithm, use the `JwtSignatureBuilder` API. For example:"
msgstr "署名アルゴリズムをカスタマイズするには、 `JwtSignatureBuilder` APIを使用します。例えば"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively, you can configure the signature algorithm globally with the following property:"
msgstr "あるいは、以下のプロパティで署名アルゴリズムをグローバルに設定することもできます："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This approach gives you a simpler API sequence:"
msgstr "このアプローチでは、APIシーケンスがよりシンプルになります："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can combine the `sign` step with the <<encrypt-claims,encrypt>> step to create `inner-signed and encrypted` tokens. For more information, see the <<innersign-encrypt-claims,Sign the claims and encrypt the nested JWT token>> section."
msgstr "`sign` ステップと xref:encrypt-claims[encrypt] ステップを組み合わせて、 `inner-signed and encrypted` トークンを作成できます。詳細については、「 xref:innersign-encrypt-claims[クレームに署名し、ネストされた JWT トークンを暗号化する] 」のセクションを参照してください。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Encrypt the claims"
msgstr "クレームの暗号化"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can encrypt claims immediately or after setting the `JSON Web Encryption (JWE)` headers, similar to how claims are signed.\n"
"However, encrypting claims always requires a `jwe()` transition to a `JwtEncryptionBuilder` because the API is optimized to support signing and inner-signing operations."
msgstr "クレームが署名される方法と同様に、 `JSON Web Encryption (JWE)` ヘッダを設定した直後またはその後にクレームを暗号化することができます。しかし、API は署名と内部署名操作をサポートするように最適化されているため、クレームを暗号化するには常に `jwe()` から `JwtEncryptionBuilder` への移行が必要になります。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `alg` (key management algorithm) header defaults to `RSA-OAEP`."
msgstr "`alg` (鍵管理アルゴリズム) ヘッダーのデフォルトは `RSA-OAEP` です。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `enc` (content encryption) header defaults to `A256GCM`."
msgstr "`enc` (コンテンツ暗号化) ヘッダのデフォルトは `A256GCM` です。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can use RSA public keys, Elliptic Curve (EC) public keys, and symmetric secret keys, to encrypt the claims."
msgstr "請求の暗号化には、RSA公開鍵、楕円曲線（EC）公開鍵、共通秘密鍵を使用できます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`RSA-OAEP` is the default RSA public key encryption algorithm."
msgstr "`RSA-OAEP` はデフォルトのRSA公開鍵暗号化アルゴリズムです。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`ECDH-ES` is the default EC public key encryption algorithm."
msgstr "`ECDH-ES` はデフォルトのEC公開鍵暗号化アルゴリズムです。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`A256KW` is the default symmetric key encryption algorithm."
msgstr "`A256KW` はデフォルトの共通鍵暗号化アルゴリズムです。"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "Note two encryption operations are done when creating an encrypted token:"
msgstr "暗号化されたトークンを作成する際には、2つの暗号化処理が行われることに注意してください。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The generated content encryption key is encrypted using the supplied key and a key encryption algorithm such as `RSA-OAEP`."
msgstr "生成されたコンテンツ暗号化キーは、提供されたキーと、 `RSA-OAEP` などのキー暗号化アルゴリズムを使用して暗号化されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The claims are encrypted using the content encryption key and a content encryption algorithm such as `A256GCM`."
msgstr "特許請求の範囲は、コンテンツ暗号化キーと、 `A256GCM` のようなコンテンツ暗号化アルゴリズムを使用して暗号化されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can customize the key and content encryption algorithms by using the `JwtEncryptionBuilder` API. For example:"
msgstr "`JwtEncryptionBuilder` API を使用して、キーとコンテンツの暗号化アルゴリズムをカスタマイズできます。例えば"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively, you can configure the algorithms globally by using the following properties:"
msgstr "または、以下のプロパティを使用して、アルゴリズムをグローバルに設定することもできます："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This configuration allows for a simpler API sequence:"
msgstr "この構成により、APIシーケンスがよりシンプルになります："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Recommendations for secure token encryption:"
msgstr "安全なトークン暗号化のための推奨事項"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"When a token is directly encrypted with a public RSA or EC key, it cannot be verified which party sent the token.\n"
"To address this, symmetric secret keys are preferred for direct encryption, especially when using JWT as cookies managed solely by the Quarkus endpoint."
msgstr "トークンが公開RSA鍵またはEC鍵で直接暗号化される場合、どのパーティがトークンを送信したかを検証することはできません。この問題に対処するため、特にQuarkusエンドポイントによってのみ管理されるCookieとしてJWTを使用する場合、直接暗号化には対称秘密鍵が推奨されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "To encrypt a token with RSA or EC public keys, it is recommended to sign the token first if a signing key is available. For more information, see the <<innersign-encrypt-claims,Sign the claims and encrypt the nested JWT token>> section."
msgstr "トークンを RSA または EC 公開鍵で暗号化するには、署名鍵が利用可能な場合、まずトークンに署名することをお勧めします。詳細については、「 xref:innersign-encrypt-claims[クレームの署名とネストされたJWTトークンの暗号化] 」のセクションを参照してください。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Sign the claims and encrypt the nested JWT token"
msgstr "クレームへの署名とネストされた JWT トークンの暗号化"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can sign the claims and then encrypt the nested JWT token by combining the sign and encrypt steps."
msgstr "署名と暗号化のステップを組み合わせることで、クレームに署名し、ネストした JWT トークンを暗号化することができます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Fast JWT generation"
msgstr "高速JWT生成"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "If the `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` properties are set, you can secure existing claims, such as resources, maps, JsonObjects, with a single call:"
msgstr "`smallrye.jwt.sign.key.location` または `smallrye.jwt.encrypt.key.location` プロパティが設定されている場合、リソース、マップ、JsonObject などの既存のクレームを、1回の呼び出しで保護することができます："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "As mentioned earlier, the following claims are added automatically if they are not already set: `iat` (issued at), `exp` (expires at), `jti` (token identifier), `iss` (issuer), and `aud` (audience)."
msgstr "`iat` (issued at)、 `exp` (expires at)、 `jti` (token identifier)、 `iss` (issuer) および `aud` (audience)."

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Dealing with the keys"
msgstr "キーの取り扱い"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can use the `smallrye.jwt.sign.key.location` and `smallrye.jwt.encrypt.key.location` properties to specify the locations of signing and encryption keys. These keys can be located on the local file system, on the classpath, or fetched from remote endpoints. Keys can be in `PEM` or `JSON Web Key (JWK)` formats. For example:"
msgstr "`smallrye.jwt.sign.key.location` および `smallrye.jwt.encrypt.key.location` プロパティを使用して、署名鍵および暗号化鍵の場所を指定できます。これらの鍵は、ローカル・ファイル・システム、クラスパス、またはリモート・エンドポイントから取得できます。鍵の形式は `PEM` または `JSON Web Key (JWK)` です。例えば"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively, you can fetch keys from external services, such as link:{vault-guide}[HashiCorp Vault] or other secret managers, by using MicroProfile `ConfigSource` and the `smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` properties:"
msgstr "また、MicroProfile `ConfigSource` 、 `smallrye.jwt.sign.key` および `smallrye.jwt.encrypt.key` プロパティを使用して、 link:{vault-guide}[HashiCorp Vault] やその他のシークレットマネージャなどの外部サービスからキーをフェッチすることもできます："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "In this example, `private.key.from.vault` and `public.key.from.vault` are `PEM` or `JWK` formatted key values provided by the custom `ConfigSource`."
msgstr "この例では、 `private.key.from.vault` と `public.key.from.vault` は、 `PEM` または `JWK` フォーマットのキー値で、カスタム `ConfigSource` によって提供されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` properties can also contain Base64-encoded private or public key values directly."
msgstr "`smallrye.jwt.sign.key` と `smallrye.jwt.encrypt.key` プロパティには、Base64 エンコードされた秘密鍵や公開鍵の値を直接含めることもできます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "However, be aware that directly inlining private keys in the configuration is not recommended. Use the `smallrye.jwt.sign.key` property only when you need to fetch a signing key value from a remote secret manager."
msgstr "しかし、設定に秘密鍵を直接インライン化することは推奨されないことに注意してください。 `smallrye.jwt.sign.key` プロパティは、リモートのシークレットマネージャから署名鍵の値を取得する必要がある場合にのみ使用してください。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The keys can also be loaded by the code that builds the token, and then supplied to JWT Build API for token creation."
msgstr "キーは、トークンをビルドするコードによってロードされ、トークン生成のためにJWTビルドAPIに供給されることもできます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "If you need to sign or encrypt the token by using the symmetric secret key, consider using `io.smallrye.jwt.util.KeyUtils` to generate a `SecretKey` of the required length."
msgstr "対称秘密鍵を使用してトークンに署名または暗号化する必要がある場合は、 `io.smallrye.jwt.util.KeyUtils` を使用して必要な長さの `SecretKey` を生成することを検討してください。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "For example, a 64-byte key is required to sign a token by using the `HS512` algorithm (`512/8`), and a 32-byte key is needed to encrypt the content encryption key with the `A256KW` algorithm (`256/8`):"
msgstr "例えば、 `HS512` アルゴリズム( `512/8` )を用いてトークンに署名するためには64バイトの鍵が必要であり、 `A256KW` アルゴリズム( `256/8` )を用いてコンテンツ暗号鍵を暗号化するためには32バイトの鍵が必要です："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can also consider using a JSON Web Key (JWK) or JSON Web Key Set (JWK Set) format to store a secret key on a secure file system. You can reference the key by using the `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` properties."
msgstr "また、JSON Web Key (JWK) または JSON Web Key Set (JWK Set) フォーマットを使用して、安全なファイルシステムに秘密鍵を保存することもできます。鍵は、 `smallrye.jwt.sign.key.location` または `smallrye.jwt.encrypt.key.location` プロパティを使用して参照できます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Example JWK"
msgstr "例 JWK"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Example JWK Set"
msgstr "JWKセット例"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can also use `io.smallrye.jwt.util.KeyUtils` to generate a pair of asymmetric RSA or EC keys. These keys can be stored in `JWK`, `JWK Set`, or `PEM` format."
msgstr "また、 `io.smallrye.jwt.util.KeyUtils` を使って非対称 RSA 鍵や EC 鍵のペアを生成することもできます。これらの鍵は `JWK` 、 `JWK Set` 、 `PEM` のいずれかの形式で保存できます。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "SmallRye JWT Builder configuration"
msgstr "SmallRye JWT Builder の設定"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "SmallRye JWT supports the following properties, which can be used to customize how claims are signed or encrypted:"
msgstr "SmallRye JWTは以下のプロパティをサポートしており、クレームの署名や暗号化の方法をカスタマイズできます："

#: _versions/main/guides/security-jwt-build.adoc
msgid "Property Name"
msgstr "プロパティ名"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Default"
msgstr "デフォルト"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Description"
msgstr "説明"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.location`"
msgstr "`smallrye.jwt.sign.key.location`"

#: _versions/main/guides/security-jwt-build.adoc
msgid "none"
msgstr "none"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Location of a private key used to sign the claims when either a no-argument `sign()` or `innerSign()` method is called."
msgstr "引数なしの `sign()` または `innerSign()` メソッドが呼び出されたときに、クレームに署名するために使用される秘密鍵の場所。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key`"
msgstr "`smallrye.jwt.sign.key`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Key value used to sign the claims when either a no-argument `sign()` or `innerSign()` method is called."
msgstr "引数なしの `sign()` または `innerSign()` メソッドが呼び出されたときに、クレームに署名するために使用されるキー値。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.id`"
msgstr "`smallrye.jwt.sign.key.id`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signing key identifier, checked only when JWK keys are used."
msgstr "JWK鍵を使用する場合のみチェックされます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key.location`"
msgstr "`smallrye.jwt.encrypt.key.location`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Location of the public key used to encrypt claims or the inner JWT when the no-argument `encrypt()` method is called."
msgstr "引数なしの `encrypt()` メソッドが呼び出されたときに、クレームまたは内部 JWT を暗号化するために使用される公開鍵の場所。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.relax-key-validation`"
msgstr "`smallrye.jwt.sign.relax-key-validation`"

#: _versions/main/guides/security-jwt-build.adoc
msgid "`false`"
msgstr "`false`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Relax the validation of the signing keys."
msgstr "署名キーの検証を緩和します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key`"
msgstr "`smallrye.jwt.encrypt.key`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Key value used to encrypt the claims or the inner JWT when a no-argument `encrypt()` method is called."
msgstr "引数なしの `encrypt()` メソッドが呼び出されたときに、クレームまたは内部 JWT を暗号化するために使用されるキー値。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key.id`"
msgstr "`smallrye.jwt.encrypt.key.id`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Encryption key identifier, checked only when JWK keys are used."
msgstr "暗号化キーの識別子。JWKキーが使われている場合のみチェックされます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.relax-key-validation`"
msgstr "`smallrye.jwt.encrypt.relax-key-validation`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Relax the validation of the encryption keys."
msgstr "暗号化キーの検証を緩和します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.signature-algorithm`"
msgstr "`smallrye.jwt.new-token.signature-algorithm`"

#: _versions/main/guides/security-jwt-build.adoc
msgid "`RS256`"
msgstr "`RS256`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signature algorithm. Checked if the JWT signature builder has not already set the signature algorithm."
msgstr "署名アルゴリズム。JWT署名ビルダーがまだ署名アルゴリズムを設定していない場合にチェックされます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.key-encryption-algorithm`"
msgstr "`smallrye.jwt.new-token.key-encryption-algorithm`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`RSA-OAEP`"
msgstr "`RSA-OAEP`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Key encryption algorithm. Checked if the JWT encryption builder has not already set the key encryption algorithm."
msgstr "キー暗号化アルゴリズム。JWT暗号化ビルダーがキー暗号化アルゴリズムをまだ設定していない場合にチェックされます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.content-encryption-algorithm`"
msgstr "`smallrye.jwt.new-token.content-encryption-algorithm`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`A256GCM`"
msgstr "`A256GCM`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Content encryption algorithm. Checked if the JWT encryption builder has not already set the content encryption algorithm."
msgstr "コンテンツ暗号化アルゴリズム。JWT暗号化ビルダーがコンテンツ暗号化アルゴリズムを設定していない場合にチェックされます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.lifespan`"
msgstr "`smallrye.jwt.new-token.lifespan`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`300`"
msgstr "`300`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Token lifespan in seconds used to calculate an `exp` (expiry) claim value if this claim has not already been set."
msgstr "`exp` (期限切れ) クレーム値がまだ設定されていない場合に計算に使用される、秒単位のトークン寿命。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.issuer`"
msgstr "`smallrye.jwt.new-token.issuer`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Token issuer used to set an `iss` (issuer) claim value if this claim has not already been set."
msgstr "トークン発行者は、 `iss` (発行者) クレーム値がまだ設定されていない場合に、このクレーム値を設定するために使用します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.audience`"
msgstr "`smallrye.jwt.new-token.audience`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Token audience used to set an `aud` (audience) claim value if this claim has not already been set."
msgstr "このクレームがまだ設定されていない場合、 `aud` (audience) クレーム値を設定するために使用されるトークンオーディエンス。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.override-matching-claims`"
msgstr "`smallrye.jwt.new-token.override-matching-claims`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Set this property to `true` for `smallrye.jwt.new-token.issuer` and `smallrye.jwt.new-token.audience` values to override the already initialized `iss` (issuer) and `aud` (audience) claims."
msgstr "既に初期化されている `iss` （発行者）と `aud` （視聴者）のクレームを `smallrye.jwt.new-token.issuer` と `smallrye.jwt.new-token.audience` の値で上書きするために、 このプロパティを `true` に設定します。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.type`"
msgstr "`smallrye.jwt.keystore.type`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "`JKS`"
msgstr "`JKS`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "This property can be used to customize a keystore type if either `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` or both of these properties point to a `KeyStore` file. If it is not set then the file name will be checked to determine the keystore type before defaulting to `JKS`."
msgstr "このプロパティは、 `smallrye.jwt.sign.key.location` または `smallrye.jwt.encrypt.key.location` のいずれか、あるいはこれらのプロパティの両方が `KeyStore` ファイルを指している場合に、キーストアタイプをカスタマイズするために使用することができます。このプロパティが設定されていない場合、ファイル名をチェックしてキーストアの種類を決定し、デフォルトで `JKS` に設定されます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.provider`"
msgstr "`smallrye.jwt.keystore.provider`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "This property can be used to customize a `KeyStore` provider if `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a `KeyStore` file."
msgstr "このプロパティは、 `smallrye.jwt.sign.key.location` または `smallrye.jwt.encrypt.key.location` が `KeyStore` ファイルを指している場合に、 `KeyStore` プロバイダをカスタマイズするために使用できます。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.password`"
msgstr "`smallrye.jwt.keystore.password`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Keystore password. If `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a `KeyStore` file, this property must be set."
msgstr "キーストアのパスワード。 `smallrye.jwt.sign.key.location` または `smallrye.jwt.encrypt.key.location` が `KeyStore` ファイルを指す場合、このプロパティを設定する必要があります。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.encrypt.key.alias`"
msgstr "`smallrye.jwt.keystore.encrypt.key.alias`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property must be set to identify the public encryption key that is extracted from `KeyStore` from a matching certificate if `smallrye.jwt.encrypt.key.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `smallrye.jwt.encrypt.key.location` が `KeyStore` ファイルを指す場合、一致する証明書から `KeyStore` から抽出される公開暗号化鍵を識別するために設定されなければなりません。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.sign.key.alias`"
msgstr "`smallrye.jwt.keystore.sign.key.alias`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property must be set to identify a private signing key if `smallrye.jwt.sign.key.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `smallrye.jwt.sign.key.location` が `KeyStore` ファイルを指している場合、秘密署名鍵を識別するために設定する必要があります。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.sign.key.password`"
msgstr "`smallrye.jwt.keystore.sign.key.password`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property can be set if a private signing key's password in `KeyStore` is different from `smallrye.jwt.keystore.password` when `smallrye.jwt.sign.key.location` points to a `KeyStore` file."
msgstr "このプロパティは、 `smallrye.jwt.sign.key.location` が `KeyStore` ファイルを指しているとき、 `KeyStore` の秘密署名鍵のパスワードが `smallrye.jwt.keystore.password` と異なる場合に設定できます。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"
msgstr "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDCベアラートークン認証]"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-jwt.adoc[Using SmallRye JWT to Protect Service Applications]"
msgstr "xref:security-jwt.adoc[SmallRye JWTを使用したサービスアプリケーションの保護]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"
