msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus Security overview"
msgstr "Quarkus Securityの概要"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Quarkus Security is a framework that provides the architecture, multiple authentication and authorization mechanisms, and other tools for you to build secure and production-quality Java applications."
msgstr "Quarkus Securityでは、開発者がQuarkusアプリケーションの商用品質のセキュリティーを構築するためのアーキテクチャ、複数の認証および認可メカニズム、その他のツールを提供しているフレームワークです。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Getting started with Quarkus Security"
msgstr "Quarkus セキュリティー入門"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Before you start building security into your Quarkus applications, review the overview information to learn about the Quarkus Security architecture and the different authentication and authorization mechanisms that Quarkus supports."
msgstr "Quarkusアプリケーションにセキュリティを組み込む前に、概要情報を確認し、Quarkusのセキュリティアーキテクチャと、Quarkusがサポートするさまざまな認証および認可メカニズムについて学んでください。"

#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid ""
"To get started with security in Quarkus, we recommend that you first combine the Quarkus built-in xref:security-basic-authentication-concept.adoc[Basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).\n"
"Complete the steps in the xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication] tutorial.\n"
"After you have successfully secured your Quarkus application with basic HTTP authentication, you can increase the security further by adding more advanced authentication mechanisms, for example, OpenID Connect (OIDC) authentication."
msgstr "Quarkusのセキュリティを開始するには、まず、Quarkusに組み込まれている xref:security-basic-authentication-concept.adoc[Basic HTTP認証] とJPA IDプロバイダを組み合わせて、ロールベースのアクセス制御（RBAC）を有効にすることをお勧めします。Quarkus xref:security-basic-authentication-tutorial.adoc[アプリケーションをBasic認証で保護] するチュートリアルの手順を完了します。基本HTTP認証でQuarkusアプリケーションのセキュリティ確保に成功したら、OpenID Connect（OIDC）認証など、より高度な認証メカニズムを追加することで、セキュリティをさらに強化できます。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Security architecture"
msgstr "セキュリティ・アーキテクチャ"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The `HttpAuthenticationMechanism` interface is the main entry mechanism for securing HTTP applications in Quarkus."
msgstr "`HttpAuthenticationMechanism` インターフェースは、QuarkusでHTTPアプリケーションを保護するための主要なエントリメカニズムです。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus Security uses `HttpAuthenticationMechanism` to extract the authentication credentials from the HTTP request and delegates them to `IdentityProvider` to convert the credentials to `SecurityIdentity`.\n"
"For example, the credentials can come from the `Authorization` header, client HTTPS certificates, or cookies."
msgstr "Quarkus Securityは、 `HttpAuthenticationMechanism` を使用してHTTPリクエストから認証クレデンシャルを抽出し、 `IdentityProvider` に委任して、認証クレデンシャルを `SecurityIdentity` に変換します。たとえば、クレデンシャルは、 `Authorization` ヘッダー、クライアントの HTTPS 証明書、または Cookie から取得することができます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`IdentityProvider` verifies the authentication credentials and maps them to `SecurityIdentity`, which has the username, roles, original authentication credentials, and other attributes."
msgstr "`IdentityProvider` は、認証クレデンシャルを検証し、ユーザー名、ロール、元の認証クレデンシャル、およびその他の属性を持つ `SecurityIdentity` にマップします。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For every authenticated resource, you can inject a `SecurityIdentity` instance to get the authenticated identity information."
msgstr "認証済みリソースごとに、 `SecurityIdentity`  インスタンスを注入して、認証済みの ID 情報を取得することができます。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"In other contexts, it is possible to have other parallel representations of the same information or parts of it, for example, `SecurityContext`\n"
"for JAX-RS or `JsonWebToken` for JSON Web Tokens (JWT)."
msgstr "他の文脈では、例えばJAX-RSの `SecurityContext` 、JSON Web Tokens（JWT）の `JsonWebToken` など、同じ情報またはその一部を他の並列表現にすることが可能です。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Authentication mechanisms"
msgstr "認証メカニズム"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Quarkus supports multiple authentication mechanisms"
msgstr "Quarkusは複数の認証メカニズムをサポートしています。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Basic and Form HTTP authentication"
msgstr "HTTPのベーシック認証とフォーム認証"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid "xref:security-basic-authentication-concept.adoc[Basic HTTP Authentication] and xref:security-built-in-authentication-support-concept.adoc#form-auth[Form HTTP authentication] are the core authentication mechanisms supported in Quarkus."
msgstr "xref:security-basic-authentication-concept.adoc[BasicHTTP] 認証と xref:security-built-in-authentication-support-concept.adoc#form-auth[FormHTTP認証] は、Quarkusでサポートされているコア認証メカニズムです。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "WebAuthn authentication"
msgstr "WebAuthn認証"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.\n"
"When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.\n"
"For more information, see xref:security-webauthn.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism]."
msgstr "https://webauthn.guide/[WebAuthn] は、パスワードに代わる認証メカニズムです。新しいユーザーを登録したり、ログインしたりするサービスを書くときに、パスワードを要求する代わりに、パスワードを置き換えるWebAuthnを使用することができます。詳しくは、 xref:security-webauthn.adoc[WebAuthn認証メカニズムを使用したQuarkusアプリケーションの保護] を参照してください。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Mutual TLS (mTLS) authentication"
msgstr "Mutual TLS (mTLS) 認証"

#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid ""
"Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates.\n"
"For more information, see xref:security-built-in-authentication-support-concept.adoc#mutual-tls[mutual TLS authentication]."
msgstr "Quarkusには相互TLS（mTLS）認証機能があり、X.509証明書に基づいてユーザーを認証できます。詳細については、相互 xref:security-built-in-authentication-support-concept.adoc#mutual-tls[TLS] 認証を参照してください。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OpenID Connect authentication"
msgstr "OpenID Connect 認証"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol. OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and to retrieve basic information about that user."
msgstr "OpenID Connect（OIDC）は、OAuth 2.0プロトコルの上で動作するIDレイヤーです。OIDCは、クライアントアプリケーションが、OIDCプロバイダーによって実行された認証に基づいてユーザーの身元を確認し、そのユーザーに関する基本的な情報を取得することを可能にします。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer Token and Authorization Code Flow authentication mechanisms.\n"
"The Bearer Token mechanism extracts the token from the HTTP Authorization header.\n"
"The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the identity of the user.\n"
"After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr ""
"Quarkus `quarkus-oidc` エクステンションは、ベアラートークンと認可コードフロー認証メカニズムをサポートする、リアクティブで相互運用可能なマルチテナント対応OIDCアダプタを提供します。\n"
"Bearer Token メカニズムは、HTTP Authorization ヘッダーからトークンを抽出します。認可コードフローメカニズムは、ユーザーを OIDC プロバイダーにリダイレクトし、ユーザーの ID を認証します。ユーザーがQuarkusにリダイレクトされた後、このメカニズムは、ID、アクセス、リフレッシュトークンに対して付与されたコードを交換することで、認証プロセスを完了します。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"You can verify ID and access JWT tokens by using the refreshable JSON Web Key (JWK) set or you can introspect them remotely.\n"
"However, opaque (binary) tokens can only be introspected remotely."
msgstr ""
"リフレッシュ可能な JSON Web Key (JWK) セットを使用して ID とアクセス JWT トークンを検証することも、リモートでイントロスペクトすることもできます。\n"
"ただし、不透明な（バイナリの）トークンはリモートでのみイントロスペクトできます。"

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Using the Quarkus OIDC extension, both Bearer Token and Authorization Code Flow mechanisms use <<smallrye-jwt, SmallRye JWT>> to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "Quarkus OIDCエクステンションを使用することで、ベアラートークンと認可コードフローの両方のメカニズムで link:#smallrye-jwt[SmallRye JWT] を使用して、JWTトークンをMicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` として表現できます。"

#. type: Title ====
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Additional Quarkus resources for OIDC authentication"
msgstr "OIDC認証のための追加のQuarkusリソース"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about OIDC authentication and authorization methods you can use to secure your Quarkus applications, see the following detailed resources:"
msgstr "Quarkusアプリケーションの保護のために使用できるOIDC認証および認可方法の詳細については、以下の詳細なリソースを参照してください："

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OIDC topic"
msgstr "OIDCトピック"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus information resource"
msgstr "Quarkusの情報リソース"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Bearer Token authentication mechanism"
msgstr "ベアラートークン認証メカニズム"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-openid-connect.adoc[Using OpenID Connect (OIDC) to protect service applications using Bearer Token authorization]"
msgstr "xref:security-openid-connect.adoc[OpenID Connect (OIDC) とベアラートークン認可を使用したサービスアプリケーションの保護]"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Authorization Code Flow authentication mechanism"
msgstr "認可コードフロー認証メカニズム"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-openid-connect-web-authentication.adoc[OpenID Connect (OIDC) authorization code flow mechanism]"
msgstr "xref:security-openid-connect-web-authentication.adoc[OpenID Connect (OIDC)認可コードフローメカニズム]"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Multiple tenants that can support Bearer Token or Authorization Code Flow mechanisms"
msgstr "ベアラートークンまたは認可コード・フロー・メカニズムをサポートする複数のテナント"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr "xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC)マルチテナントの使用]"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Using Keycloak to centralize authorization"
msgstr "Keycloakを使用した認可の一元化"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr "xref:security-keycloak-authorization.adoc[OpenID Connect (OIDC)とKeycloakを使用して認可を一元化]"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Configuring Keycloak programmatically"
msgstr "Keycloakのプログラムによる設定"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr "xref:security-keycloak-admin-client.adoc[Keycloak admin クライアントの使用]"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If you need to enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time and then re-enable it at runtime by using a system property.\n"
"For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the _Disabling tenant configurations_ section in the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Using OpenID Connect (OIDC) multi-tenancy] guide."
msgstr "Quarkus OIDCエクステンションを実行時に有効にする必要がある場合は、ビルド時に `quarkus.oidc.tenant-enabled=false` 、システムプロパティを使用して実行時に再有効化します。マルチテナントOIDC展開における個々のテナント構成の管理に関する詳細は、『 link:security-openid-connect-multitenancy.html#disable-tenant[Using OpenID Connect（OIDC）』マルチテナンシーガイド] の「 _テナント構成の無効 _化」のセクションを参照してください。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OpenID Connect client and filters"
msgstr "OpenID Connectクライアントとフィルター"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:\n"
"* `client-credentials`\n"
"* `password`\n"
"* `refresh_token`"
msgstr ""
"`quarkus-oidc-client` エクステンションは、以下のトークングラントをサポートする OpenID Connect および OAuth2 プロバイダからアクセストークンを取得し、リフレッシュするための `OidcClient` を提供します：\n"
"* `client-credentials` \n"
"* `password` \n"
"* `refresh_token`"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension and provides JAX-RS `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.\n"
"For example, it can be a public endpoint, or it can be protected with mTLS."
msgstr "`quarkus-oidc-client-filter` エクステンションは、 `quarkus-oidc-client` エクステンションを必要とし、JAX-RS `OidcClientRequestFilter` を提供します。これは、 `OidcClient` で取得したアクセストークンを HTTP `Authorization` ヘッダの `Bearer` スキーム値として設定するものです。このフィルタは、現在のQuarkusエンドポイントに注入されるMP RestClient実装に登録できますが、このサービスエンドポイントの認証要件には関係しません。たとえば、公開エンドポイントにすることも、mTLSで保護することもできます。"

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr "このシナリオでは、Quarkus OpenID Connectアダプターを使用してQuarkusエンドポイントを保護する必要はありません。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension and provides JAX-RS `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.\n"
"This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, which in turn must be protected by using the Quarkus OpenID Connect adapter.\n"
"This filter can be used to propagate the access token to the downstream services."
msgstr "`quarkus-oidc-client-filter` エクステンションは、 `quarkus-oidc-client` エクステンションを必要とし、JAX-RS `OidcClientRequestFilter` を提供します。これは、OpenID Connect ベアラーまたは 認可コードフローアクセス トークンを HTTP `Authorization` ヘッダーの `Bearer` スキーム値として設定します。このフィルターは、現在の Quarkus エンドポイントに挿入された MP RestClient 実装に登録できます。これは、Quarkus OpenID Connect アダプターを使用して保護する必要があります。 このフィルターを使用して、アクセス トークンを下流のサービスに伝搬できます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr "詳しくは、 xref:security-openid-connect-client.adoc[OpenID Connectクライアントとトークン伝搬クイックスタート] 、 xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) とOAuth2クライアントとフィルターのリファレンス] ガイドをご覧ください。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "SmallRye JWT authentication"
msgstr "SmallRye JWT 認証"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 1.2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens and represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "`quarkus-smallrye-jwt` エクステンションは、MicroProfile JSON Web Token (JWT) 1.2.1 の実装と、署名および暗号化された `JWT` トークンを検証する複数のオプションを提供し、それらを `org.eclipse.microprofile.jwt.JsonWebToken` として表します。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer Token authentication mechanism, and verifies only `JWT` tokens by using either PEM keys or the refreshable `JWK` key set.\n"
"`quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr "`quarkus-smallrye-jwt` は、 `quarkus-oidc` ベアラートークン認証メカニズムの代替となるもので、PEMキーまたはリフレッシュ可能な `JWK` キーセットを使用して、 `JWT` トークンだけを検証します。 `quarkus-smallrye-jwt` は、JWT生成APIも提供しており、これを使用して、 `signed` あるいは `inner-signed` 、 `encrypted` `JWT` トークンを簡単に作成できます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information, see xref:security-jwt.adoc[Using SmallRye JWT role-based access control]."
msgstr "詳細については、xref:security-jwt.adoc[SmallRye JWTロールベースアクセスコントロールの使用] を参照してください。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "OAuth2 authentication"
msgstr "OAuth2 認証"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-elytron-security-oauth2` provides an alternative to the `quarkus-oidc` Bearer Token authentication mechanism. `quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely.\n"
"For more information, see xref:security-oauth2.adoc[Using OAuth2]."
msgstr ""
"`quarkus-elytron-security-oauth2` は`quarkus-oidc` ベアラートークン認証メカニズムに対する別の選択肢を提供するものです。 `quarkus-elytron-security-oauth2` は `Elytron` をベースにしており、主に不透明なトークンをリモートでイントロスペクトするためのものです。\n"
"詳細は xref:security-oauth2.adoc[OAuth2 の使用] を参照ください。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr "OpenID Connect、SmallRye JWT、OAuth2認証メカニズムからの選択"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Use the following information to help you to decide which authentication mechanism to use to secure your Quarkus applications:"
msgstr "Quarkusアプリケーションを保護するためにどの認証メカニズムを使用するかを決定する際に、次の情報を使用してください:"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can be used to verify the Bearer tokens or authenticate the end users with the Authorization Code flow.\n"
"In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr ""
"`quarkus-oidc` は、KeycloakのようなOpenID Connectプロバイダを必要とします。このプロバイダは、ベアラートークンの検証や、認可コードフローによるエンドユーザの認証に使用できます。\n"
"どちらの場合も、 `quarkus-oidc` は指定されたOpenID Connectプロバイダへの接続が必要です。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If the user authentication requires Authorization Code flow or you need to support multiple tenants, use `quarkus-oidc`.\n"
"`quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr ""
"ユーザー認証に認可コードフローが必要な場合、または複数のテナントをサポートする必要がある場合は、 `quarkus-oidc` を使用してください。 \n"
"`quarkus-oidc` は、認可コードフローとベアラアクセストークンの両方を使用してユーザー情報を要求することもできます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If your Bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr "ベアラートークンを検証する必要がある場合は、 `quarkus-oidc` , `quarkus-smallrye-jwt` , または `quarkus-elytron-security-oauth2` を使用してください。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If your Bearer tokens are in a JWT format, you can use either of the three extensions. Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the JsonWebKey (JWK) set when the OpenID Connect provider rotates the keys.\n"
"Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` for verifying JWT tokens."
msgstr "ベアラートークンがJWT形式の場合、3つのエクステンションのいずれかを使用することができます。 `quarkus-oidc` と `quarkus-smallrye-jwt` は、OpenID Connect プロバイダがキーをローテーションする際に JsonWebKey (JWK) セットを更新することをサポートしています。したがって、リモートトークンイントロスペクションを避ける必要がある場合やプロバイダがサポートしていない場合は、JWTトークンの検証に `quarkus-oidc` または `quarkus-smallrye-jwt` を使用します。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If you need to introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support the verification of the opaque or binary tokens by using remote introspection.\n"
"`quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr ""
"JWT トークンをリモートでイントロスペクションする必要がある場合は、 `quarkus-oidc` または `quarkus-elytron-security-oauth2` のいずれかを使用できます。これらはリモート イントロスペクションを使用した不透明なトークンまたはバイナリトークンの検証をサポートしているためです。 \n"
"`quarkus-smallrye-jwt` は、不透明なトークンまたは JWT トークンの両方のリモートイントロスペクションをサポートしていませんが、その代わりに、通常は OpenID Connect プロバイダーから取得されるローカルで利用可能なキーに依存します。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-oidc` and `quarkus-smallrye-jwt` support the injecting of JWT and opaque tokens into the endpoint code.\n"
"Injected JWT tokens provide more information about the user. All extensions can have the tokens injected as `Principal`."
msgstr "`quarkus-oidc` と `quarkus-smallrye-jwt` は、エンドポイントのコードに JWT と opaque トークンを注入することをサポートしています。注入されたJWTトークンは、ユーザーに関するより多くの情報を提供します。すべてのエクステンションは、 `Principal` として注入されたトークンを持つことができます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`. `quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr "`quarkus-smallrye-jwt` は `quarkus-oidc` よりも多くの鍵フォーマットをサポートしています。 `quarkus-oidc` は JWK セットの一部である JWK 形式の鍵のみを使用するのに対し、 `quarkus-smallrye-jwt` は PEM 鍵をサポートしています。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.\n"
"While `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens but treats them as opaque tokens and verifies them through remote introspection."
msgstr ""
"`quarkus-smallrye-jwt` は、ローカルで署名されたトークン、内部で署名および暗号化されたトークン、暗号化されたトークンを扱います。 \n"
" `quarkus-oidc` や `quarkus-elytron-security-oauth2` もこのようなトークンを検証することもできますが、不透明なトークンとして扱い、リモートのイントロスペクションを通じて検証します。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr "不透明トークンやJWTトークンのリモートイントロスペクションのための軽量なライブラリが必要な場合は、 `quarkus-elytron-security-oauth2` を使用してください。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Your decision to choose whether to use opaque or JWT token format will be driven by architectural considerations.\n"
"Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.\n"
"Opaque tokens are effectively database pointers.\n"
"JWT tokens are significantly longer than the opaque tokens but the providers are effectively delegating storing most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr "不透明トークンかJWTトークンのどちらを使うかは、アーキテクチャ上の考慮事項によって決定されます。不透明トークンは、JWTトークンよりもはるかに短い傾向がありますが、トークンに関連する状態の大部分をプロバイダ・データベースに保持することが必要です。不透明トークンは、事実上データベース・ポインタです。JWTトークンは不透明トークンよりもかなり長いですが、プロバイダはトークン関連状態のほとんどをトークンクレームとして保存し、署名または暗号化することにより、クライアントに保存を事実上委任しています。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The following table provides a summary of the options for each authentication mechanism:"
msgstr "各認証メカニズムのオプションの概要は、次の表のとおりです:"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "quarkus-oidc"
msgstr "quarkus-oidc"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "quarkus-smallrye-jwt"
msgstr "quarkus-smallrye-jwt"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "quarkus-elytron-security-oauth2"
msgstr "quarkus-elytron-security-oauth2"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Requires Bearer JWT verification"
msgstr "ベアラーJWTの検証が必要"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Local verification or introspection"
msgstr "ローカル検証もしくはイントロスペクション"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Local verification"
msgstr "ローカル検証"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Introspection"
msgstr "イントロスペクション"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Requires Bearer opaque token verification"
msgstr "ベアラー不透明Tokenの検証が必要"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "No"
msgstr "No"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr "JWTトークンを検証するための `JsonWebKey` セットのリフレッシュ"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Yes"
msgstr "Yes"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Represent token as `Principal`"
msgstr "トークンを `Principal` として表現"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Inject JWT as MP JSON Web Token (JWT)"
msgstr "MP JSON Web Token（JWT）としてJWTを注入"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Authorization Code Flow"
msgstr "認可コードフロー"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "User info support"
msgstr "User info サポート"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "PEM key format support"
msgstr "PEMキーフォーマットサポート"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "SecretKey support"
msgstr "SecretKey のサポート"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "In JSON Web Key (JWK) format"
msgstr "JSON Web Key（JWK）フォーマットで"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr "内部署名付き暗号化トークン、または暗号化トークン"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Custom token verification"
msgstr "カスタムトークン検証"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "With injected JWT parser"
msgstr "注入されたJWTパーサーで"

#. type: Table
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Accept JWT as a cookie"
msgstr "JWTをCookieとして受入"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Identity providers"
msgstr "アイデンティティ・プロバイダー"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr "JPA `IdentityProvider` は、 `SecurityIdentity` インスタンスを作成します。このインスタンスは、ユーザー認証時に使用され、アクセス要求の確認と認可を行い、Quarkus アプリケーションを保護します。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`IdentityProvider` converts the authentication credentials provided by `HttpAuthenticationMechanism` to a `SecurityIdentity` instance."
msgstr "`IdentityProvider` は、 `HttpAuthenticationMechanism` から提供された認証クレデンシャルを、 `SecurityIdentity` インスタンスに変換します。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Some extensions, for example, `OIDC`, `OAuth2`, and `SmallRye JWT` have inline `IdentityProvider` implementations specific to the supported authentication flow.\n"
"For example, `quarkus-oidc` uses its own `IdentityProvider` to convert a token to a `SecurityIdentity` instance."
msgstr "一部のエクステンション、たとえば、 `OIDC` 、 `OAuth2` 、 `SmallRye JWT` は、サポートされる認証フローに固有のインライン `IdentityProvider` 実装を持ちます。たとえば、 `quarkus-oidc` は、トークンを `SecurityIdentity` インスタンスに変換するために、独自の `IdentityProvider` を使用します。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If you use `Basic` or `Form` HTTP-based authentication then you must add an `IdentityProvider` instance that can convert a username and password to a `SecurityIdentity` instance."
msgstr "`Basic` または `Form` HTTPベース認証を使用する場合、ユーザー名とパスワードを `SecurityIdentity` インスタンスに変換できる `IdentityProvider` インスタンスを追加する必要があります。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about `Basic` or `Form` HTTP-based authentication, see the following resources:"
msgstr "`Basic` または `Form` HTTPベース認証の詳細については、次のリソースを参照してください:"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication]"
msgstr "xref:security-basic-authentication-tutorial.adoc[Basic認証によるQuarkusアプリケーションの保護]"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "xref:security-jdbc.adoc[Using security with JDBC]"
msgstr "xref:security-jdbc.adoc[セキュリティをJDBCと一緒に使用]"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "xref:security-ldap.adoc[Using security with an LDAP realm]"
msgstr "xref:security-ldap.adoc[セキュリティをLDAPレルムと一緒に使用]"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Authorization"
msgstr "認可"

#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid ""
"Quarkus also supports role-based access control (RBAC).\n"
"For more information about RBAC and other authorization options in Quarkus, see xref:security-authorize-web-endpoints-reference.adoc[Security authorization]."
msgstr "Quarkusは、ロールベースのアクセス制御（RBAC）もサポートしています。RBACとQuarkusのその他の認証オプションの詳細については、「 xref:security-authorize-web-endpoints-reference.adoc[セキュリティ認証] 」を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus Security customization"
msgstr "Quarkus Securityのカスタマイズ"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Quarkus Security is highly customizable. You can customize the following core security components of Quarkus:"
msgstr "Quarkus Securityは、高度にカスタマイズ可能です。Quarkusの以下のコアセキュリティコンポーネントをカスタマイズすることができます:"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`HttpAuthenticationMechanism`"
msgstr "`HttpAuthenticationMechanism`"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`IdentityProvider`"
msgstr "`IdentityProvider`"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "`SecurityidentityAugmentor`"
msgstr "`SecurityidentityAugmentor`"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about customizing Quarkus Security including reactive security, and how to register a security provider, see xref:security-customization.adoc[Security customization]."
msgstr "リアクティブセキュリティを含むQuarkus Securityのカスタマイズ、およびセキュリティプロバイダーの登録方法の詳細については、 xref:security-customization.adoc[セキュリティのカスタマイズ] を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Combining authentication mechanisms"
msgstr "認証メカニズムの組み合わせ"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If the user credentials are provided by different sources, you can combine  authentication mechanisms.\n"
"For example, you can combine built-in `Basic` and `quarkus-oidc` `Bearer` authentication mechanisms."
msgstr ""
"ユーザ認証情報が異なるソースから提供される場合、認証メカニズムを組み合わせることができます。\n"
"例えば、組み込みの `Basic` および `quarkus-oidc` `Bearer` 認証メカニズムを組み合わせることができます。"

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "You cannot combine the `quarkus-oidc` `Bearer` and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP `Authorization Bearer` scheme."
msgstr "`quarkus-oidc` `Bearer` と `smallrye-jwt` の認証メカニズムは、どちらも HTTP `Authorization Bearer` スキームから抽出されたトークンを検証しようとするため、組み合わせることはできません。"

#. type: Title ===
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Path-specific authentication mechanisms"
msgstr "パス固有認証メカニズム"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr "次の設定例は、あるリクエストパスに対して、選択可能な単一の認証メカニズムを強制する方法を示しています："

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr "`auth-mechanism` プロパティの値が、 `HttpAuthenticationMechanism` がサポートする認証スキーム（例えば、 `basic` 、 `bearer` 、 `form` ）と一致しているようにして下さい。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Proactive authentication"
msgstr "プロアクティブ認証"

#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid ""
"By default, Quarkus does proactive authentication, which means that all incoming requests with credentials are authenticated regardless of whether the target page requires authentication.\n"
"For more information, see xref:security-built-in-authentication-support-concept.adoc#proactive-authentication[Proactive authentication]."
msgstr "デフォルトでは、Quarkusはプロアクティブ認証を行います。これは、ターゲットページが認証を必要としているかどうかに関係なく、認証情報を持つすべての受信リクエストが認証されることを意味します。詳細については、 xref:security-built-in-authentication-support-concept.adoc#proactive-authentication[プロアクティブ] 認証を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secure connections with SSL/TLS"
msgstr "SSL/TLSによるセキュアな接続"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "For more information about how Quarkus supports secure connections with SSL/TLS, see the xref:http-reference.adoc#ssl[HTTP reference] information."
msgstr "QuarkusがSSL/TLSを使用してセキュアな接続をサポートする方法の詳細については、 xref:http-reference.adoc#ssl[HTTPリファレンス] 情報を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Cross-origin resource sharing"
msgstr "クロスオリジンリソース共有"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"To make your Quarkus application accessible to another application running on a different domain, you need to configure cross-origin resource sharing (CORS).\n"
"For more information about the CORS filter that is provided by Quarkus, see the xref:http-reference.adoc#cors-filter[HTTP reference] information."
msgstr ""
"Quarkusアプリケーションを別のドメインで実行されている別のアプリケーションからアクセスできるようにするには、CORS（Cross-Origin Resource Sharing）を設定する必要があります。\n"
"Quarkusが提供するCORSフィルターの詳細については、 xref:http-reference.adoc#cors-filter[HTTPリファレンス] 情報を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Cross-site Request Forgery (CSRF) prevention"
msgstr "Cross-site Request Forgery (CSRF) 対策"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus Security provides a RESTEasy Reactive filter that can protect your applications against a https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery] attack.\n"
"For more information, see xref:security-csrf-prevention.adoc[Cross-Site Request Forgery Prevention]."
msgstr ""
"Quarkus Securityでは、 link:https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery] 攻撃からアプリケーションを保護するRESTEasy Reactiveフィルタを提供しています。\n"
"詳細については、 xref:security-csrf-prevention.adoc[クロスサイトリクエストフォージェリ対策] を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "SameSite cookies"
msgstr "SameSite クッキー"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"You can add a https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite[SameSite] cookie property to any of the cookies set by a Quarkus endpoint.\n"
"For more information, see xref:http-reference.adoc#same-site-cookie[SameSite cookies]."
msgstr "Quarkusのエンドポイントが設定するCookieのいずれにも、 link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite[SameSite] Cookieプロパティを追加することができます。詳細については、 xref:http-reference.adoc#same-site-cookie[SameSite cookies] を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secret engines"
msgstr "シークレットエンジン"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Secrets engines are components that store, generate, or encrypt data."
msgstr "シークレットエンジンは、データを保存、生成、暗号化するコンポーネントです。"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Quarkus provides comprehensive HashiCorp Vault support.\n"
"For more information, see the link:{vault-guide}[Quarkus and HashiCorp Vault] documentation."
msgstr "Quarkusは、HashiCorp Vaultを包括的にサポートしています。詳細については、 link:{vault-guide}[QuarkusとHashiCorp Vault] のドキュメントを参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secure serialization"
msgstr "セキュア・シリアライゼーション"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If your Quarkus Security architecture includes RESTEasy Reactive and Jackson, Quarkus can limit the fields that are included in JSON serialization based on the configured security.\n"
"For more information, see xref:resteasy-reactive.adoc#secure-serialization[Writing REST services with RESTEasy Reactive]."
msgstr "Quarkus SecurityアーキテクチャにRESTEasy ReactiveとJacksonが含まれている場合、Quarkusでは、設定されたセキュリティに基づいて、JSONシリアライズに含まれるフィールドを制限できます。詳細については、 xref:resteasy-reactive.adoc#secure-serialization[RESTEasy Reactiveを使用したRESTサービスの作成] を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Secure auto-generated resources by REST Data with Panache"
msgstr "自動生成されたリソースをREST Data with Panacheで保護"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"If you're using the REST Data with Panache extension to auto-generate your resources, you can still use the Security annotations within the package `javax.annotation.security`.\n"
"For more information, see xref:rest-data-panache.adoc#securing-endpoints[Securing auto-generated resources]."
msgstr "REST Data with Panache エクステンションを使用してリソースを自動生成している場合でも、パッケージ `javax.annotation.security` 内の Security アノテーションを使用することができます。詳しくは、 link:rest-data-panache.html#securing-endpoints[自動生成されたリソースの保護] を参照してください。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "National Vulnerability Database"
msgstr "National Vulnerability Database"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Most of the Quarkus tags are registered in the US link:https://nvd.nist.gov[National Vulnerability Database] (NVD) in Common Platform Enumeration (CPE) name format.\n"
"To view the registered Quarkus CPE names, use link:https://nvd.nist.gov/products/cpe/search/results?namingFormat=2.3&keyword=quarkus[this search query]."
msgstr "Quarkusのタグのほとんどは、米国の link:https://nvd.nist.gov[National Vulnerability Database] （NVD）にCommon Platform Enumeration（CPE）名フォーマットで登録されています。登録されたQuarkusのCPE名を表示するには、 link:https://nvd.nist.gov/products/cpe/search/results?namingFormat=2.3&keyword=quarkus[この検索クエリ] を使用します。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "If the NVE database flags a CVE against a Quarkus tag, a link that provides more details about the CVE is added to the given CPE name entry."
msgstr "NVEデータベースがQuarkusタグに対してCVEフラグを立てた場合、CVEの詳細を提供するリンクが所定のCPE名エントリに追加されます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "The NVD CPE team updates the list regularly, but if you encounter a false positive, report the details by creating an issue in the link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] repository."
msgstr "NVD CPEチームは定期的にリストを更新していますが、誤検出が発生した場合は、 link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] リポジトリにissueを作成して詳細を報告してください。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "You can detect the vulnerabilities at the application build time with an NVD feed by using the Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency check plugin]."
msgstr "Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency checkプラグイン] を使用することで、NVDフィードを使用してアプリケーションビルド時に脆弱性を検出することができます。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "To add the OWASP Dependency check plugin to your Quarkus Maven project, add the following XML configuration to the `pom.xml` file:"
msgstr "Quarkus MavenプロジェクトにOWASP Dependency checkプラグインを追加するには、 `pom.xml` ファイルに次のXML設定を追加します："

#. type: delimited block =
#: _versions/2.16/guides/security-overview-concept.adoc
#, fuzzy
msgid "Set the `owasp-dependency-check-plugin.version` value to `7.4.4` or later."
msgstr "`owasp-dependency-check-plugin.version` の値を `7.4.4` 以降に設定する。"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "Next, configure the plugin as follows:"
msgstr "次に、以下のようにプラグインを設定します:"

#. type: Plain text
#: _versions/2.16/guides/security-overview-concept.adoc
msgid "To detect less severe issues, adjust the value of `failBuildOnCVSS` to suppress the false positives, as demonstrated in the following code sample:"
msgstr "比較的深刻でない問題を検出するには、次のコードサンプルで示すように、 `failBuildOnCVSS` の値を調整して誤検出を抑制してください："

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"Ensure that you review and update the suppression list regularly to ensure that the results are up to date.\n"
"You can optionally apply a time limit to individual suppressions by adding an expiry attribute, as outlined in the following example:"
msgstr "抑制リストを定期的に見直し、更新して、結果が最新であるようにして下さい。次の例に示すように、expiry属性を追加することで、個々の抑制に時間制限を適用することも可能です:"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"`<suppress until=\"2022-01-01Z\">...</suppress>`\n"
"You can adjust the expiry date if you need to."
msgstr "`<suppress until=\"2022-01-01Z\">…​</suppress>` 必要であれば有効期限を調整することもできます。"

#. type: Title ==
#: _versions/2.16/guides/security-overview-concept.adoc
#, no-wrap
msgid "Quarkus Security testing"
msgstr "Quarkus Securityのテスト"

#: _versions/2.16/guides/security-overview-concept.adoc
msgid ""
"When testing Quarkus security, ensure that  your `IdentityProvider` is already set with usernames, passwords, and roles in `application.properties`.\n"
"For more information about testing Quarkus Security, see xref:security-testing.adoc#configuring-user-information[Configuring user information]."
msgstr ""
"Quarkusのセキュリティをテストする場合は、 `IdentityProvider` が、ユーザー名、パスワード、ロールが `application.properties` に設定されていることを確認してください。\n"
"Quarkusセキュリティのテストの詳細については、 xref:security-testing.adoc#configuring-user-information[ユーザー情報の設定] を参照してください。"
