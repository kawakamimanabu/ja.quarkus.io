msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Scripting with Quarkus"
msgstr "Quarkus によるスクリプティング"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Quarkus provides integration with https://jbang.dev[jbang] which allows you to write Java scripts/applications requiring no Maven nor Gradle to get running."
msgstr "Quarkus は Maven も Gradleも必要としない Java のスクリプトおよびアプリケーションを記述することができる https://jbang.dev[jbang] との統合を提供しています。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "In this guide, we will see how you can write a REST application using just a single Java file."
msgstr "このガイドでは、1つの Java ファイルだけを使って REST アプリケーションを書く方法を見ていきます。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "https://jbang.dev/download[JBang]"
msgstr "https://jbang.dev/download[JBang]"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Normally we would link to a Git repository to clone but in this case there is no additional files than the following:"
msgstr "通常は Git リポジトリに関連付けてクローンしますが、今回利用するのは以下のファイルだけです。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "In this guide, we create a straightforward application serving a `hello` endpoint with a single source file, no additional build files like `pom.xml` or `build.gradle` needed. To demonstrate dependency injection, this endpoint uses a `greeting` bean."
msgstr "このガイドでは、 `hello` エンドポイントを提供する簡単なアプリケーションを、 `pom.xml` や `build.gradle` のようなビルドファイルを追加することなく、単一のソースファイルで作成します。依存関係の注入の動作を確認するために、このエンドポイントは `greeting` Bean を使用します。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Creating the initial file"
msgstr "初期ファイルの作成"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "First, we need a Java file. JBang lets you create an initial version using:"
msgstr "最初に、Java ファイルが必要です。JBang を使うと、次のように初期バージョンの Java ファイルを作成することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "This command generates a .java file that you can directly run on Linux and macOS, i.e. `./quarkusapp.java` - on Windows you need to use `jbang quarkusapp.java`."
msgstr "このコマンドは、Linux と macOS で直接実行できる .java ファイルとして `./quarkusapp.java` を生成します。Windows では、 `jbang quarkusapp.java` を使用する必要があります。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "This initial version will print `Hello World` when run."
msgstr "この初期バージョンを実行すると `Hello World` を表示します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Once generated, look at the `quarkusapp.java` file."
msgstr "生成された `quarkusapp.java` ファイルを確認します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "You will find at the top a line looking like this:"
msgstr "一番上にこのような行があります。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "This line is what on Linux and macOS allows you to run it as a script. On Windows this line is ignored."
msgstr "この行は、Linux や macOS でスクリプトとして実行できるようにするためのものです。Windowsでは、この行は無視されます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "The next lines"
msgstr "次の行"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "illustrate how you add dependencies to this script. This is a feature of JBang."
msgstr "このスクリプトに依存関係を追加する方法を示しています。これは `jbang` の機能です。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Go ahead and update this line to include the `quarkus-bom` and the `quarkus-resteasy-reactive` dependency like so:"
msgstr "この行を `quarkus-resteasy` の依存関係を含むように更新します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now, run `jbang quarkusapp.java` and you will see JBang resolving this dependency and building the jar with help from Quarkus' JBang integration."
msgstr "ここで `jbang quarkusapp.java` を実行すると、 `jbang` がこの依存関係を解決し、Quarkus の jbang 統合の機能を利用して jar をビルドしていることがわかります。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "For now the application does nothing new."
msgstr "ここまでは、このアプリケーションは特に新しい動作をしていません。"

#. type: Block title
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "How do I edit this file and get content assist?"
msgstr "このファイルの編集時にコンテンツアシスト機能を利用する方法"

#: _versions/2.13/guides/scripting.adoc
msgid ""
"As there is nothing but a `.java` file, most IDE's don't handle content assist well.\n"
"To work around that you can run `jbang edit quarkusapp.java`, this will print out a directory that will have a temporary project setup you can use in your IDE."
msgstr "`.java` ファイルしかないので、ほとんどの IDE はコンテンツアシストをうまく処理できません。これを回避するには、 `jbang edit quarkusapp.java` を実行すると、IDE で使用できる一時的なプロジェクトの設定があるディレクトリーが出力されます。"

#. type: delimited block =
#: _versions/2.13/guides/scripting.adoc
msgid "On Linux/macOS you can run `<idecommand> `jbang edit quarkusapp.java``."
msgstr "Linux/macOS では、 `<idecommand> `jbang edit quarkusapp.java`` で実行可能です。"

#: _versions/2.13/guides/scripting.adoc
msgid ""
"If you add dependencies while editing, you can get JBang to automatically refresh\n"
"the IDE project using `jbang edit --live=<idecommand> quarkusapp.java`."
msgstr "編集中に依存関係を追加した場合は、 `jbang edit --live=<idecommand> quarkusapp.java` を使用することで、IDE プロジェクトを自動的に更新するように jbang を設定することができます。"

#. type: Title ===
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "The JAX-RS resources"
msgstr "JAX-RSリソース"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now let us replace the class with one that uses Quarkus features:"
msgstr "これを Quarkus の機能を使用するクラスに置き換えてみます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "It's a very simple class with a main method that starts Quarkus with a REST endpoint, returning \"hello\" to requests on \"/hello\"."
msgstr "Quarkus で REST エンドポイントを起動し、「/hello」へのリクエスト対して「hello」を返すメインメソッドを持つ、非常にシンプルなクラスです。"

#. type: Block title
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Why is the `main` method there?"
msgstr "`main` メソッドが存在する理由"

#. type: delimited block =
#: _versions/2.13/guides/scripting.adoc
msgid "A `main` method is currently needed for the JBang integration to work - we might remove this requirement in the future."
msgstr "現時点で `jbang` の統合が動作するためには `main` メソッドが必要です。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Running the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now when you run the application you will see Quarkus start up."
msgstr "アプリケーションを実行すると、 Quarkus が起動するのを確認することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Use: `jbang quarkusapp.java`:"
msgstr "`jbang quarkusapp.java` の利用"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Once started, you can request the provided endpoint:"
msgstr "起動後、提供されたエンドポイントにリクエストを送信することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "After that, hit `CTRL+C` to stop the application."
msgstr "その後 `CTRL+C` を入力し、アプリケーションを停止させます。"

#. type: Block title
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr "`curl -w \"\\n\"` で自動的に改行が追加されるようにします。"

#. type: delimited block =
#: _versions/2.13/guides/scripting.adoc
msgid "We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a '%' or put both result and next command prompt on the same line."
msgstr "この例では `curl -w \"\\n\"` を使用して、結果とプロンプトが1行で表示されてしまうことを防止しています。"

#. type: Block title
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Why is `quarkus-resteasy-reactive` not resolved?"
msgstr "`quarkus-resteasy-reactive` が解決されない理由"

#: _versions/2.13/guides/scripting.adoc
msgid ""
"In this second run you should not see a line saying it is resolving `quarkus-resteasy-reactive` as JBang caches the dependency resolution between runs.\n"
"If you want to clear the caches to force resolution use `jbang cache clear`."
msgstr "1回めの実行で jbang が依存関係の解決をキャッシュしているため、2回目の実行では `quarkus-resteasy` の依存関係を解決する行は表示されません。キャッシュをクリアして強制的に解決させたい場合は `jbang cache clear` を利用します。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Using injection"
msgstr "依存性注入の使用"

#: _versions/2.13/guides/scripting.adoc
msgid ""
"Dependency injection in Quarkus is based on ArC which is a CDI-based dependency injection solution tailored for Quarkus' architecture.\n"
"You can learn more about it in the xref:cdi-reference.adoc[Contexts and Dependency Injection guide]."
msgstr "Quarkusの依存性インジェクションは、Quarkusのアーキテクチャに合わせて調整されたCDIベースの依存性インジェクションソリューションであるArCをベースにしています。ArCの詳細については、 link:cdi-reference[コンテキストと依存性注入ガイド] を参照してください。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "ArC comes as a dependency of `quarkus-resteasy-reactive` so you already have it handy."
msgstr "ArCは `quarkus-resteasy` の依存関係として提供されるため、新たに追加する必要はありません。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Let's modify the application and add a companion bean."
msgstr "アプリケーションを修正してコンパニオンクラスのBeanを追加してみます。"

#: _versions/2.13/guides/scripting.adoc
msgid ""
"Normally you would add a separate class, but as we are aiming to have it all in one file you will add a\n"
"nested class."
msgstr "通常は別のクラスを追加しますが、一つのファイルにまとめようとしているので、入れ子クラスを追加します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Add the following *inside* the `quarkusapp` class body."
msgstr "`quarkusapp` クラスの *内側に* 以下を追加します。"

#. type: Block title
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Use of nested static public classes"
msgstr "ネストされた静的パブリッククラスの使用"

#. type: delimited block =
#: _versions/2.13/guides/scripting.adoc
msgid "We are using a nested static public class instead of a top level class for two reasons:"
msgstr "トップレベルのクラスではなく、ネストされた静的パブリッククラスを使用しているのには、2つの理由があります。"

#. type: delimited block =
#: _versions/2.13/guides/scripting.adoc
msgid "JBang currently does not support multiple source files."
msgstr "現在、 jbang は複数のソースファイルをサポートしていません。"

#. type: delimited block =
#: _versions/2.13/guides/scripting.adoc
msgid "All Java frameworks relying on introspection have challenges using top level classes as they are not as visible as public classes; and in Java there can only be one top level public class in a file."
msgstr "イントロスペクションに依存する全てのJavaフレームワークは、トップレベルクラスがパブリッククラスのようなアクセス修飾子を持たないため、トップレベルクラスを使用することに課題があります。そして Java では、1つのファイルにトップレベルのパブリッククラスは1つしか記述できません。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Edit the `quarksapp` class to inject the `GreetingService` and create a new endpoint using it, you should end up with something like:"
msgstr "`quarksapp` クラスを編集して `GreetingService` を注入し、それを使って新しいエンドポイントを作成します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now when you run `jbang quarkusapp.java` you can check what the new end point returns:"
msgstr "jbang quarkusapp.java` を実行すると、新しいエンドポイントが返す内容を確認することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now that is unexpected, why is it returning `hello null` and not `hello quarkus`?"
msgstr "予想に反し、 `hello quarkus` ではなく `hello null` が返却されます。この理由は何でしょうか？"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "The reason is that RESTEasy Reactive relies on the `-parameters` compiler flag to be set to be able to map `{name}` to the `name` parameter."
msgstr "これは、RESTEasy Reactive が `name` パラメータに `{name}` をマップできるようにするために `-parameters` コンパイラーフラグをセットすることに依存しているからです。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "We fix that by adding the following comment instruction to the file:"
msgstr "ファイルに以下のコメント命令文を追加することで修正します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now when you run with `jbang quarkusapp.java` the end point should return what you expect:"
msgstr "`jbang quarkusapp.java` を実行すると、エンドポイントは期待通りの値を返すようになったことが確認できます。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Debugging"
msgstr "デバッグ"

#: _versions/2.13/guides/scripting.adoc
msgid ""
"To debug the application you use `jbang --debug quarkusapp.java` and you can use your IDE to connect on port 4004; if you want to use the\n"
"more traditional Quarkus debug port you can use `jbang --debug=5005 quarkusapp.java`."
msgstr "`jbang --debug=5005 quarkusapp.java` アプリケーションのデバッグには `jbang --debug quarkusapp.java` を使用し、IDEを使用してポート4004で接続することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Note: JBang debugging always suspends thus you need to connect the debugger to have the application run."
msgstr "注意: `jbang` デバッグは常に一時停止しているため、アプリケーションを実行させためるにはデバッガーを接続する必要があります。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Logging"
msgstr "ロギング"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "To use logging in Quarkus scripting with JBang you do as usual, with configuring a logger, i.e."
msgstr "jbang による Quarkus スクリプトでロギングを使用するには、通常通りロガーを設定します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "To get it to work you need to add a Java option to ensure the logging is initialized properly, i.e."
msgstr "これを動作させるためには、ロギングが適切に初期化されるように Java オプションを追加する必要があります。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "With that in place running `jbang quarkusapp.java` will log and render as expected."
msgstr "これにより、 `jbang quarkusapp.java` を実行すると、期待通りにロギングが行われます。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Configuring Application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "You can use `//Q:CONFIG <property>=<value>` to set up static configuration for your application."
msgstr "アプリケーションの静的な設定を行うために、 `//Q:CONFIG <property>=<value>` を使用することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "I.e. if you wanted to add the `smallrye-openapi` and `swagger-ui` extensions and have the Swagger UI always show up you would add the following:"
msgstr "例えば `smallrye-openapi` と `swagger-ui` のエクステンションを追加して Swagger UI を常に表示させたい場合は、以下のように追加します。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "Now during build the `quarkus.swagger-ui.always-include` will be generated into the resulting jar and `http://0.0.0.0:8080/q/swagger-ui` will be available when run."
msgstr "これでビルドによって出来上がるjar内に `quarkus.swagger-ui.always-include` が生成されるようになり、実行時に `http://0.0.0.0:8080/q/swagger-ui` が利用可能になります。"

#. type: Title ==
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Running as a native application"
msgstr "ネイティブアプリケーションとしての実行"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "If you have the `native-image` binary installed and `GRAALVM_HOME` set, you can get the native executable built and run using `jbang --native quarkusapp.java`:"
msgstr "`native-image` バイナリーがインストールされていて `GRAALVM_HOME` が設定されている場合は、 `jbang --native quarkusapp.java` を使用してネイティブ実行可能ファイルをビルドして実行することができます。"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "This native build will take some time on first run but any subsequent runs (without changing `quarkusapp.java`) will be close to instant thanks to JBang cache:"
msgstr "このネイティブビルドは最初の実行には時間がかかりますが、その後は ( `quarkusapp.java` を変更せずに) jbang キャッシュのおかげですぐに実行できるようになります。"

#. type: Title ===
#: _versions/2.13/guides/scripting.adoc
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain text
#: _versions/2.13/guides/scripting.adoc
msgid "If you want to get started with Quarkus or write something quickly, Quarkus Scripting with jbang lets you do that. No Maven, no Gradle - just a Java file. In this guide we outlined the very basics on using Quarkus with JBang; if you want to learn more about what JBang can do, go see https://jbang.dev."
msgstr "Quarkusを使い始めたい、または何かを素早くコーディングしたい場合、 jbang による Quarkus スクリプティングを使用すると便利です。Java ファイルだけでよく、Maven や Gradle は必要ありません。このガイドでは、JBang を使用した Quarkus の基本的な使い方を説明しました。JBangでできることの詳細については、 https://jbang.dev を参照してください。"
