# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2025-03-16 08:17+0000\n"
"PO-Revision-Date: 2025-03-06 15:57+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.5\n"

#. type: Attribute 'alt' of: <div><div><div><img><img>
#: upstream/_includes/performance.html:4 upstream/_includes/performance.html:5
#, fuzzy
msgid "Container image"
msgstr "コンテナイメージ"

#. type: Content of: <div><div><div><p>
#: upstream/_includes/performance.html:8
#, fuzzy
msgid "Quarkus is engineered to be efficient by using build-time optimizations and a reactive core to achieve fast startup times, high throughput, low response latency, reduced memory footprint, and minimal resource consumption. As a result, Quarkus is fast... real fast."
msgstr "Quarkusは、ビルド時の最適化とリアクティブコアを使用して効率的に設計されており、高速起動、高スループット、低レスポンスレイテンシー、メモリフットプリントの削減、リソース消費の最小化を実現しています。その結果、Quarkusは高速です。"

#. type: Content of: <div><div><div><h2>
#: upstream/_includes/performance.html:11
#, fuzzy
msgid "Starting fast by doing less: the build-time principle"
msgstr "少ない作業で速く始める：ビルドタイムの原則"

#. type: Content of: <div><div><div><p>
#: upstream/_includes/performance.html:14
#, fuzzy
msgid "Quarkus redefines how Java applications are built and executed by shifting much of the work to the build phase ensuring that the costly work happens only once — during the build process — not at every startup. It results in faster, smaller, and more resource-efficient Java applications on both GraalVM native images and traditional JVM deployments."
msgstr "Quarkusは、作業の多くをビルドフェーズに移行することで、Javaアプリケーションのビルドと実行の方法を再定義します。その結果、GraalVMネイティブ・イメージと従来のJVMデプロイの両方において、より高速で、より小さく、よりリソース効率の高いJavaアプリケーションが実現します。"

#. type: Content of: <div><div><div><p>
#: upstream/_includes/performance.html:15
#, fuzzy
msgid "For example, at build time, Quarkus reads part of the application configuration, scans the classpath for annotated classes, and constructs a model of the application. By doing this early, Quarkus has enough information to eliminate unnecessary components and compute the exact startup instructions required."
msgstr "例えば、ビルド時にQuarkusはアプリケーション構成の一部を読み取り、クラスパスをスキャンして注釈付きクラスを探し、アプリケーションのモデルを構築します。これを早期に行うことで、Quarkusは不要なコンポーネントを削除し、必要な起動命令を正確に計算するのに十分な情報を得ます。"

#. type: Attribute 'alt' of: <div><div><div><img><img>
#: upstream/_includes/performance.html:18
#: upstream/_includes/performance.html:19
msgid "Quarkus Build Time Principle"
msgstr "Quarkus ビルド時原則"

#. type: Content of: <div><div><div><p>
#: upstream/_includes/performance.html:22
#, fuzzy
msgid "This build-time optimization offers several key benefits:"
msgstr "このビルド時間の最適化には、いくつかの重要な利点があります："

#. type: Content of: <div><div><div><ol><li>
#: upstream/_includes/performance.html:24
msgid "<strong>Reduced startup time:</strong> Quarkus performs most of the heavy work at build-time, significantly cutting startup time and allowing the app to reach peak performance faster."
msgstr ""

#. type: Content of: <div><div><div><ol><li>
#: upstream/_includes/performance.html:25
#, fuzzy
msgid "<strong>Lower memory consumption:</strong> By minimizing allocations and class loading, Quarkus reduces memory usage. Replacing reflection with build-time bytecode generation further lowers the JVM's runtime workload."
msgstr "<strong>メモリ消費量の削減：</strong>割り当てとクラスのロードを最小限に抑えることで、Quarkusはメモリ使用量を削減します。リフレクションをビルド時のバイトコード生成に置き換えることで、JVMの実行時の負荷がさらに軽減されます。"

#. type: Content of: <div><div><div><ol><li>
#: upstream/_includes/performance.html:26
#, fuzzy
msgid "<strong>Better latency and improved throughput:</strong> Quarkus generates highly optimized code at build time and prunes unnecessary classes and methods. For instance, it weaves layers of indirection together, enabling better JIT optimizations. These improvements result in faster code and better latency."
msgstr "<strong>待ち時間の短縮とスループットの向上</strong>Quarkusは、ビルド時に高度に最適化されたコードを生成し、不要なクラスやメソッドを削除します。Quarkusは、ビルド時に高度に最適化されたコードを生成し、不要なクラスやメソッドを削除します。たとえば、レイヤーのインダイレクトをまとめ、より優れたJIT最適化を可能にします。このような改善により、コードが高速化され、レイテンシーが向上します。"

#. type: Content of: <div><div><h2>
#: upstream/_includes/performance.html:34
#, fuzzy
msgid "High concurrency without the headaches: the reactive core"
msgstr "頭を悩ませることなく高い並行性を実現：リアクティブ・コア"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:35
#, fuzzy
msgid "Quarkus is built on reactive principles, using an efficient asynchronous, non-blocking engine based on Netty and Eclipse Vert.x. It employs a few event loops instead of a large thread pool, reducing resource usage and improving response times by optimizing for hardware behavior."
msgstr "Quarkusはリアクティブの原則に基づいて構築されており、NettyとEclipse Vert.xをベースとした効率的な非同期、ノンブロッキングエンジンを使用しています。大規模なスレッドプールの代わりに少数のイベントループを採用し、ハードウェアの動作に合わせて最適化することで、リソースの使用量を削減し、応答時間を短縮します。"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:36
#, fuzzy
msgid "Reactive underneath does not mean you must write reactive code. Quarkus offers three development models:"
msgstr "リアクティブアンダーだからといって、リアクティブなコードを書かなければならないわけではありません。Quarkusには3つの開発モデルがあります："

#. type: Content of: <div><div><ol><li>
#: upstream/_includes/performance.html:38
#, fuzzy
msgid "<strong>Imperative model:</strong> A traditional synchronous approach with faster execution due to an optimized I/O layer, ideal for lower concurrency. High concurrency increases memory use."
msgstr "<strong>命令型モデル：</strong>最適化されたI/Oレイヤーにより実行が高速化された伝統的な同期型アプローチで、並行性が低い場合に最適。並行性が高いとメモリ使用量が増えます。"

#. type: Content of: <div><div><ol><li>
#: upstream/_includes/performance.html:39
#, fuzzy
msgid "<strong>Reactive model:</strong> Enables high concurrency with minimal resources using asynchronous, non-blocking code, but is more complex to implement and debug."
msgstr "<strong>リアクティブモデル：</strong>非同期、ノンブロッキングのコードを使用することで、最小限のリソースで高い並行性を実現できますが、実装やデバッグが複雑になります。"

#. type: Content of: <div><div><ol><li>
#: upstream/_includes/performance.html:40
#, fuzzy
msgid "<strong>Virtual threads (JDK 21+):</strong> Combines the benefits of imperative and reactive models, allowing imperative code to run on lightweight virtual threads for high concurrency with low memory overhead, though some limitations remain."
msgstr "<strong>仮想スレッド（JDK 21+）：</strong>命令型モデルと反応型モデルの利点を組み合わせ、命令型コードを軽量の仮想スレッド上で実行することで、メモリ・オーバーヘッドを抑えながら高い並行性を実現します。"

#. type: Content of: <div><div><h2>
#: upstream/_includes/performance.html:47
#, fuzzy
msgid "What happens when the build time principle and the reactive core are combined?"
msgstr "ビルド・タイム原則とリアクティブ・コアを組み合わせるとどうなりますか？"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:48
#, fuzzy
msgid "The combination of the build time optimization and reactive core makes Quarkus a highly efficient framework, excelling in several key areas:"
msgstr "ビルド時間の最適化とリアクティブコアの組み合わせにより、Quarkusは非常に効率的なフレームワークとなり、いくつかの重要な分野で優れています："

#. type: Attribute 'alt' of: <div><div><img><img>
#: upstream/_includes/performance.html:51
#: upstream/_includes/performance.html:52
#, fuzzy
msgid "Memory icon"
msgstr "メモリーアイコン"

#. type: Content of: <div><div><h3>
#: upstream/_includes/performance.html:55
#, fuzzy
msgid "Reduced Memory"
msgstr "メモリの削減"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:56
#, fuzzy
msgid "The build-time principle minimizes runtime memory use by eliminating unnecessary components and precomputing at build time, reducing class loading and memory allocations. The reactive core further cuts memory usage by using a few event loops instead of a large thread pool, allowing the application to handle higher loads with a smaller memory footprint and enabling high deployment density."
msgstr "ビルド時原則は、ビルド時に不要なコンポーネントや事前計算を排除し、クラスのロードとメモリ割り当てを削減することで、実行時のメモリ使用を最小限に抑えます。リアクティブコアは、大規模なスレッドプールの代わりに少数のイベントループを使用することでメモリ使用量をさらに削減し、より小さなメモリフットプリントで高負荷を処理できるアプリケーションを実現し、高いデプロイ密度を可能にします。"

#. type: Attribute 'alt' of: <div><div><img><img>
#: upstream/_includes/performance.html:59
#: upstream/_includes/performance.html:60
#, fuzzy
msgid "Startup icon"
msgstr "起動アイコン"

#. type: Content of: <div><div><h3>
#: upstream/_includes/performance.html:63
#, fuzzy
msgid "Fast Startup Time"
msgstr "高速起動時間"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:64
#, fuzzy
msgid "Thanks to the build-time optimizations, most of the application’s heavy lifting, such as classpath scanning, configuration loading, and dependency injection setup, happens before the application even starts. This significantly reduces the time it takes to get the application up and ready to serve. The reactive core contributes to this by ensuring that I/O operations are handled with minimal blocking, further reducing the startup latency.  The efficient startup process means the application can respond to new load conditions more quickly. This combination supports implementing LightSwitchOps patterns, enabling elasticity while controlling costs."
msgstr "ビルド時の最適化のおかげで、クラスパスのスキャン、設定の読み込み、依存性注入のセットアップなど、アプリケーションの重労働のほとんどは、アプリケーションが開始する前に行われます。これにより、アプリケーションを立ち上げてサービスを提供する準備ができるまでの時間が大幅に短縮されます。リアクティブコアは、I/O操作が最小限のブロッキングで処理されるようにすることでこれに貢献し、起動時の待ち時間をさらに短縮します。  効率的なスタートアップ・プロセスは、アプリケーションが新しい負荷状況に迅速に対応できることを意味します。この組み合わせは、LightSwitchOpsパターンの実装をサポートし、コストを抑制しながら弾力性を実現します。"

#. type: Attribute 'alt' of: <div><div><img><img>
#: upstream/_includes/performance.html:67
#: upstream/_includes/performance.html:68
#, fuzzy
msgid "Throughput icon"
msgstr "スループットアイコン"

#. type: Content of: <div><div><h3>
#: upstream/_includes/performance.html:71
#, fuzzy
msgid "High Throughput"
msgstr "高スループット"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:72
#, fuzzy
msgid "Build-time optimizations ensure tasks like classpath scanning, configuration loading, and dependency injection are completed before startup, greatly reducing startup time. This efficient startup enables quicker responses to load changes and supports LightSwitchOps patterns for cost-effective elasticity. The reactive core minimizes blocking in I/O operations, further lowering latency and allowing handling a large number of concurrent tasks."
msgstr "ビルド時の最適化により、クラスパスのスキャン、構成のロード、依存性の注入などのタスクが起動前に完了し、起動時間が大幅に短縮されます。この効率的な起動により、負荷の変化に対する迅速な応答が可能になり、費用対効果の高い弾力性を実現するLightSwitchOpsパターンをサポートします。リアクティブ・コアは、I/O操作のブロッキングを最小限に抑え、待ち時間をさらに短縮し、多数の同時タスクを処理できるようにします。"

#. type: Attribute 'alt' of: <div><div><img><img>
#: upstream/_includes/performance.html:75
#: upstream/_includes/performance.html:76
#, fuzzy
msgid "Disk footprint icon"
msgstr "ディスクフットプリントアイコン"

#. type: Content of: <div><div><h3>
#: upstream/_includes/performance.html:79
#, fuzzy
msgid "Optimized Resource Consumption"
msgstr "リソース消費の最適化"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:80
#, fuzzy
msgid "The build-time principle and reactive core optimize CPU, memory, and system resource use, enabling high performance with fewer resources. This lowers operational costs in cloud environments and offers sustainability benefits through reduced resource consumption."
msgstr "ビルドタイム原則とリアクティブコアは、CPU、メモリ、システムリソースの使用を最適化し、少ないリソースで高いパフォーマンスを実現します。これにより、クラウド環境における運用コストを削減し、リソースの消費を抑えることで持続可能なメリットを提供します。"

#. type: Content of: <div><div><h2>
#: upstream/_includes/performance.html:85
#, fuzzy
msgid "Continuously Measuring, Continuously Improving"
msgstr "継続的な測定、継続的な改善"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:86
#, fuzzy
msgid "Quarkus is dedicated to continuously improving performance, especially for code running on the critical execution (hot) path. Through ongoing optimizations, Quarkus ensures that every instruction and allocated byte matters, making it one of the most efficient frameworks available for developing <a href=\"https://www.techempower.com/benchmarks/#hw=ph&test=fortune&section=data-r22&c=e&f=0-0-0-0-0-0-0-0-0-2-4zsow-0-0-0-0&l=5181v-6bl\">high-performance, cloud-ready applications.</a>"
msgstr "Quarkusは、特にクリティカル実行（ホット）パスで実行されるコードのパフォーマンスを継続的に向上させることに専念しています。Quarkusは、継続的な最適化によって、すべての命令と割り当てバイトが重要であることを保証し、<a href=\"https://www.techempower.com/benchmarks/#hw=ph&test=fortune&section=data-r22&c=e&f=0-0-0-0-0-0-0-0-0-2-4zsow-0-0-0-0&l=5181v-6bl\">高性能でクラウド対応のアプリケーションを</a>開発するための最も効率的なフレームワークの1つとなっています<a href=\"https://www.techempower.com/benchmarks/#hw=ph&test=fortune&section=data-r22&c=e&f=0-0-0-0-0-0-0-0-0-2-4zsow-0-0-0-0&l=5181v-6bl\">。</a>"

#. type: Content of: <div><div><h2>
#: upstream/_includes/performance.html:87
msgid "Related Links"
msgstr "関連リンク"

#. type: Content of: <div><div><p>
#: upstream/_includes/performance.html:88
#, fuzzy
msgid "<a href=\"https://quarkus.io/blog/reactive-crud-performance-case-study/\">\"Reactive CRUD Performance: A Case Study\" Blog Post</a>"
msgstr "<a href=\"https://quarkus.io/blog/reactive-crud-performance-case-study/\">「リアクティブCRUDのパフォーマンス：ケーススタディ\" ブログ記事</a>"

#. type: Content of: <div><div><p><br>
#: upstream/_includes/performance.html:89
#, fuzzy
msgid "<a href=\"https://quarkus.io/guides/performance-measure\">\"Measuring Performance\" guide</a>"
msgstr "<a href=\"https://quarkus.io/guides/performance-measure\">「パフォーマンス測定」ガイド</a>"

#, fuzzy
#~ msgid "<strong>Reduced startup time:</strong> Quarkus performs most of the heavy work at runtime, significantly cutting startup time and allowing the app to reach peak performance faster."
#~ msgstr "<strong>起動時間の短縮：</strong>Quarkusは、実行時に重い作業のほとんどを実行するため、起動時間が大幅に短縮され、アプリのパフォーマンスがピークに達するまでの時間が短縮されます。"
