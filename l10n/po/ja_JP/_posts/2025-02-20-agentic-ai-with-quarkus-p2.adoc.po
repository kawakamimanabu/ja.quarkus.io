msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Agentic AI with Quarkus - part 2"
msgstr "QuarkusによるエージェントAI - パート2"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"The https://quarkus.io/blog/agentic-ai-with-quarkus/[first part] of this blog post series briefly introduced agentic AI and discussed workflow patterns.\n"
"This post will explore another kind of pattern: _agents_.\n"
"The main difference between the two is that workflow patterns are defined programmatically, while agents are more flexible and can handle a broader range of tasks.\n"
"With agents, the LLM orchestrates the sequence of steps instead of being externally orchestrated programmatically, thus reaching a higher level of autonomy and flexibility."
msgstr "このブログポストシリーズの link:https://quarkus.io/blog/agentic-ai-with-quarkus/[最初のパートでは] 、エージェントAIを簡単に紹介し、ワークフローパターンについて説明しました。今回は、もう一つのパターンである _エージェントについて_ 説明します。この2つの主な違いは、ワークフローパターンがプログラムで定義されるのに対して、エージェントはより柔軟で幅広いタスクを扱うことができるという点です。エージェントでは、外部からプログラム的にオーケストレーションされる代わりに、LLM が一連のステップをオーケストレーションします。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Agents"
msgstr "代理店"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"Agents differ from the workflow patterns because the control flow is entirely delegated to LLMs instead of being implemented programmatically.\n"
"To successfully implement agents, the LLM must be able to reason and have access to a set of tools (_toolbox_).\n"
"The LLM orchestrates the sequence of steps and decides which tools to call with which parameters.\n"
"From an external point of view, invoking an agent can be seen as invoking a function that opportunistically invokes tools to complete determinate subtasks."
msgstr "エージェントはワークフローパターンとは異なり、制御フローはプログラム的に実装されるのではなく、LLM に完全に委譲されます。エージェントをうまく実装するには、LLM は推論ができ、一連のツール _（ツールボックス_ ）にアクセスできなければなりません。LLMは一連のステップをオーケストレーションし、どのツールをどのパラメータで呼び出すかを決定します。外部から見ると、エージェントを呼び出すことは、決定されたサブタスクを完了するためにツールを日和見的に呼び出す関数を呼び出すことと見なすことができます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The agent's toolbox can be composed of:"
msgstr "エージェントのツールボックスの構成は以下の通りです："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "External services (like HTTP endpoints)"
msgstr "外部サービス（HTTPエンドポイントなど）"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Other LLM / agents"
msgstr "その他のLLM / エージェント"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Methods providing data from a data store"
msgstr "データストアからデータを提供する方法"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Methods provided by the application code itself"
msgstr "アプリケーション・コード自体が提供するメソッド"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Agents can invoke tools"
msgstr "エージェントはツールを呼び出すことができます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"In Quarkus, agents are represented by interfaces annotated with `@RegisterAiService.`\n"
"They are called _AI services_.\n"
"In that aspect, they are not different from the _workflow patterns_.\n"
"The main difference is that the methods of an agent interface are annotated with `@ToolBox` to declare the tools that the LLM can use to complete the task:"
msgstr "Quarkusでは、エージェントは、 `@RegisterAiService.` でアノテーションされたインターフェースで表現されます。この点では、 _ワークフローパターンと_ 変わりません。主な違いは、エージェントインターフェースのメソッドが、LLMがタスクを完了するために使用できるツールを宣言するために、 `@ToolBox` でアノテーションされることです："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Alternatively, the `@RegisterAiService` annotation can receive the set of tools in its `tools` parameter."
msgstr "あるいは、 `@RegisterAiService` 注釈は、 `tools` パラメータでツールのセットを受け取ることができます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Let's look at some examples of agents to understand better how they work and what they can achieve."
msgstr "エージェントがどのように機能し、何を達成できるかをよりよく理解するために、エージェントの例をいくつか見てみましょう。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The weather forecast agent"
msgstr "天気予報エージェント"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"This https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool[first example] of agentic AI implements the following https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/WeatherForecastAgent.java[weather forecast agent].\n"
"The agent receives a user prompt and must answer questions about the weather using at most three lines.\n"
"To achieve this goal, the agent has a toolbox containing:"
msgstr "エージェント型AIの link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool[最初の例として] 、以下の link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/WeatherForecastAgent.java[天気予報エージェントを] 実装します。このエージェントは、ユーザからのプロンプトを受け取り、天気に関する質問に最大3行で答えなければなりません。この目標を達成するために、エージェントは以下を含むツールボックスを持っています："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "An AI service specialized in extracting the name of a city from the user's prompt - which can be another _agent_;"
msgstr "ユーザーのプロンプトから都市名を抽出することに特化したAIサービス；"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "A web service returning the geographic coordinates of a given city - this is a remote call;"
msgstr "指定した都市の地理座標を返すウェブサービス - これはリモートコールです；"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "A second web service providing the weather forecast for the given latitude and longitude - another remote call."
msgstr "指定された緯度と経度の天気予報を提供する2つ目のウェブサービス。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Weather agent architecture"
msgstr "ウェザーエージェントアーキテクチャ"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"We do not indicate when and how these tools are used; we just add them to the toolbox.\n"
"The LLM decides when to call them and with which parameters."
msgstr "私たちは、これらのツールをいつ、どのように使うかは示しません。LLMは、いつ、どのパラメータでそれらを呼び出すかを決定します。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Let's see how are defined the tools used by this agent:"
msgstr "このエージェントが使用するツールの定義を見てみましょう："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "1 . https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/CityExtractorAgent.java[Another AI Service] specialized in extracting the name of a city from the user's prompt (thus also demonstrating how easily an _agent_ can be configured to become a tool for another AI service/agent)."
msgstr "1 . link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/CityExtractorAgent.java[別のAIサービスは] 、ユーザーのプロンプトから都市名を抽出することに特化しています。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"2 . A https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/geo/GeoCodingService.java[web service] returning the geographic coordinates of a given city.\n"
"It's a simple Quarkus REST client interface, meaning that Quarkus automatically generates the actual implementation.\n"
"It can be combined with fault tolerance, metrics, and other Quarkus features."
msgstr "2 .指定した都市の地理座標を返す link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/geo/GeoCodingService.java[ウェブサービス] です。これはシンプルなQuarkus RESTクライアントインターフェースで、Quarkusが実際の実装を自動的に生成します。フォールトトレランス、メトリクス、その他のQuarkus機能と組み合わせることができます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "3 . Another https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/weather/WeatherForecastService.java[web service] providing the weather forecast for the given latitude and longitude."
msgstr "3 .指定された緯度と経度の天気予報を提供する別の link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/weather/WeatherForecastService.java[ウェブサービス] 。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "It's possible to invoke the https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/WeatherResource.java[HTTP endpoint] exposing this agent-based weather service:"
msgstr "このエージェントベースの気象サービスを公開する link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/aiastool/WeatherResource.java[HTTPエンドポイントを] 呼び出すことができます："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The response will be something like:"
msgstr "というような返事が返ってきます："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"The weather in Rome today will have a maximum temperature of 14.3°C, minimum temperature of 2.0°C.\n"
"No precipitation expected, and the wind speed will be up to 5.6 km/h.\n"
"The overall weather condition is expected to be cloudy."
msgstr "今日、ローマでは最高気温 が14.3℃、最低気温 が2.0℃の予報。降水量は予想されておらず、風速は最大5.6km/hでしょう。全般的な天候は曇り。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"In essence, this control flow is quite similar to the prompt chaining workflow (introduced in the https://quarkus.io/blog/agentic-ai-with-quarkus/#prompt-chaining[previous post]), where the user input is sequentially transformed in steps (in this case, going from the prompt to the name of the city contained in that prompt to the geographical coordinates of that city, to the weather forecasts at those coordinates).\n"
"The significant difference is that the LLM directly orchestrates the sequence of steps instead of being externally orchestrated programmatically."
msgstr "要するに、この制御フローは（ link:https://quarkus.io/blog/agentic-ai-with-quarkus/#prompt-chaining[前回の記事で] 紹介した）プロンプト・チェイニング・ワークフローとよく似ており、ユーザー入力はステップを追って順次変換されます（この場合、プロンプトから、そのプロンプトに含まれる都市の名前、その都市の地理的座標、その座標の天気予報へと進みます）。大きな違いは、LLMが外部からプログラム的にオーケストレーションされるのではなく、一連のステップを直接オーケストレーションすることです。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The observability automatically provided by Quarkus (in the GitHub project, observability is disabled by default, but it can be turned on with the `-Dobservability` flag) allows one to visually trace the sequence of tasks accomplished by the agent in order to execute its task."
msgstr "Quarkusが自動的に提供するobservability（GitHubプロジェクトでは、observabilityはデフォルトで無効になっていますが、 `-Dobservability` フラグでオンにすることができます）により、エージェントがタスクを実行するために達成したタスクのシーケンスを視覚的にトレースすることができます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Tracing weather agent execution"
msgstr "ウェザーエージェント実行のトレース"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "A more general-purpose AI agent"
msgstr "より汎用的なAIエージェント"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"In the previous example, the agent has access to very specific tools.\n"
"It's possible to provide more general tools that help the agent perform a wider range of tasks.\n"
"Typically, a web search tool can be handy for information retrieval tasks.\n"
"That's the purpose of https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool[this second example].\n"
"It extends the agent's capabilities by allowing the LLM to search online for information not part of its original training set."
msgstr "前の例では、エージェントは非常に特殊なツールにアクセスできます。エージェントがより広い範囲のタスクを実行するのに役立つ、より一般的なツールを提供することも可能です。典型的には、ウェブ検索ツールは、情報検索タスクに便利です。これが link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool[この2番目の例の] 目的です。これは、LLMが元のトレーニングセットの一部ではない情報をオンラインで検索できるようにすることで、エージェントの能力を拡張します。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "In general, these scenarios require a bigger model, so this example has been configured to use `qwen2.5-14b` and a longer timeout to give it a chance to complete its task:"
msgstr "一般的に、このようなシナリオではより大きなモデルが必要となるため、この例では `qwen2.5-14b` 、タスクを完了するチャンスを与えるために長いタイムアウトを使用するように設定されています："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool/IntelligentAgent.java[intelligent agent] of this example can be configured to use this bigger model passing its name to the `@RegisterAiService` annotation."
msgstr "この例の link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool/IntelligentAgent.java[インテリジェントエージェントは] 、 `@RegisterAiService` アノテーションに名前を渡すことで、この大きなモデルを使用するように設定できます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool/WebSearchService.java[tool] can perform a web search on _DuckDuckGo_ and returns the result in plain text:"
msgstr "この link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool/WebSearchService.java[ツールは] 、 _DuckDuckGoで_ ウェブ検索を実行し、結果をプレーンテキストで返します："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "It is possible to use more advanced search engines or APIs, like https://docs.quarkiverse.io/quarkus-langchain4j/dev/web-search.html[Tavily]."
msgstr "link:https://docs.quarkiverse.io/quarkus-langchain4j/dev/web-search.html[Tavilyの] ような、より高度な検索エンジンやAPIを使用することも可能です。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The AI service uses this tool to retrieve online information for everything it ignores and arrange that data together to provide an answer to a generic user question."
msgstr "AIサービスはこのツールを使って、無視しているすべてのオンライン情報を取得し、そのデータをアレンジして、一般的なユーザーの質問に対する答えを提供します。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"For instance, consider the following question: _How many seconds would it take for a leopard at full speed to run through the Pont des Arts?_\n"
"Using this https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool/AgenticChatbotResource.java[HTTP endpoint], it would be executed using:"
msgstr "例えば、次のような質問を考えてみましょう： _全速力のヒョウがポンデザールを駆け抜けるには何秒かかりますか？_ この link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/searchastool/AgenticChatbotResource.java[HTTPエンドポイントを] 使用すると、次のように実行されます："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "To reply to this question, the agent invokes the web search tool twice: once to find the length of Pont des Arts and once to retrieve a leopard's speed."
msgstr "この質問に答えるために、エージェントはウェブ検索ツールを2回呼び出します。1回はポン・デ・ザールの長さを検索し、もう1回はヒョウのスピードを検索します。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "An agent using an external web search tool"
msgstr "外部のウェブ検索ツールを使用するエージェント"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Then, the agent puts this information together and generates an output like:"
msgstr "そして、エージェントはこれらの情報を組み合わせて、次のような出力を生成します："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"The length of Pont des Arts is approximately 155 meters. A leopard can run at speeds up to about 58 kilometers per hour (36 miles per hour). To calculate how many seconds it would take for a leopard running at full speed to cross the bridge, we need to convert its speed into meters per second and then divide the length of the bridge by this speed.\n"
"\n"
"1 kilometer = 1000 meters\n"
"58 kilometers/hour = 58 * 1000 / 3600 ≈ 16.11 meters/second\n"
"\n"
"Now, we can calculate the time it would take for a leopard to run through Pont des Arts:\n"
"\n"
"Time (seconds) = Distance (meters) / Speed (m/s)\n"
"= 155 / 16.11\n"
"≈ 9.62 seconds\n"
"\n"
"So, it would take approximately 9.62 seconds for a leopard running at full speed to run through Pont des Arts."
msgstr "ポン・デ・ザールの長さは約155メートル。ヒョウは時速約58キロ（時速36マイル）で走ることができます。全速力で走るヒョウが橋を渡るのに何秒かかるかを計算するには、その速度を1秒あたりのメートルに換算し、橋の長さをこの速度で割る必要があります。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"This example illustrates how an agent can use _tools_ to retrieve data.\n"
"While we use a search engine here, you can easily implement a tool that queries a database or another service to retrieve the needed information.\n"
"You can check https://github.com/quarkusio/quarkus-workshop-langchain4j/blob/main/step-08/src/main/java/dev/langchain4j/quarkus/workshop/BookingRepository.java[this example] to see how to implement a tool that queries a database using a Quarkus Panache repository."
msgstr "この例では、エージェントがデータを取得するために _ツールを_ 使用する方法を説明します。ここでは検索エンジンを使用していますが、必要な情報を取得するためにデータベースや他のサービスに問い合わせるツールを簡単に実装することができます。Quarkus Panache リポジトリを使用してデータベースに問い合わせるツールの実装方法は、 link:https://github.com/quarkusio/quarkus-workshop-langchain4j/blob/main/step-08/src/main/java/dev/langchain4j/quarkus/workshop/BookingRepository.java[この例を] 参照してください。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Agents and Conversational AI"
msgstr "エージェントと会話型AI"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"The flexibility of AI agents can become even more relevant when used in services that are not intended to fulfill a single request but need to have a more extended conversation with the user to achieve their goal.\n"
"For instance, agents can function as chatbots, enabling them to handle multiple users in parallel, each with independent conversations.\n"
"It requires managing the state of each conversation, often referred to as memories (the set of messages already exchanged with the LLM)."
msgstr "AIエージェントの柔軟性は、単一のリクエストに応えることを目的とせず、目的を達成するためにユーザーとのより長時間の会話を必要とするサービスで使用される場合、さらに関連性が高まります。例えば、エージェントはチャットボットとして機能することができ、複数のユーザーをそれぞれ独立した会話で並行して処理することができます。そのためには、しばしばメモリ（LLMと既に交換されたメッセージの集合）と呼ばれる、それぞれの会話の状態を管理する必要があります。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "A https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/restaurant/RestaurantAgent.java[chatbot of a restaurant booking system], designed to chat with customers and collect their data and requirements, represents an interesting practical application of this pattern."
msgstr "link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/restaurant/RestaurantAgent.java[レストラン予約システムのチャットボットは] 、顧客とチャットし、彼らのデータと要件を収集するように設計されており、このパターンの興味深い実用的なアプリケーションを表しています。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"Note that the user message conveys not only the customer's request but also includes the current date.\n"
"This allows the LLM to understand relative dates, such as \"tomorrow\" or \"in three days,\" which are often used by humans.\n"
"Initially, we included the current date in the system message, but doing so often caused the LLM to forget it and hallucinate using a different date.\n"
"Moving it to the user message empirically proved to work much better, possibly because this way, it is passed not only once but in every message in the chat memory."
msgstr "ユーザーメッセージは顧客の要求だけでなく、現在の日付も伝えることに注意してください。これにより、LLMは人間がよく使う「明日」や「3日後」といった相対的な日付を理解することができます。当初はシステムメッセージに現在の日付を含めていましたが、そうすることでLLMがそれを忘れてしまい、別の日付を使って幻覚を見ることがよくありました。ユーザー・メッセージに移すと、経験的にずっとうまくいくことがわかりました。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "When the agent completes that information-gathering process, the chatbot uses a https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/restaurant/booking/BookingService.java[tool accessing the database] of existing reservations to both check if there is still a table available for the customer's needs and to book that table if so."
msgstr "エージェントが情報収集プロセスを完了すると、チャットボットは既存の予約 link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/restaurant/booking/BookingService.java[データベースにアクセスするツールを使って] 、顧客のニーズに合うテーブルがまだあるかどうかを確認し、あればそのテーブルを予約します。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "To assist the customer in deciding whether to eat outside, the agent can also reuse, as a second tool, the https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/restaurant/weather/WeatherService.java[weather forecast service] implemented in one of the former examples, passing to it the geographic coordinates of the restaurant."
msgstr "顧客が外で食事をするかどうかを決定するのを支援するために、エージェントは、第2のツールとして、前の例の1つで実装された link:https://github.com/mariofusco/quarkus-agentic-ai/blob/main/src/main/java/org/agenticai/restaurant/weather/WeatherService.java[天気予報] サービスを再利用し、レストランの地理座標を渡すこともできます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The final architectural design of the chatbot is the following:"
msgstr "チャットボットの最終的なアーキテクチャ設計は以下の通りです："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The restaurant chatbot agent"
msgstr "レストランチャットボットエージェント"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"Once the customer provides all necessary details, the chatbot confirms the booking and presents a reservation summary.\n"
"The final booking is then stored in the database.\n"
"It is possible to give this a try by accessing the URL:"
msgstr "顧客が必要なすべての詳細を提供すると、チャットボットは予約を確認し、予約の概要を提示します。最終的な予約はデータベースに保存されます。URLにアクセスして試してみることが可能です："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "http://localhost:8080/restaurant.html"
msgstr "http://localhost:8080/restaurant.html"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "A typical example of user interaction could be something like this:"
msgstr "ユーザー・インタラクションの典型的な例は次のようなものです："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "An example of interaction with the restaurant chatbot agent"
msgstr "レストランチャットボットエージェントとの対話例"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Conclusions and next steps"
msgstr "結論と次のステップ"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "This blog post series illustrates how you can use agentic patterns to implement AI-infused applications with Quarkus and its LangChain4j extension."
msgstr "このブログ記事シリーズでは、QuarkusとそのLangChain4j拡張機能を使用して、AIを組み込んだアプリケーションを実装するためにエージェントパターンを使用する方法を説明します。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid ""
"We have covered _workflow patterns in a previous post_ and _agents in this post_.\n"
"Both sets of patterns are based on the same underlying principles but differ in how the control flow is managed.\n"
"The workflow patterns are more suitable for tasks that can be easily defined programmatically, while agents are more flexible and can handle a broader range of tasks."
msgstr "_以前の投稿でワークフローパターンを_ 取り上げ、 _今回の投稿でエージェントを_ 取り上げました。両方のパターンセットは同じ基本原理に基づいていますが、制御フローの管理方法が異なります。ワークフローパターンはプログラムで簡単に定義できるタスクに適しており、エージェントはより柔軟で幅広いタスクを扱うことができます。"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Nevertheless, the examples discussed in this series can be improved and further generalized with other techniques that will be introduced in future works, such as:"
msgstr "とはいえ、このシリーズで取り上げた例は、今後の研究で紹介されるであろう、次のような他のテクニックを使って改良し、さらに一般化することができます："

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Memory management across LLM calls"
msgstr "LLM呼び出しのメモリ管理"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "State management for long-running processes"
msgstr "長時間実行プロセスの状態管理"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Improved observability"
msgstr "観測性の向上"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "Dynamic tools and tool discovery"
msgstr "ダイナミックツールとツールディスカバリー"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "The relation with the MCP protocol and how agentic architecture can be implemented with MCP clients and servers"
msgstr "MCPプロトコルとの関係、およびMCPクライアントとサーバーを使用したエージェント型アーキテクチャの実装方法"

#: _posts/2025-02-20-agentic-ai-with-quarkus-p2.adoc
#, fuzzy
msgid "How can the RAG pattern be revisited in light of the agentic architecture, both with workflow patterns and agents?"
msgstr "ワークフローパターンとエージェントの両方で、RAGパターンをエージェントアーキテクチャに照らしてどのように見直すことができますか？"
