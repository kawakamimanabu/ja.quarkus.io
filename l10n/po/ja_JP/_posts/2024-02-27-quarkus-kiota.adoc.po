msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "The road to generated SDKs with Kiota using Quarkus"
msgstr "Quarkusを使ってKiotaでSDKを生成するまでの道のり"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Introducing a Quarkus-Kiota extension and available Java tools to work with Kiota."
msgstr "Quarkus-KiotaエクステンションとKiotaと連携するJavaツールの紹介。"

#: _posts/2024-02-27-quarkus-kiota.adoc
msgid "The Challenge"
msgstr "挑戦"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Quarkus applications typically expose functionalities through API endpoints; here, we discuss how to easily consume those APIs and provide a smooth experience for our beloved users. While HTTP calls are easy to perform in any programming language and environment, when API complexity increases, and the number of available endpoints becomes uncountable, the need for better tools becomes apparent."
msgstr "Quarkusアプリケーションは通常、APIエンドポイントを通じて機能を公開します。ここでは、これらのAPIを簡単に利用し、愛するユーザーにスムーズなエクスペリエンスを提供する方法について説明します。HTTPコールはどんなプログラミング言語や環境でも簡単に実行できますが、APIの複雑さが増し、利用可能なエンドポイントの数が数え切れないほど多くなると、より優れたツールの必要性が明らかになります。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Developer Experience Wishlist:"
msgstr "開発者体験ウィッシュリスト"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Fully typed programmatic APIs that make discovering and invoking HTTP endpoints safe, expressive, and elegant"
msgstr "HTTPエンドポイントの検出と呼び出しを安全、表現力豊か、かつエレガントにする完全型付けされたプログラムAPI"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "An easy and idiomatic way to plug in various authentication mechanisms"
msgstr "様々な認証機構をプラグインする簡単で慣用的な方法"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Smooth upgrades of the generated code when the description evolves"
msgstr "記述の進化に伴う生成コードのスムーズなアップグレード"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Looking at the learnings from big companies facing this issue at scale, a viable solution is to ship multiple language-specific SDKs (Software Development Kits), i.e. for Java, Python, Go, JavaScript etc. For years, companies have been paying developers to manually provide the abstraction layer, making cloud services functionalities more easily accessible. This approach adds up to the maintenance burden, increases the operational complexity of releases, and, worst, is tedious for developers."
msgstr "この問題に大規模に直面している大企業からの学びを見ると、実行可能な解決策は、Java、Python、Go、JavaScriptなど、複数の言語固有のSDK（ソフトウェア開発キット）を出荷することです。長年、企業は開発者にお金を払って抽象化レイヤーを手作業で提供させ、クラウドサービスの機能により簡単にアクセスできるようにしてきました。このアプローチはメンテナンスの負担を増やし、リリースの運用を複雑にし、最悪の場合、開発者にとって退屈なものです。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid ""
"To pave the way for better tooling, new standards are being defined in the computer industry. For building HTTP-based APIs, link:https://www.openapis.org[OpenAPI] stands out as a widely adopted option.\n"
"In the context of this article we are going to assume you already have an OpenAPI description of the service."
msgstr "より良いツールへの道を開くために、コンピュータ業界では新しい標準が定義されつつあります。HTTPベースのAPIを構築するために、 link:https://www.openapis.org[OpenAPIは] 広く採用されている選択肢として際立っています。この記事では、サービスのOpenAPI記述がすでにあると仮定します。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Current Status in Quarkus"
msgstr "クアルカスの現状"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid ""
"Quarkus already provides an expressive and fully integrated link:https://quarkus.io/guides/rest-client-reactive[Rest Client] to enable you to craft HTTP calls beautifully.\n"
"Additionally, the link:https://github.com/quarkiverse/quarkus-openapi-generator[quarkus-openapi-generator] is a mature Quarkus extension designed to generate client code from OpenAPI.\n"
"This option is recommended when a tight integration with Quarkus is your primary focus."
msgstr "Quarkusは、HTTPコールを美しく作成できるように、表現力豊かで完全に統合された link:https://quarkus.io/guides/rest-client-reactive[Rest Client] をすでに提供しています。さらに、 link:https://github.com/quarkiverse/quarkus-openapi-generator[quarkus-openapi-generatorは] 、OpenAPIからクライアントコードを生成するように設計された、成熟したQuarkusエクステンションです。このオプションは、Quarkusとの緊密な統合を第一に考えている場合に推奨されます。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "In this post, we will introduce an alternative solution that addresses the same problem but makes different trade-offs to prioritize consistency across languages and frameworks."
msgstr "この投稿では、同じ問題に対処する別の解決策を紹介しますが、言語やフレームワーク間の一貫性を優先するために、異なるトレードオフを行います。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "A Story of Open Source Collaboration"
msgstr "オープンソースコラボレーションの物語"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Microsoft - Kiota"
msgstr "マイクロソフト - キオタ"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Recognizing the challenges faced by the industry in generating comprehensive and efficient SDKs for diverse APIs, the link:https://learn.microsoft.com/en-us/graph/overview[Microsoft Graph] team took the lead and introduced link:https://github.com/microsoft/kiota[Kiota], a CLI to streamline and automate the process of creating Software Development Kits (SDKs) for HTTP APIs."
msgstr "多様なAPIのための包括的かつ効率的なSDKを作成する際に業界が直面する課題を認識し、 link:https://learn.microsoft.com/en-us/graph/overview[Microsoft Graph] チームが率先してHTTP APIのためのソフトウェア開発キット（SDK）の作成プロセスを合理化および自動化するCLIである link:https://github.com/microsoft/kiota[Kiota] を導入しました。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Kiota, born and raised in the open source, fosters collaboration and is ground-up designed with link:https://learn.microsoft.com/en-gb/openapi/kiota/design[modularity] in mind. The Kiota project's community is extra welcoming, and it has demonstrated to be easy to open an issue not only for bugs but also to improve over the design decisions."
msgstr "オープンソースで生まれ育ったKiotaはコラボレーションを促進し、 link:https://learn.microsoft.com/en-gb/openapi/kiota/design[モジュール性] を念頭に置いてグランドアップ設計されています。Kiotaプロジェクトのコミュニティは非常に歓迎されており、バグだけでなく、設計上の決定を改善するために問題をオープンすることが容易であることが実証されています。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Nowadays, Kiota demonstrates its value daily with the automated generation of SDKs for an incredible number of Microsoft services. More big industries, like link:https://github.blog/2024-01-03-our-move-to-generated-sdks/[GitHub], are quickly following the lead."
msgstr "現在、Kiotaは非常に多くのMicrosoftサービスのSDKを自動生成し、その価値を日々実証しています。 link:https://github.blog/2024-01-03-our-move-to-generated-sdks/[GitHub] のような大きな業界もすぐに追随しています。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Red Hat - Apicurio"
msgstr "レッドハット - Apicurio"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Being focused on APIs and having products built with a contract-first approach from OpenAPI specifications, the Apicurio team from Red Hat joined the effort on Kiota. The collaboration led to important milestones, directly blossomed from this collaboration:"
msgstr "APIに焦点を当て、OpenAPI仕様からコントラクトファーストのアプローチで製品を構築しているRed HatのApicurioチームがKiotaの取り組みに参加しました。このコラボレーションは重要なマイルストーンにつながり、このコラボレーションから直接花が咲きました："

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "To make the usage of the generated code almost indistinguishable from a human-crafted product, we thoroughly implemented language-specific mangling of names."
msgstr "生成されたコードを人間が作ったものとほとんど見分けがつかないようにするため、言語固有の名前のマングリングを徹底的に実装しました。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "To ease the fruition of the Kiota CLI from standard Java projects, we implemented a link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#maven-plugin[Maven plugin]."
msgstr "標準的なJavaプロジェクトからのKiota CLIの実現を容易にするために、 link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#maven-plugin[Mavenプラグイン] を実装しました。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "To make frictionless the usage of Kiota on different and opinionated technological stacks, we ship alternative core libraries to let the user easily swap out from Microsoft's defaults (OkHttp + Gson): link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#serialization-jackson[Jackson Serde], link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#http-vertx[Vert.X Http], link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#http-jdk[JDK Http]."
msgstr "Kiotaを様々な技術スタック上で摩擦なく使用できるように、Microsoftのデフォルト（OkHttp + Gson）から簡単に交換できる代替コアライブラリを出荷しています： link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#serialization-jackson[Jackson Serde] 、 link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#http-vertx[Vert.X Http] 、 link:https://github.com/kiota-community/kiota-java-extra?tab=readme-ov-file#http-jdk[JDK Http] 。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "To increase compatibility with alternative Java runtimes, we completely removed the usage of reflection from all of the internals. Thus, Kiota-generated SDKs are automatically, and with zero configuration, able to be compiled and run on link:https://www.graalvm.org/latest/reference-manual/native-image/[GraalVM native-image]."
msgstr "代替Javaランタイムとの互換性を高めるために、すべての内部からリフレクションの使用を完全に削除しました。従って、Kiotaが生成したSDKは自動的に、ゼロ設定で、 link:https://www.graalvm.org/latest/reference-manual/native-image/[GraalVMネイティブイメージ] 上でコンパイルして実行することができます。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Feeling the pain of un-maintained and various levels of maturity of URI Templates implementations (internally used to compose URLs), we rolled out a link:https://github.com/std-uritemplate/std-uritemplate?tab=readme-ov-file#motivation[dependency-free unified library] available for all of the languages Kiota supports."
msgstr "URIテンプレート（内部的にURLを構成するために使用される）の実装がメンテナンスされておらず、様々なレベルで成熟していることを痛感し、Kiotaがサポートするすべての言語で利用可能な link:https://github.com/std-uritemplate/std-uritemplate?tab=readme-ov-file#motivation[依存関係のない統一] ライブラリを展開しました。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Along with additional bug fixes and improvements, we finally achieved a sweet spot where Kiota can be easily integrated and leveraged by mainstream and mature software projects. link:https://github.com/Apicurio/apicurio-registry[Apicurio Registry stands out among others] shipping (and extensively leveraging it in the tests) the generated link:https://github.com/Apicurio/apicurio-registry/tree/main/java-sdk[Java SDK] along with the link:https://github.com/Apicurio/apicurio-registry/tree/main/python-sdk[Python SDK] and the link:https://github.com/Apicurio/apicurio-registry/tree/main/go-sdk[Go SDK]."
msgstr "追加のバグ修正と改善とともに、Kiotaが主流の成熟したソフトウェアプロジェクトで簡単に統合して活用できるスイートスポットを最終的に達成しました。 link:https://github.com/Apicurio/apicurio-registry[Apicurioレジストリは] 、 link:https://github.com/Apicurio/apicurio-registry/tree/main/python-sdk[Python SDKと] link:https://github.com/Apicurio/apicurio-registry/tree/main/go-sdk[Go SDKと] 一緒に生成された link:https://github.com/Apicurio/apicurio-registry/tree/main/java-sdk[Java SDK] を出荷している（そしてテストで広範囲に活用している） link:https://github.com/Apicurio/apicurio-registry[他の中で際立って] います。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Quarkus Meet Kiota"
msgstr "クアルカス、キオータと対面"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid ""
"Now that all the dots have been connected, the final and crucial step is a seamless integration with supersonic, subatomic applications leveraging Quarkus!\n"
"This is the motivation behind the birth of the new ``quarkus-kiota`` extension.\n"
"The project is in its early stages, and we encourage you to try it out and provide feedback."
msgstr "すべての点と点がつながった今、最後の重要なステップは、Quarkusを活用した超音速、素粒子のアプリケーションとのシームレスな統合です！これが、新しい `quarkus-kiota` エクステンション誕生の動機です。このプロジェクトは初期段階にあり、ぜひ試してフィードバックを提供してください。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "The codebase lives in the link:https://github.com/quarkiverse/quarkus-kiota[Quarkiverse], the project is listed in the link:https://quarkus.io/extensions/io.quarkiverse.kiota/quarkus-kiota/[extensions] and the link:https://docs.quarkiverse.io/quarkus-kiota/dev/index.html[docs] are available at the usual location."
msgstr "コードベースは link:https://github.com/quarkiverse/quarkus-kiota[Quarkiverse] にあり、プロジェクトは link:https://quarkus.io/extensions/io.quarkiverse.kiota/quarkus-kiota/[拡張] 機能にリストされています。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Get started by adding this extension:"
msgstr "このエクステンションを追加して始めましょう："

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "quarkus ext add io.quarkiverse.kiota:quarkus-kiota"
msgstr "quarkus ext add io.quarkiverse.kiota:quarkus-kiota"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Since it's a code generator extension, you will want to check the `generate-code` goal is present in the `quarkus-maven-plugin` `executions` section. Default Quarkus generated projects have it but custom or older projects might not:"
msgstr "`generate-code` コードジェネレーターのエクステンションなので、 `quarkus-maven-plugin` `executions` 。デフォルトのQuarkus生成プロジェクトにはありますが、カスタムプロジェクトや古いプロジェクトにはないかもしれません："

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "Add the necessary dependencies, we are going to replace the default HTTP and JSON serialization libraries published by Microsoft and swap in Vert.X and Jackson (published from this https://github.com/kiota-community/kiota-java-extra[repository]) as they nicely play with the rest of the stack of a typical Quarkus based application."
msgstr "必要な依存関係を追加し、Microsoftによって公開されているデフォルトのHTTPおよびJSONシリアライゼーションライブラリを置き換えて、Vert.XとJackson（この link:https://github.com/kiota-community/kiota-java-extra[リポジトリから] 公開されています）を入れ替えます。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid ""
"Now we need to generate the actual client for our OpenAPI description, to do so, you should drop the OpenAPI file (in ``yaml`` or ``json`` format) in the ``src/main/openapi`` folder of your project.\n"
"You are all set to use the client in your application!"
msgstr "では、OpenAPI 記述用の実際のクライアントを生成する必要があります。そのためには、プロジェクトの `src/main/openapi` フォルダに OpenAPI ファイル ( `yaml` または `json` 形式) をドロップします。これで、アプリケーションでクライアントを使用する準備が整いました！"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "striking ``.`` after client, the code completion of your IDE kicks in and provide you a beautiful, fully typed, builder pattern matching the endopoint descriptions provided in the OpenAPI specification."
msgstr "クライアントの後に `.` を打つと、IDE のコード補完が作動し、OpenAPI 仕様で提供されているエンドポイントの記述に一致する、美しく、完全に型付けされたビルダーパターンを提供します。"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "For example an endpoint definition like https://github.com/Apicurio/apicurio-registry/blob/6882af10e9de8e1d245006db01f039b1fbf6355a/common/src/main/resources/META-INF/openapi-v2.json#L668[this one] nicely unroll in Java as:"
msgstr "例えば、 link:https://github.com/Apicurio/apicurio-registry/blob/6882af10e9de8e1d245006db01f039b1fbf6355a/common/src/main/resources/META-INF/openapi-v2.json#L668[この] ようなエンドポイント定義は、Javaでは次のようにうまく展開されます："

#: _posts/2024-02-27-quarkus-kiota.adoc
msgid "Come Join Us"
msgstr "参加のお誘い"

#: _posts/2024-02-27-quarkus-kiota.adoc
msgid "We value your feedback a lot so please report bugs, ask for improvements... Let's build something great together!"
msgstr "私達は皆様からのフィードバックに重きを置いています。バグ報告、改善要望を是非お願いします。一緒に素晴らしいものを作り上げていきましょう!"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "If you are a Quarkus-Kiota user or just curious, don't be shy and join our welcoming community:"
msgstr "Quarkus-Kiotaのユーザー、または単に興味がある方は、恥ずかしがらずに私たちの歓迎するコミュニティに参加してください："

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "provide feedback on https://github.com/quarkiverse/quarkus-kiota/issues[GitHub];"
msgstr "link:https://github.com/quarkiverse/quarkus-kiota/issues[GitHub] でフィードバックしてください；"

#: _posts/2024-02-27-quarkus-kiota.adoc
#, fuzzy
msgid "craft some code and https://github.com/quarkiverse/quarkus-kiota/pulls[push a PR];"
msgstr "コードを作って link:https://github.com/quarkiverse/quarkus-kiota/pulls[PRをプッシュして] ください；"
