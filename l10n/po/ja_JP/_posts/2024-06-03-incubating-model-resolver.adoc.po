msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Quarkus Maven Dependency Resolver Improvements"
msgstr "Quarkus Maven依存性解決機能の改善"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "3.11 includes a more efficient (still incubating) Quarkus Maven dependency resolver that also exposes more information about dependencies of each artifact in a dependency tree"
msgstr "3.11には、より効率的な（まだ開発中の）Quarkus Maven依存性リゾルバが含まれ、依存性ツリー内の各アーティファクトの依存性に関するより多くの情報も公開されます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Dependency resolution is typically one of the most time-consuming tasks during a build. Given that Quarkus has its specific https://quarkus.io/guides/writing-extensions#extension-philosophy[Quarkus Extension dependency model], it comes with its own Maven dependency resolver. The Quarkus dependency resolver is used in every build phase that requires application dependencies to be resolved, that includes building the final package, bootstraping applications in dev and test modes."
msgstr "依存関係の解決は、通常、ビルド中に最も時間がかかるタスクの1つです。Quarkusには固有の link:https://quarkus.io/guides/writing-extensions#extension-philosophy[Quarkus Extension依存性モデルが] あるため、独自のMaven依存性リゾルバが付属しています。Quarkusの依存関係リゾルバは、アプリケーションの依存関係を解決する必要があるすべてのビルドフェーズで使用されます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "What does Quarkus dependency resolver do?"
msgstr "Quarkusの依存性解決機能とは何ですか？"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "From the perspective of the Quarkus dependency resolver, dependencies declared in POMs of Quarkus projects are runtime dependencies (except certain cases for `provided` scope). They are runtime in a sense they will end up on the runtime classpath of the final application (test runtime classpath in case of `test` dependencies). These original project dependencies serve as input to the Quarkus dependency resolver."
msgstr "Quarkusの依存関係リゾルバから見ると、QuarkusプロジェクトのPOMで宣言されている依存関係は、実行時依存関係です（ `provided` スコープの特定のケースを除く）。これらは、最終的なアプリケーションのランタイムクラスパス（ `test` の依存関係の場合はテストランタイムクラスパス）にあるという意味で、ランタイムです。これらの元のプロジェクトの依存関係は、Quarkusの依存関係リゾルバへの入力となります。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "The job of the Quarkus dependency resolver is then to resolve the necessary Quarkus extension build time dependencies (those with the `-deployment` suffix and their dependencies) to create a complete Quarkus application build time dependency tree that will be used to initialize the build classpath of an application."
msgstr "Quarkus依存関係リゾルバの仕事は、必要なQuarkusエクステンションのビルド時依存関係（ `-deployment` サフィックスとその依存関係）を解決して、アプリケーションのビルドクラスパスを初期化するために使用される完全なQuarkusアプリケーションのビルド時依存関係ツリーを作成することです。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "New incubating Quarkus dependency resolver"
msgstr "新しいQuarkus依存性リゾルバのインキュベート"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "The objectives behind the new (still incubating) implementation of the Quarkus dependency resolver are:"
msgstr "Quarkus依存性リゾルバの新しい実装（まだインキュベート中）の背後にある目的は以下のとおりです："

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Improved performance, basically resolve dependencies more efficiently."
msgstr "パフォーマンスが向上し、基本的に依存関係がより効率的に解決されます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Collect more comprehensive dependency information and expose it to other dependency analysis related tools."
msgstr "より包括的な依存性情報を収集し、他の依存性分析関連ツールに公開します。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "While this implementation is still a work in progress, it already offers certain benefits compared to the current implementation and can be enabled in Quarkus projects by setting `quarkus.bootstrap.incubating-model-resolver` project property by either adding `-Dquarkus.bootstrap.incubating-model-resolver` to the `mvn` command line or adding it as a property to `pom.xml`."
msgstr "この実装はまだ進行中ですが、現在の実装と比較して、すでに一定の利点があります。Quarkusプロジェクトでは、 `mvn` コマンドラインに `-Dquarkus.bootstrap.incubating-model-resolver` を追加するか、 `pom.xml` にプロパティとして追加することで、 `quarkus.bootstrap.incubating-model-resolver` プロジェクトプロパティを設定し、有効にすることができます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "`quarkus.bootstrap.incubating-model-resolver` will not be effective when set in other configuration sources, such as `application.properties`, since it's needed early in the bootstrap process, before MP `Config` is initialized."
msgstr "`quarkus.bootstrap.incubating-model-resolver` `application.properties` MP が初期化される前の、ブートストラップ・プロセスの早い段階で必要とされるためです。 `Config` "

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Performance improvements"
msgstr "パフォーマンス向上"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "The new implementation of the dependency resolver, while being based on the Maven Resolver API, attempts to perform Quarkus-specific dependency analysis and resolution in parallel."
msgstr "依存関係リゾルバの新しい実装は、Maven Resolver APIに基づいていますが、Quarkus固有の依存関係の解析と解決を並行して実行しようとするものです。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "The original application dependencies will still be downloaded by Maven as usually, since Maven build process will most probably need them before Quarkus goals will run. However, when a Quarkus application is bootstrapped (for example to run `QuarkusTest's), Quarkus dependency resolver will (re)resolve them (typically from the local Maven repository)."
msgstr "Quarkusのゴールが実行される前に、Mavenのビルドプロセスで依存関係が必要になる可能性が高いためです。しかし、Quarkusアプリケーションがブートストラップされると（例えば、「QuarkusTest」を実行するために）、Quarkusの依存関係リゾルバが（通常、ローカルのMavenリポジトリから）依存関係を（再）解決します。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Even if all the artifacts are available in a local Maven repository, they will still be resolved but from the local Maven repository instead of the remote one. Performance enhancements described here are applicable to both cases: remote and local dependency resolutions."
msgstr "すべてのアーティファクトがローカルの Maven リポジトリで利用可能な場合でも、リモートではなくローカルの Maven リポジトリから解決されます。ここで説明するパフォーマンス強化は、リモートおよびローカルの依存関係解決の両方のケースに適用できます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "The enhancements added in the new implementation will be more noticeable in projects that declare dependencies on multiple Quarkus extensions and have many dependencies in general."
msgstr "新しい実装で追加された機能強化は、複数のQuarkusエクステンションへの依存を宣言しているプロジェクトや、一般的に依存関係が多いプロジェクトでより顕著になります。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "A simple, although not a very precise, way of checking the effects of the enhancements on a project would be to run the following command:"
msgstr "あまり正確ではありませんが、プロジェクトに対する機能強化の効果をチェックする簡単な方法は、以下のコマンドを実行することです："

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "It's not very precise since there are more Maven related operations involved than simply resolving Quarkus dependencies. Therefore calculating an average time of around 10 runs would be a way to capture the difference. Another alternative would be to run `mvn test -Dtest=SoSimpleTest`."
msgstr "単にQuarkusの依存関係を解決するだけでなく、Mavenに関連する操作が多く含まれるため、あまり正確ではありません。そのため、約10回の実行の平均時間を計算することが、違いを把握する方法となります。別の方法として、 `mvn test -Dtest=SoSimpleTest` ."

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Dependency resolution is typically performed in preparation to do something else, such as run tests or launch a build, so, in case when all the dependencies are available locally, it might not have a dramatic impact on the overall time of a single run of a given goal."
msgstr "依存関係の解決は、通常、テストの実行やビルドの開始など、他のことを行う準備として実行されます。そのため、すべての依存関係がローカルで利用可能な場合は、与えられたゴールの1回の実行時間全体に劇的な影響を与えないかもしれません。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid ""
"For a project such as Quarkus CLI, `quarkus:dependency-tree` appears to be ~100ms faster with the incubating model resolver (the new resolver takes ~25% less time to resolve dependencies from the local Maven repository).\n"
"Bootstrapping a similar application for a `QuarkusTest` will take ~125ms less time, however it will be only ~10% faster overall since resolving dependencies from a test process will not be able to benefit from the Maven resolver dependency cache used in the main Maven process (among other things)."
msgstr "Quarkus CLIなどのプロジェクトでは、 `quarkus:dependency-tree` 、インキュベートモデルリゾルバを使用すると～100ms速くなるようです（新しいリゾルバでは、ローカルのMavenリポジトリからの依存関係を解決する時間が～25%短縮されます）。 `QuarkusTest` 、同様のアプリケーションのブートストラップにかかる時間は～125ms短くなりますが、テストプロセスからの依存関係の解決では、メインのMavenプロセスで使用されるMavenリゾルバの依存関係キャッシュの恩恵を受けることができないため、全体としては～10%しか速くなりません（中略）。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Displaying dependency graph in Dev UI"
msgstr "Dev UIでの依存関係グラフの表示"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "When `quarkus.bootstrap.incubating-model-resolver` option is enabled on the command line or as a project property in the POM, Dev UI will display a new menu item - `Dependencies`."
msgstr "`quarkus.bootstrap.incubating-model-resolver` オプションがコマンドラインまたは POM のプロジェクトプロパティとして有効になっている場合、Dev UI は新しいメニュー項目 - `Dependencies` を表示します。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Clicking on `Dependencies` will display the complete dependency graph of the application, including application runtime dependencies (colored in green), Quarkus build time dependencies (colored in blue) and the application root node (colored in red)."
msgstr "`Dependencies` をクリックすると、アプリケーションの完全な依存関係グラフが表示されます。これには、アプリケーションの実行時依存関係（緑で色分け）、Quarkus のビルド時依存関係（青で色分け）、アプリケーションのルートノード（赤で色分け）が含まれます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "For a runtime view, Quarkus build time (deployment) dependencies could be hidden by clicking on `deployment` in the top right corner."
msgstr "Quarkusのビルド時（デプロイ時）の依存関係を非表示にするには、右上の `deployment` 。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Clicking on a dependency node will reduce the graph to all the possible paths from the root to the selected node. This can also be done by selecting a dependency from the dropdown list."
msgstr "依存関係ノードをクリックすると、グラフがルートから選択されたノードへのすべてのパスに縮小されます。これは、ドロップダウン・リストから依存関係を選択することでも実行できます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Displaying comprehensive dependency info in CLI"
msgstr "CLIでの包括的な依存情報の表示"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Enabling `quarkus.bootstrap.incubating-model-resolver` option on the command line or as a project property in the POM, enables a couple of new options for `quarkus:dependency-tree` goal: `graph` and `verbose`."
msgstr "コマンドラインまたは POM のプロジェクト・プロパティで `quarkus.bootstrap.incubating-model-resolver` オプションを有効にすると、 `quarkus:dependency-tree` ゴールの新しいオプションがいくつか有効になります: `graph` と `verbose` 。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Graph option"
msgstr "グラフオプション"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "By default `quarkus:dependency-tree` goal displays a Quarkus build time dependency tree. A tree does not expose comprehensive information about dependencies of each individual artifact though. `-Dgraph` does exactly that."
msgstr "デフォルトでは、 `quarkus:dependency-tree` 、Quarkusのビルド時の依存関係ツリーが表示されます。しかし、ツリーでは、個々のアーティファクトの依存関係についての包括的な情報は表示されません。 `-Dgraph` 。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "In addition to dependencies that were previously displayed, the command above will display also display some dependencies with `[+]` at the end, that will signify that this is also a dependency of the parent node but its dependencies (if any) are expanded in a different location in the graph."
msgstr "上記のコマンドは、以前に表示された依存関係に加えて、 `[+]` が末尾に付いた依存関係も表示します。これは、この依存関係も親ノードの依存関係ですが、その依存関係（もしあれば）がグラフ内の別の場所に展開されていることを示します。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "For example, `io.netty:netty-common` and `io.netty:netty-buffer` are displayed twice in the following snippet:"
msgstr "例えば、 `io.netty:netty-common` と `io.netty:netty-buffer` は次のスニペットで2回表示されます："

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Verbose option"
msgstr "詳細オプション"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Adding `-Dverbose` will add some information about each dependency, such as whether it's an application runtime or build time only dependency, whether it's a Quarkus extension or whether it's hot-reloadable dependency in dev mode."
msgstr "`-Dverbose` を追加すると、アプリケーションのランタイム依存かビルド時のみの依存か、Quarkus のエクステンションか、開発モードのホットリロード可能な依存かなど、各依存関係についての情報が追加されます。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "For example, below is snippet of an output of running"
msgstr "例えば、次のような出力があります。"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "Plans for future enhancements"
msgstr "今後の強化計画"

#: _posts/2024-06-03-incubating-model-resolver.adoc
#, fuzzy
msgid "There are a few other dependency resolution related performance improvements relevant for mainly for `quarkus:dev` and `test` Maven goals that are coming in 3.12. In 3.12 the incubating application model resolver will be enabled by default in dev mode. Once enough feedback has been collected on its operation, the incubating implementation will replace the current application model resolver implementation."
msgstr "3.12では、主に `quarkus:dev` 、 `test` Mavenゴールに関連する、依存関係の解決に関連するパフォーマンスの改善がいくつかあります。3.12では、incubatingアプリケーションモデルリゾルバがdevモードでデフォルトで有効になります。その操作について十分なフィードバックが収集されると、インキュベート実装は現在のアプリケーション・モデル・リゾルバ実装を置き換えることになります。"
