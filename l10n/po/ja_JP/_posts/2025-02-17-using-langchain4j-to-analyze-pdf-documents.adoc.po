msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Using LangChain4j to analyze PDF documents"
msgstr "PDF文書を分析するためにLangChain4jを使用"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Learn how to extract structured metadata from PDF documents using LangChain4j and AI to automate document analysis."
msgstr "LangChain4jとAIを使ってPDF文書から構造化メタデータを抽出し、文書分析を自動化する方法を学びます。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"In my consulting work, clients frequently present us with challenging problems that require innovative solutions.\n"
"Recently, we were tasked with extracting structured metadata from PDF documents through automated analysis. Below, I'll share a simplified version of this real-world challenge and how we approached it."
msgstr "私のコンサルティング業務では、革新的なソリューションを必要とする困難な問題をクライアントから提示されることがよくあります。最近では、自動分析によってPDF文書から構造化メタデータを抽出するという課題を受けました。以下では、この現実的な課題の簡略版と、私たちがそれにどのように取り組んだかを紹介します。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Use Case"
msgstr "ユースケース"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our client receives compressed archives (.zip files) containing up to hundreds of portable document format (PDF) lease documents that need review. Each document contains property lease details that must be validated for accuracy. The review process involves checking various business rules - for example, identifying leases with terms shorter than 2 years. Currently, this document validation is done manually, which is time-consuming. The client wants to automate and streamline this review workflow to improve efficiency."
msgstr "当社のクライアントは、レビューが必要な最大数百のポータブルドキュメントフォーマット（PDF）リース文書を含む圧縮アーカイブ（.zipファイル）を受け取ります。各文書には物件のリース詳細が含まれており、正確性を確認する必要があります。レビュープロセスでは、さまざまなビジネスルール（たとえば、期間が2年未満のリースの特定など）をチェックします。現在、この文書の検証は手作業で行われており、時間がかかっています。お客様は、このレビューのワークフローを自動化し、効率化したいと考えています。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Some complications with these lease documents are:"
msgstr "このようなリース文書には複雑な点があります："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents are not in a standard format so each lease may be written in a different way by a different property manager."
msgstr "賃貸契約書は標準的な書式ではないため、不動産管理者によってそれぞれ異なる方法で作成されることがあります。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents may be scanned, so the text is sometimes human writing and not typewritten."
msgstr "書類はスキャンされたものなので、テキストはタイプライターではなく、人間の手書きであることもあります。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The documents may contain multiple pages, which are not always in the same order."
msgstr "文書には複数のページが含まれることがあり、その順序は必ずしも同じではありません。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The lease terms may not be an actual date but written as \"Expires five years from the start date\" or \"Expires on the anniversary of the start date\"."
msgstr "リース期間は実際の日付ではなく、「契約開始日から5年間有効」とか「契約開始日から1年後の応当日に契約満了」というように表記されることもあります。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Metadata such as acreage and tax parcel information is needed by our client to validate the lease details."
msgstr "地積や課税区画情報などのメタデータは、クライアントがリースの詳細を検証するために必要です。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "You can understand why this is time consuming for a human to review and validate the documents."
msgstr "人間が書類を確認し、検証するのに時間がかかるのはご理解いただけると思います。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our Solution"
msgstr "ソリューション"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "After consulting with https://github.com/dliubarskyi[Dmytro Liubarskyi] and collaborating with the Quarkus team, we implemented a solution using LangChain4j for document metadata extraction. We chose https://ai.google.dev/docs/gemini_api_overview[Google Gemini] as our Large Language Model (LLM) since it excels at PDF analysis through its built-in Optical Character Recognition (OCR) capabilities, enabling accurate text extraction from both digital and scanned documents."
msgstr "link:https://github.com/dliubarskyi[Dmytro Liubarskyi] 氏と相談し、Quarkusチームと協力した後、ドキュメントのメタデータ抽出にLangChain4jを使用したソリューションを実装しました。ラージ言語モデル（LLM）として link:https://ai.google.dev/docs/gemini_api_overview[Google Geminiを] 選びました。 link:https://ai.google.dev/docs/gemini_api_overview[Google Geminiは] 、内蔵の光学式文字認識（OCR）機能によってPDF解析に優れており、デジタル文書とスキャン文書の両方から正確なテキスト抽出が可能だからです。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Technical Details"
msgstr "技術詳細"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The application is built using:"
msgstr "アプリケーションは"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus - A Kubernetes-native Java framework"
msgstr "Quarkus - KubernetesネイティブJavaフレームワーク"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "LangChain4j - Java bindings for LangChain to interact with LLMs"
msgstr "LangChain4j - LLMと対話するためのLangChainのJavaバインディング"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Google Gemini AI - For PDF document analysis and information extraction"
msgstr "Google Gemini AI - PDFドキュメントの解析と情報抽出"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus REST - For handling multipart file uploads"
msgstr "Quarkus REST - マルチパートのファイルアップロードを処理します。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "HTML/JavaScript frontend - Simple UI for file upload and results display"
msgstr "HTML/JavaScriptフロントエンド - ファイルアップロードと結果表示のためのシンプルなUI"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The backend processes the PDF through these steps:"
msgstr "バックエンドは以下のステップでPDFを処理します："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Accepts PDF upload via multipart form data"
msgstr "マルチパートフォームデータによるPDFアップロードに対応"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Converts PDF content to base64 encoding"
msgstr "PDF コンテンツを base64 エンコーディングに変換します。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Sends to Gemini AI with a structured JSON schema for response formatting"
msgstr "応答フォーマット用に構造化されたJSONスキーマをGemini AIに送信します。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Returns parsed lease information in a standardized format"
msgstr "解析されたリース情報を標準フォーマットで返します。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Displays results in a tabular format on the web interface"
msgstr "ウェブインターフェースに結果を表形式で表示"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The main components are:"
msgstr "主なコンポーネントは以下の通り："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseAnalyzerResource` - REST endpoint for PDF analysis"
msgstr "`LeaseAnalyzerResource` - PDF解析のためのRESTエンドポイント"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseReport` - Data structure for lease information"
msgstr "`LeaseReport` - リース情報のデータ構造"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Web interface for file upload and results display"
msgstr "ファイルアップロードと結果表示のためのウェブインターフェース"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "How it works"
msgstr "動作原理"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "First we need a Google Gemini API key. You can get one for free, see more details here: https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key Documentation^]."
msgstr "まず、Google Gemini APIキーが必要です。詳細はこちらをご覧ください： link:https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key Documentationを] ご覧ください。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to install the LangChain4j dependencies:"
msgstr "次に、LangChain4jの依存関係をインストールする必要があります："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Configure Gemini LLM"
msgstr "Gemini LLMの設定"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to wire up the Gemini LLM to the application (using your Google AI Gemini API key)."
msgstr "次に、Gemini LLMをアプリケーションに接続する必要があります（Google AI Gemini APIキーを使用します）。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Logging the request and response is optional but can be helpful for debugging."
msgstr "リクエストとレスポンスのログはオプションですが、デバッグに役立ちます。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Register the AI service"
msgstr "AIサービスの登録"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "We must register the AI service to use the `LeaseAnalyzer` interface."
msgstr "`LeaseAnalyzer` 、AIサービスを登録する必要があります。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Define your data structure"
msgstr "データ構造の定義"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Now we need to model the data structure for the lease information that we want the LLM to extract from any lease document.  You can customize these fields based on the information you need from the PDF documents but in our use case below we are extracting the following information:"
msgstr "次に、LLM にあらゆるリース文書から抽出させたいリース情報のデータ構造をモデル化する必要があります。PDF文書から必要な情報に基づいてこれらのフィールドをカスタマイズすることができますが、以下のユースケースでは以下の情報を抽出します："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Create the REST endpoint"
msgstr "RESTエンドポイントの作成"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lastly, we need to create a `LeaseAnalyzerResource` class that will use the LLM to extract the lease information from the PDF document."
msgstr "最後に、LLM を使用して PDF 文書からリース情報を抽出する `LeaseAnalyzerResource` クラスを作成する必要があります。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "There is a simple HTML/JavaScript frontend that allows you to upload a PDF document and view the results.  In the example below 3 different lease documents were uploaded and analyzed."
msgstr "シンプルなHTML/JavaScriptフロントエンドがあり、PDF文書をアップロードして結果を見ることができます。以下の例では、3つの異なるリース文書がアップロードされ、分析されました。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lease Analyzer Results"
msgstr "リース分析結果"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "You can find the complete example code on https://github.com/melloware/quarkus-lease-analyzer[GitHub^]."
msgstr "完全なサンプルコードは link:https://github.com/melloware/quarkus-lease-analyzer[GitHubに] あります。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Conclusion"
msgstr "まとめ"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "This article demonstrated how LangChain4j and AI can be leveraged to automatically extract structured metadata from PDF documents. By implementing this solution, our client will significantly reduce manual document processing time, potentially saving thousands of work hours annually. The combination of LangChain4j and Google Gemini AI proves to be a powerful approach for automating document analysis workflows."
msgstr "この記事では、LangChain4jとAIを活用してPDF文書から構造化メタデータを自動的に抽出する方法を紹介しました。このソリューションを導入することで、私たちのクライアントは手作業によるドキュメント処理時間を大幅に削減し、年間数千時間の作業時間を削減できる可能性があります。LangChain4jとGoogle Gemini AIの組み合わせは、ドキュメント分析ワークフローを自動化する強力なアプローチであることが証明されました。"
