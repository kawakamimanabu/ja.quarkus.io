msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Revolutionizing time tracking: how Quarkus transformed our backend development"
msgstr "時間管理に革命を起こす：Quarkusがバックエンド開発をどのように変えたか"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"GRAN Software Solutions is a German company that designs and builds modern backend solutions.\n"
"We work with large automotive clients and others to restructure and create new solutions.\n"
"We also develop and offer SaaS tools to help us and others in our daily work."
msgstr "GRAN Software Solutionsは、最新のバックエンドソリューションを設計・構築するドイツの企業です。私たちは、大規模な自動車関連企業やその他の企業と共に、再構築や新しいソリューションの創造に取り組んでいます。また、日々の業務に役立つSaaSツールの開発・提供も行っています。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "One such tool we built for ourselves and others is a time tracking application called https://sheetty.com[Sheetty]."
msgstr "そのようなツールのひとつが、 link:https://sheetty.com[Sheettyという] タイムトラッキングアプリケーションです。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "The time tracking challenge"
msgstr "時間追跡の課題"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"We needed to create a time tracking application because the existing solutions on the market did not meet our specific requirements.\n"
"They were either not designed for developers, lacked the simplicity we needed, or were loaded with unnecessary features.\n"
"We wanted to build a tool that was perfectly tailored to our needs, using the extensive experience we had gained from working on client projects over the years.\n"
"We also wanted to create a more modern and user-friendly design, which would be fun to use and incorporate newer technologies such as Quarkus."
msgstr "タイムトラッキングアプリケーションを作る必要があったのは、市場に出回っている既存のソリューションが私たちの特定の要件を満たしていなかったからです。それらは開発者向けに設計されていなかったり、私たちが必要とするシンプルさに欠けていたり、不必要な機能が満載されていたりしたのです。私たちは、長年のクライアントプロジェクトで培った豊富な経験を生かし、私たちのニーズにぴったり合ったツールを作りたいと考えました。また、よりモダンでユーザーフレンドリーなデザインにし、Quarkusのような新しいテクノロジーを取り入れて、楽しく使えるようにしたいと考えていました。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"The main issue we faced with existing time tracking solutions was the lack of an easy way to switch between clients.\n"
"We also found that they did not support quick actions or shortcuts, which we were used to, and there was no visual way to see the time entries we made during the day.\n"
"Additionally, we wanted to track time within the context of contracts signed with our clients in terms of daily rates and contract caps.\n"
"That's why we decided to create a custom solution to address all of these specific needs."
msgstr "既存のタイムトラッキングソリューションで直面した主な問題は、クライアントを簡単に切り替える方法がないことでした。また、私たちが慣れ親しんでいるクイックアクションやショートカットがサポートされておらず、1日に入力した時間を視覚的に確認する方法がありませんでした。さらに、日当や契約上限など、クライアントと交わした契約の文脈の中で時間をトラッキングしたいと考えていました。そのため、これらの具体的なニーズにすべて対応するカスタムソリューションを作成することにしました。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Discovering Quarkus"
msgstr "クアルカスの発見"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"When we were choosing the technology stack to use for our backend, our main goal was to use technologies that we were already familiar with, such as the Kotlin programming language, Spring Boot framework, and Postgres database.\n"
"We also wanted to select an ecosystem that could provide us with libraries for database connectivity, web client, caching, and other similar features.\n"
"Additionally, we wanted to use a high-performance solution to keep our hosting costs low and avoid high memory requirements."
msgstr "バックエンドに使用する技術スタックを選択する際、私たちの主な目標は、Kotlinプログラミング言語、Spring Bootフレームワーク、Postgresデータベースなど、すでに馴染みのある技術を使用することでした。また、データベース接続、ウェブクライアント、キャッシング、その他同様の機能のライブラリを提供してくれるエコシステムを選びたかったのです。さらに、ホスティングのコストを抑え、高いメモリ要件を避けるために、高性能なソリューションを使用したいと考えていました。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "After analyzing various solutions on the market, we decided to use the Quarkus framework as it met all of our requirements."
msgstr "市場にあるさまざまなソリューションを分析した結果、Quarkusフレームワークを使用することに決めました。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Our backend development experience with Quarkus: the key features"
msgstr "Quarkusを使用したバックエンド開発の経験：主な機能"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"We have designed our application architecture to separate the frontend and backend parts.\n"
"To secure our backend APIs in a modern and secure way, we opted to use JSON web tokens, and Quarkus has excellent support for them.\n"
"We also use role-based security for our APIs, and Quarkus makes it easy for us to implement this.\n"
"We have different roles in our application, such as regular users and admins, and this information is encoded in our JSON web tokens.\n"
"Quarkus ensures that these tokens are not tampered with or manipulated when they reach our back-end systems."
msgstr "当社のアプリケーションアーキテクチャは、フロントエンドとバックエンドの部分を分離するように設計されています。バックエンドのAPIをモダンでセキュアな方法で保護するために、JSON Webトークンを使用することを選択しました。また、APIにはロールベースのセキュリティを使用していますが、Quarkusではこれを簡単に実装できます。アプリケーションには、一般ユーザーや管理者など、さまざまなロールがあり、この情報はJSONウェブトークンにエンコードされています。Quarkusは、これらのトークンがバックエンドシステムに到達したときに、改ざんや操作が行われないようにします。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "`@RolesAllowed` for authorization of our API endpoints"
msgstr "`@RolesAllowed` APIエンドポイントの認証"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"We relied heavily on rich JSON support to model our data flexibly and delegate much of the functionality to Postgres itself to manipulate the data.\n"
"This way, we could pass the already-built JSON objects back to the API client, which significantly reduced the time it took to make design decisions in the application code.\n"
"Quarkus provided fantastic support for JSON object APIs.\n"
"We believe that Postgres is the right place to perform data manipulations and aggregations, not the application code, due to performance and code maintenance reasons."
msgstr "私たちは、データを柔軟にモデル化し、データを操作する機能の多くをPostgres自体に委譲するために、リッチなJSONサポートに大きく依存しました。こうすることで、すでに構築済みのJSONオブジェクトをAPIクライアントに渡すことができ、アプリケーションコードで設計を決定する時間を大幅に短縮できました。Quarkusは、JSONオブジェクトAPIの素晴らしいサポートを提供してくれました。私たちは、パフォーマンスとコードメンテナンスの理由から、データ操作と集計を実行するのはアプリケーションコードではなくPostgresが適切であると考えています。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Using `JsonObject` to pass our data in and out"
msgstr "`JsonObject` を使ってデータの入出力を行います。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"Although Quarkus primarily targets Java programming language, Kotlin support is also quite good.\n"
"We used coroutines and suspending functions, which allowed for greater performance and much simpler code compared to some other asynchronous programming models that are available.\n"
"Kotlin's structured concurrency enabled us to write seemingly sequential code but in reality, very performant asynchronous code.\n"
"Quarkus provides excellent Kotlin extension methods built on top of existing asynchronous APIs such as Mutiny."
msgstr "Quarkusの主なターゲットはJavaプログラミング言語ですが、Kotlinのサポートも非常に優れています。私たちはコルーチンとサスペンディング関数を使用し、他の非同期プログラミングモデルと比較して、より高いパフォーマンスとシンプルなコードを実現しました。Kotlinの構造化された並行性により、一見シーケンシャルなコードを書くことができましたが、実際には非常にパフォーマンスの高い非同期コードを書くことができました。Quarkusは、Mutinyなどの既存の非同期APIの上に構築された優れたKotlin拡張メソッドを提供します。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"We executed the database migration on application startup, which was very important for us.\n"
"Fortunately, Quarkus has excellent Flyway support, so all our database migrations were in one place and executed during our backend booting process.\n"
"This kept our database schema and data transparent and reproducible."
msgstr "アプリケーションの起動時にデータベースの移行を実行しました。幸いなことに、Quarkusには優れたFlywayサポートがあるため、データベースの移行はすべて1か所で済み、バックエンドの起動プロセス中に実行されました。これにより、データベーススキーマとデータを透過的かつ再現可能な状態に保つことができました。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Using Flyway to execute database migrations"
msgstr "Flywayを使用してデータベース移行を実行"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"For our deployments, we use Kubernetes.\n"
"Before using Quarkus, we described our application requirements using helm packaging, but with Quarkus, we opted for another approach as Quarkus offers a great Kubernetes extension.\n"
"Instead of writing any code, we described our Kubernetes resources using an `application.yaml` file, keeping our complete application configuration in one place.\n"
"This extension generated Kubernetes resource files behind the scenes, which we then applied to our Kubernetes cluster.\n"
"This works well for us."
msgstr "デプロイメントにはKubernetesを使用しています。Quarkusを使用する前は、helmパッケージングを使用してアプリケーション要件を記述していましたが、Quarkusには優れたKubernetesエクステンションがあるため、別のアプローチを選択しました。コードを書く代わりに、 `application.yaml` ファイルを使用してKubernetesリソースを記述し、完全なアプリケーション設定を1か所にまとめました。このエクステンションは、裏でKubernetesリソースファイルを生成し、それをKubernetesクラスタに適用しました。これは私たちにとって効果的でした。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Using the Kubernetes extension to generate Kubernetes resources"
msgstr "Kubernetesリソースを生成するためのKubernetesエクステンションの使用"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"For packaging our backend API, we used the Jib extension.\n"
"To package our application in a container, all we had to do was use the `application.yaml` file and set all the required parameters such as image name tags repository, and so on.\n"
"We didn't have to maintain the Docker file on our own, which was very convenient."
msgstr "バックエンドAPIのパッケージ化には、Jibエクステンションを使いました。アプリケーションをコンテナにパッケージするためには、 `application.yaml` ファイルを使い、イメージ名タグ・リポジトリなどの必要なパラメータをすべて設定するだけでした。Dockerファイルを自分たちで管理する必要がなく、とても便利でした。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"Our time tracking application needs to send emails to our users and admins on various occasions.\n"
"To keep things simpler, we decided not to go for any third-party API-driven email-sending approach.\n"
"Instead, we send emails ourselves, and for that purpose, we use Qute email templates, which make composing and sending emails to our users very simple.\n"
"This extension provides support for coding coroutines, allowing for non-blocking sending and higher throughput."
msgstr "私たちのタイムトラッキングアプリケーションは、様々な場面でユーザーや管理者にメールを送信する必要があります。シンプルにするために、サードパーティのAPIを利用したメール送信は行わないことにしました。その代わりに、私たち自身でメールを送信することにしました。そのために、Quteのメールテンプレートを使用しています。このエクステンションは、コルーチンのコーディングをサポートし、ノンブロッキング送信と高いスループットを可能にします。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Using Qute email templates to send emails"
msgstr "Quteのメールテンプレートを使ってメールを送信"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid "Development journey"
msgstr "開発の旅"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"The Quarkus development process has been excellent so far.\n"
"Compared to other frameworks like Spring Boot, Quarkus has a faster startup time and a smaller memory footprint.\n"
"It also provides profiles, which allows us to have slightly different configurations or behaviors between environments.\n"
"We can easily substitute some hard-to-run third-party services with local mocks, leaving the application code unchanged.\n"
"Quarkus is also great in terms of configuration and how easily we can overwrite values stored in the `application.yaml` file with external environment variables.\n"
"Although the hot reload mode didn't work well with Kotlin, I believe all the bugs related to it will be solved in upcoming releases.\n"
"During development, we had to restart our running service most of the time for code changes to take effect."
msgstr "Quarkusの開発プロセスは、これまで素晴らしいものでした。Spring Bootのような他のフレームワークと比べて、Quarkusは起動時間が速く、メモリフットプリントが小さいです。また、プロファイルも提供されているので、環境間でわずかに異なる設定や動作をさせることができます。アプリケーションコードを変更せずに、実行が難しいサードパーティのサービスをローカルのモックで簡単に置き換えることができます。Quarkusは、設定という点でも優れており、 `application.yaml` ファイルに保存されている値を外部環境変数で簡単に上書きできます。ホットリロードモードはKotlinではうまく動作しませんでしたが、このモードに関するバグはすべて今後のリリースで解決されると思います。開発中、コードの変更を反映させるために、ほとんどの場合、実行中のサービスを再起動する必要がありました。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"Our backend API functionalities took approximately a month and a half to complete.\n"
"Considering that only two developers worked on the backend, I think it was a good result.\n"
"In this phase of our product lifecycle, we decided against writing automated tests due to constantly revisiting requirements and our needs.\n"
"Instead, we went for manual testing for now.\n"
"Once our time tracking application gets more active users, we plan to start writing automated tests using Quarkus test support, including Testcontainers and others.\n"
"Developing a full-blown API, including API security with JSON web tokens and authorization in place, having database migration automatically applied during application boot time, having a flexible and maintainable code base revolving around JSON, with the ability to package and deploy our API to our Kubernetes cluster, is quite an achievement for just a month and a half of work."
msgstr "バックエンドのAPI機能を完成させるのに約1ヶ月半かかりました。バックエンドに携わった開発者が2人だけだったことを考えると、良い結果だったと思います。製品ライフサイクルのこのフェーズでは、要件やニーズを常に見直すため、自動テストを書くことを断念しました。その代わりに、今のところは手動テストを行いました。時間追跡アプリケーションのアクティブユーザーが増えたら、TestcontainersなどのQuarkusのテストサポートを使用して自動テストを書き始める予定です。JSONウェブトークンと認証によるAPIセキュリティ、アプリケーション起動時に自動的に適用されるデータベースマイグレーション、JSONを中心とした柔軟で保守可能なコードベース、APIをパッケージ化してKubernetesクラスタにデプロイする機能など、本格的なAPIを開発したことは、わずか1ヶ月半の作業としてはかなりの成果です。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Conclusion"
msgstr "まとめ"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"We are glad to share that using Quarkus, Kotlin, and Postgres as the foundation of our backend API has been a fun and productive experience for us.\n"
"Quarkus's ability to experiment quickly and leverage ready-made components has made us confident that we made the right technological choice.\n"
"Although there are some imperfections with hot reload and some quirks with Kotlin, we are waiting for the fixes to be made and have no doubt that Quarkus is the best solution for us."
msgstr "Quarkus、Kotlin、PostgresをバックエンドAPIの基盤として使用することは、私たちにとって楽しく生産的な経験でした。Quarkusの迅速な実験能力と既製のコンポーネントの活用により、私たちは正しい技術的選択をしたと確信しています。ホットリロードの不完全さやKotlinの癖はありますが、Quarkusが私たちにとって最高のソリューションであることに疑いの余地はありません。"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
#, fuzzy
msgid ""
"We are working smart and hard to bring new features to our time tracking application.\n"
"To achieve this, we will continue to use the great features provided by Quarkus, which dramatically reduce the time needed to roll out our features quickly.\n"
"We invite you to try our time tracker at https://sheetty.com[sheetty.com]."
msgstr "Quarkusでは、タイムトラッキングアプリケーションに新しい機能を追加するために、スマートかつ懸命に取り組んでいます。そのために、Quarkusが提供する優れた機能を引き続き使用し、機能の迅速な展開に必要な時間を劇的に短縮します。ぜひ、 link:https://sheetty.com[sheetty.] comのタイムトラッカーをお試しください。"
