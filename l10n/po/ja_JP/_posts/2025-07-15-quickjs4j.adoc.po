msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Introducing Quarkus quickjs4j: Seamless JavaScript Integration in Your Quarkus Applications"
msgstr "Quarkusのquickjs4jの導入：QuarkusアプリケーションにおけるJavaScriptのシームレスな統合"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "A new Quarkiverse extension that brings JavaScript execution to your Java applications with compile-time code generation and full CDI integration."
msgstr "コンパイル時のコード生成とCDIの完全な統合により、JavaScriptの実行をJavaアプリケーションにもたらす新しいQuarkiverse拡張機能です。"

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Introduction"
msgstr "はじめに"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"We're excited to announce the release of the Quarkus quickjs4j extension, a powerful new addition to the\n"
"Quarkus ecosystem that enables seamless execution of JavaScript code within your Java applications. Built\n"
"on top of the https://github.com/roastedroot/quickjs4j[quickjs4j library], this extension brings the\n"
"lightweight QuickJS JavaScript engine to both JVM and Native Quarkus, with full CDI integration and\n"
"compile-time optimizations."
msgstr "Javaアプリケーション内でJavaScriptコードをシームレスに実行できる、Quarkusエコシステムへの強力な新規追加機能です。 link:https://github.com/roastedroot/quickjs4j[quickjs4jライブラリ] 上に構築されたこの拡張機能は、軽量なQuickJS JavaScriptエンジンをJVMとネイティブQuarkusの両方に提供し、CDIの完全な統合とコンパイル時の最適化を実現します。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Whether you need to execute dynamic business logic, implement configurable rules engines, or integrate with\n"
"JavaScript-based algorithms, the Quarkus quickjs4j extension provides a type-safe, performant solution that\n"
"leverages Quarkus's build-time processing capabilities."
msgstr "動的なビジネスロジックの実行、設定可能なルールエンジンの実装、JavaScriptベースのアルゴリズムとの統合など、Quarkusのquickjs4j拡張機能は、Quarkusのビルド時処理機能を活用した、型安全でパフォーマンスの高いソリューションを提供します。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Why JavaScript in Java Applications?"
msgstr "JavaアプリケーションでJavaScriptを使う理由"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Quarkus applications often need to execute dynamic logic that can be modified without recompiling the entire\n"
"application. JavaScript provides an excellent solution for this use case, offering:"
msgstr "Quarkusアプリケーションでは、アプリケーション全体を再コンパイルすることなく変更可能な動的ロジックを実行する必要があります。JavaScriptは、このような場合に優れたソリューションを提供します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Dynamic Configuration**: Update business rules and logic without application restarts"
msgstr "*動的構成* ：アプリケーションを再起動せずにビジネスルールとロジックを更新"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Scripting Capabilities**: Enable power users to customize application behavior"
msgstr "*スクリプト機能* ：パワーユーザーによるアプリケーション動作のカスタマイズが可能"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Algorithm Integration**: Leverage existing JavaScript libraries and algorithms"
msgstr "*アルゴリズムの統合* ：既存のJavaScriptライブラリとアルゴリズムを活用"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Rapid Prototyping**: Quickly test and iterate on complex logic"
msgstr "*迅速なプロトタイピング* ：複雑なロジックを素早くテストし、反復"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"The Quarkus quickjs4j extension makes this integration seamless while maintaining the performance and developer\n"
"experience you expect from Quarkus."
msgstr "Quarkusのquickjs4j拡張機能を使用すると、Quarkusに期待するパフォーマンスと開発者エクスペリエンスを維持しながら、この統合をシームレスに行うことができます。"

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Key Features"
msgstr "主な特長"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Compile-time Code Generation"
msgstr "コンパイル時のコード生成"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"The extension automatically generates CDI beans and proxy classes for your JavaScript interfaces during build\n"
"time, ensuring optimal performance and early error detection."
msgstr "この拡張機能は、ビルド時にJavaScriptインターフェイス用のCDI Beanとプロキシクラスを自動的に生成し、最適なパフォーマンスと早期のエラー検出を保証します。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Full CDI Integration"
msgstr "CDIの完全統合"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "JavaScript interfaces are first-class citizens in your Quarkus application, injectable like any other CDI bean."
msgstr "JavaScriptインターフェースは、Quarkusアプリケーションのファーストクラスの市民であり、他のCDIビーンと同様に注入可能です。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Flexible Script Loading"
msgstr "柔軟なスクリプト読み込み"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Load JavaScript files from multiple sources:\n"
"- Classpath resources (recommended for packaged scripts)\n"
"- Filesystem paths (for dynamic script loading)\n"
"- URLs (for remote script execution)\n"
"- Anywhere else (using the optional Factory pattern)"
msgstr "複数のソースから JavaScript ファイルを読み込みます：- クラスパス リソース (パッケージ化されたスクリプトに推奨) - ファイルシステム パス (動的なスクリプトのロードに使用) - URL (リモート スクリプトの実行に使用) - その他の場所 (オプションの Factory パターンを使用)"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Context Support"
msgstr "コンテキスト・サポート"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Pass Java objects as context to JavaScript execution, enabling bidirectional communication between Java and\n"
"JavaScript code."
msgstr "JavaScriptの実行にJavaオブジェクトをコンテキストとして渡し、JavaとJavaScriptコード間の双方向通信を可能にします。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Sandboxed Execution"
msgstr "サンドボックス実行"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"QuickJs4J provides a secure and efficient way to execute JavaScript within Java. By running code in a sandbox,\n"
"it ensures:"
msgstr "QuickJs4Jは、Java内でJavaScriptを実行する安全で効率的な方法を提供します。サンドボックス内でコードを実行することで、以下のことが保証されます："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Memory safety – JavaScript runs in isolation, protecting your application from crashes or memory leaks."
msgstr "メモリ安全性 - JavaScript は分離して実行され、クラッシュやメモリリークからアプリケーションを保護します。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "No system access by default – JavaScript cannot access the filesystem, network, or other sensitive resources unless explicitly allowed."
msgstr "デフォルトでシステムアクセス禁止 - JavaScript は明示的に許可されない限り、ファイルシステム、ネットワーク、その他の機密リソースにアクセスできません。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Portability – Being pure Java bytecode, it runs wherever the JVM does."
msgstr "移植性 - 純粋なJavaバイトコードであるため、JVMが動作する場所であればどこでも動作します。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Native-image friendly – Compatible with GraalVM's native-image for fast, lightweight deployments."
msgstr "ネイティブ・イメージ・フレンドリー - GraalVMのネイティブ・イメージと互換性があり、高速で軽量なデプロイが可能です。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Whether you're embedding scripting capabilities or isolating untrusted code, QuickJs4J is designed for safe and\n"
"seamless integration."
msgstr "QuickJs4Jは、スクリプト機能を埋め込む場合でも、信頼できないコードを分離する場合でも、安全でシームレスな統合のために設計されています。"

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Getting Started"
msgstr "はじめに"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Adding the extension to your Quarkus application is straightforward. First, add the dependency to your `pom.xml`:"
msgstr "Quarkusアプリケーションへの拡張機能の追加は簡単です。まず、依存関係を `pom.xml` に追加します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "You'll also need to enable the annotation processor for code generation:"
msgstr "また、コード生成のために注釈プロセッサを有効にする必要があります："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Simple Example: JavaScript Calculator"
msgstr "簡単な例JavaScript電卓"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Let's create a simple calculator to demonstrate the extension's capabilities."
msgstr "このエクステンションの機能をデモンストレーションするために、簡単な電卓を作ってみましょう。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "First, define a Java interface annotated with `@ScriptInterface` and `@ScriptImplementation`:"
msgstr "まず、 `@ScriptInterface` と `@ScriptImplementation` でアノテーションされた Java インタフェースを定義します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Next, create the JavaScript implementation in `src/main/resources/calculator.js`:"
msgstr "次に、JavaScript の実装を `src/main/resources/calculator.js` で作成します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Finally, inject and use the calculator in your Quarkus application:"
msgstr "最後に、Quarkusアプリケーションに電卓を注入して使用します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"That's it! The extension handles all the complexity of JavaScript execution, type conversion, and CDI\n"
"integration behind the scenes."
msgstr "それだけです！この拡張機能は、JavaScript の実行、型変換、CDI の統合といった複雑な処理をすべて裏で行います。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Advanced Features"
msgstr "高度な機能"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Context Objects for Bidirectional Communication"
msgstr "双方向通信のためのコンテキストオブジェクト"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"A powerful feature of quickjs4j is the ability to provide Java context objects that JavaScript code\n"
"can invoke:"
msgstr "quickjs4jの強力な機能は、JavaScriptコードが呼び出すことができるJavaコンテキスト・オブジェクトを提供する機能です："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Your JavaScript code can then call these Java methods:"
msgstr "JavaScriptコードは、これらのJavaメソッドを呼び出すことができます："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Factory Pattern for Dynamic Scripts"
msgstr "動的スクリプトのファクトリーパターン"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "For scenarios where you need to load scripts dynamically at runtime, use the factory pattern:"
msgstr "実行時にスクリプトを動的にロードする必要がある場合は、ファクトリーパターンを使用します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"This approach is perfect for applications that need to execute user-provided scripts or\n"
"load scripts from external sources.  Note that the execution of the script is fully sandboxed.\n"
"Only the methods exposed by the Context can be invoked from within the script."
msgstr "このアプローチは、ユーザーが提供したスクリプトを実行したり、外部ソースからスクリプトをロードする必要があるアプリケーションに最適です。スクリプトの実行は完全にサンドボックス化されていることに注意してください。スクリプト内から呼び出せるのは、Context が公開するメソッドだけです。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Error Handling and Debugging"
msgstr "エラー処理とデバッグ"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "JavaScript errors are propagated as Java exceptions, making debugging straightforward:"
msgstr "JavaScriptのエラーはJavaの例外として伝搬されるので、デバッグが簡単になります："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Build-time Magic"
msgstr "ビルドタイム・マジック"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Behind the scenes, the extension performs build-time code generation, creating:"
msgstr "舞台裏では、このエクステンションはビルド時のコード生成を行い、コードを作成します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**CDI Bean Classes**: `{InterfaceName}_CDI` - Injectable CDI beans"
msgstr "*CDI Bean クラス* : `{InterfaceName}_CDI` - 注入可能な CDI Bean。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Factory Classes**: `{InterfaceName}_Factory` - Injectable factory beans"
msgstr "*ファクトリクラス* : `{InterfaceName}_Factory` - 注入可能なファクトリビーンズ"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Proxy Classes**: `{InterfaceName}_Proxy` - Generated by quickjs4j"
msgstr "*プロキシ・クラス* : `{InterfaceName}_Proxy` - quickjs4jによって生成されます。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Context Builtins**: `{ContextName}_Builtins` - JavaScript-accessible Java methods"
msgstr "*コンテキスト組み込み関数* : `{ContextName}_Builtins` - JavaScript でアクセス可能な Java メソッド"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"This build-time approach ensures minimal runtime overhead while providing full IDE\n"
"support with code completion and type checking."
msgstr "このビルド時のアプローチは、コード補完と型チェックを備えた完全なIDEサポートを提供しながら、最小限の実行時オーバーヘッドを保証します。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Performance Considerations"
msgstr "パフォーマンス"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"The QuickJS engine is designed for lightweight, fast JavaScript execution. Combined with\n"
"Quarkus's build-time optimizations, the extension provides:"
msgstr "QuickJSエンジンは、軽量で高速なJavaScript実行のために設計されています。Quarkusのビルドタイムの最適化と組み合わせることで、この拡張機能は以下を提供します："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Fast Startup**: Minimal impact on application startup time"
msgstr "*高速スタートアップ* ：アプリケーション起動時間への影響は最小限"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Low Memory Footprint**: Efficient memory usage for JavaScript execution"
msgstr "*低メモリーフットプリント* ：JavaScript実行時の効率的なメモリ使用"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Native Image Support**: Full compatibility with GraalVM native images"
msgstr "*ネイティブイメージのサポート* ：GraalVMネイティブイメージとの完全な互換性"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Build-time Validation**: Early detection of interface mismatches and errors"
msgstr "*ビルド時の検証* ：インターフェースのミスマッチやエラーの早期検出"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Use Cases"
msgstr "使用例"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "The Quarkus quickjs4j extension is perfect for:"
msgstr "Quarkusのquickjs4j拡張機能は、次のような場合に最適です："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Business Rules Engines**: Implement configurable business logic"
msgstr "*ビジネスルールエンジン* ：設定可能なビジネスロジックの実装"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Template Processing**: Generate dynamic content with JavaScript templates"
msgstr "*テンプレート処理* ：JavaScriptテンプレートで動的コンテンツを生成"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Algorithm Integration**: Leverage existing JavaScript algorithms and libraries"
msgstr "*アルゴリズムの統合* ：既存のJavaScriptアルゴリズムとライブラリを活用"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**User Scripting**: Allow power users to customize application behavior"
msgstr "*ユーザースクリプト* ：パワーユーザーによるアプリケーション動作のカスタマイズ"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "**Configuration Logic**: Implement complex configuration scenarios"
msgstr "*構成ロジック* ：複雑なコンフィギュレーション・シナリオの実装"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Current Status and Future Plans"
msgstr "現状と今後の計画"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"The extension is currently in **experimental status**, meaning APIs may evolve based on\n"
"community feedback. We're actively working on:"
msgstr "この拡張機能は現在 *実験的な状態に* あり、コミュニティからのフィードバックに基づいてAPIが進化する可能性があります。私たちは積極的に取り組んでいます："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Enhanced error reporting and debugging capabilities"
msgstr "エラーレポートとデバッグ機能の強化"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Performance optimizations"
msgstr "パフォーマンスの最適化"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Configurable JavaScript engine options"
msgstr "設定可能なJavaScriptエンジンオプション"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Improved IDE integration and tooling"
msgstr "IDE統合とツールの改善"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"In particular, we have a lot of work to do in optimizing performance.  There are\n"
"clear tradeoffs to consider around flexibility and speed, as well as customization.\n"
"The current experimental implementation takes a very conservative approach to\n"
"ensure full sandboxing and thread safety.  The result is a slower implementation,\n"
"but one that is guaranteed to be thread safe and fully sandboxed."
msgstr "特に、パフォーマンスの最適化には多くの課題があります。柔軟性とスピード、そしてカスタマイズに関しては、考慮すべきトレードオフが明確にあります。現在の実験的な実装では、完全なサンドボックス化とスレッドセーフを保証するために非常に保守的なアプローチを取っています。その結果、実装は遅くなりましたが、スレッドセーフと完全なサンドボックス化が保証されています。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Getting Involved"
msgstr "参加"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"The Quarkus quickjs4j extension is part of the Quarkiverse ecosystem and welcomes community\n"
"contributions. Whether you're interested in:"
msgstr "Quarkusのquickjs4j拡張機能は、Quarkiverseのエコシステムの一部であり、コミュニティからの貢献を歓迎します。あなたが興味があるのは"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Reporting bugs or requesting features"
msgstr "バグ報告や機能リクエスト"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Contributing code improvements"
msgstr "コードの改善に貢献"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Sharing use cases and examples"
msgstr "使用例と事例の共有"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Improving documentation"
msgstr "ドキュメンテーションの改善"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Visit our https://github.com/quarkiverse/quarkus-quickjs4j[GitHub repository] to get involved.\n"
"We would really love for you to try out quickjs4j in Quarkus and give us feedback.  The best\n"
"way to evolve the functionality is by hearing from users!"
msgstr "link:https://github.com/quarkiverse/quarkus-quickjs4j[GitHubリポジトリに] アクセスしてください。ぜひQuarkusでquickjs4jを試していただき、フィードバックをいただければと思います。機能を進化させる最善の方法は、ユーザーの声を聞くことです！"

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Conclusion"
msgstr "まとめ"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"The Quarkus quickjs4j extension opens up exciting possibilities for Java developers who need\n"
"to integrate JavaScript execution into their applications. With its compile-time code generation,\n"
"full CDI integration, and flexible script loading options, it provides a powerful yet easy-to-use\n"
"solution for dynamic code execution."
msgstr "Quarkusのquickjs4j拡張機能は、JavaScriptの実行をアプリケーションに統合する必要があるJava開発者に、エキサイティングな可能性を提供します。コンパイル時のコード生成、CDIとの完全な統合、柔軟なスクリプトローディングオプションにより、動的コード実行のための強力かつ使いやすいソリューションが提供されます。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"Try it out and let us know what you think! We're excited to see what the community builds with this\n"
"capability."
msgstr "ぜひお試しください！私たちは、コミュニティがこの機能を使ってどのようなものを作り上げるか楽しみにしています。"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "Links and Resources"
msgstr "リンクとリソース"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid ""
"If you want to learn more about QuickJS itself, or the upstream quickjs4j Java project,\n"
"here are some helpful links:"
msgstr "QuickJS自体、または上流のquickjs4j Javaプロジェクトについてもっと知りたいなら、ここに役立つリンクがあります："

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "https://github.com/quarkiverse/quarkus-quickjs4j[Quarkus quickjs4j GitHub Repository]"
msgstr "link:https://github.com/quarkiverse/quarkus-quickjs4j[Quarkus quickjs4j GitHubリポジトリ]"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "https://github.com/roastedroot/quickjs4j[quickjs4j Library]"
msgstr "link:https://github.com/roastedroot/quickjs4j[quickjs4j ライブラリ]"

#: _posts/2025-07-15-quickjs4j.adoc
#, fuzzy
msgid "https://bellard.org/quickjs/[QuickJS JavaScript Engine]"
msgstr "link:https://bellard.org/quickjs/[QuickJS JavaScriptエンジン]"
