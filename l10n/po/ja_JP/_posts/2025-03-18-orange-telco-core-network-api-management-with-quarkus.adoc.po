msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "How Orange leverages Quarkus for seamless access to Telco network capabilities"
msgstr "Orange社がQuarkusを活用して通信事業者のネットワーク機能にシームレスにアクセスする方法"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Learn how Orange successfully deployed APIs across various 4G/5G network cores."
msgstr "Orangeがさまざまな4G/5GネットワークコアにAPIを導入して成功した方法をご覧ください。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
msgid "Introduction"
msgstr "はじめに"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"As a global telecommunications leader, https://www.orange.com[Orange] has always been at the forefront of innovation.\n"
"Along with Deutsche Telekom, Telefónica, and Vodafone, Orange co-founded the https://camaraproject.org[Camara Project], an initiative aimed at simplifying the consumption of 5G APIs for third-party application developers."
msgstr "世界的な通信業界のリーダーとして、 link:https://www.orange.com[Orangeは] 常にイノベーションの最前線にいます。Deutsche Telekom、Telefónica、Vodafoneとともに、Orangeは、サードパーティのアプリケーション開発者向けに5G APIの消費を簡素化することを目的としたイニシアチブである link:https://camaraproject.org[Camara Projectを] 共同で設立しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "To achieve this goal, Orange needed a flexible and lightweight framework capable of handling constrained API exposure while ensuring compatibility with existing network core systems."
msgstr "この目標を達成するために、Orangeは、既存のネットワーク・コア・システムとの互換性を確保しながら、制約のあるAPI公開に対応できる柔軟で軽量なフレームワークを必要としていました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "After a rigorous evaluation of multiple frameworks and toolkits — including Quarkus, Ktor, Micronaut, and Vert.x — Orange selected Quarkus as the ideal solution."
msgstr "Quarkus、Ktor、Micronaut、Vert.xなど、複数のフレームワークやツールキットを厳密に評価した結果、Orange社はQuarkusを理想的なソリューションとして選択しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "https://www.linkedin.com/in/patriceconil/[Patrice Conil], software craftsman at Orange, told us why."
msgstr "Orangeのソフトウェア職人、 link:https://www.linkedin.com/in/patriceconil/[パトリス・コニルが] その理由を語ってくれました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Why Quarkus? A Framework Evaluation"
msgstr "なぜQuarkus？フレームワークの評価"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"The team at Orange identified application startup time as a barrier to dynamic Kubernetes pod management.\n"
"So they embarked on a comparative study to test alternatives to Spring Boot in a well-defined API wrapper exposure context.\n"
"Key evaluation criteria included:"
msgstr "Orangeのチームは、動的なKubernetesポッド管理の障害としてアプリケーションの起動時間を特定しました。そこで彼らは、明確に定義されたAPIラッパー公開のコンテキストでSpring Bootの代替案をテストする比較研究に着手しました。主な評価基準は以下の通りです："

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Learning Curve: How easily could a Spring developer transition?"
msgstr "学習曲線：Spring開発者はどのくらい簡単に移行できますか？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Kotlin Compatibility: Could the framework work seamlessly with Kotlin?"
msgstr "Kotlinとの互換性：フレームワークはKotlinとシームレスに動作しますか？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Runtime footprint: Could it operate efficiently in a constrained environment?"
msgstr "ランタイム・フットプリント：制約のある環境で効率的に動作するか？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Ease of Deployment: How smoothly could it be deployed on Kubernetes?"
msgstr "デプロイの容易さ：Kubernetes上でどれだけスムーズにデプロイできるか？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "After extensive testing, Quarkus stood out for multiple reasons:"
msgstr "広範なテストの結果、Quarkusは複数の理由で際立っていました："

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Simplicity: A relatively simple learning curve, especially for those familiar with JAX-RS / Jakarta REST."
msgstr "シンプルさ：特にJAX-RSやJakarta RESTに慣れている人にとっては、比較的簡単な学習曲線です。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Dev Mode: Very fast startup, live reload and zero configuration Dev Services (Vault, Redis) result in great developer productivity."
msgstr "デブモード：非常に高速なスタートアップ、ライブリロード、設定不要のDevサービス（Vault、Redis）により、開発者の生産性が大幅に向上します。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Modularity: Only required dependencies were embedded, keeping applications lean."
msgstr "モジュール性：必要な依存関係のみを組み込み、アプリケーションをスリムに保ちます。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Documentation: Well-organized, versioned documentation with working examples."
msgstr "ドキュメント：実用的な例を含む、よく整理された、バージョン管理されたドキュメント。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Native Compilation: The ability to generate compact native binaries for Kubernetes deployment."
msgstr "ネイティブコンパイル：Kubernetesデプロイ用にコンパクトなネイティブバイナリを生成する機能。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Despite the strong competition from a vibrant JVM ecosystem, these advantages made Quarkus the preferred choice for exposing 5G APIs at Orange."
msgstr "活発なJVMエコシステムとの強力な競争にもかかわらず、Quarkusは、このような利点から、Orange社で5G APIを公開するための優先的な選択肢となりました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Lessons Learned from Adopting Quarkus"
msgstr "Quarkusの採用から得られた教訓"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Migration & Development Experience"
msgstr "マイグレーションと開発経験"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Transitioning from Spring to Quarkus was not overly complex, especially for those familiar with JAX-RS / Jakarta REST."
msgstr "SpringからQuarkusへの移行は、特にJAX-RSやJakarta RESTに慣れている人にとっては、それほど複雑ではありませんでした。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "The https://quarkus.io/guides/dev-services[Dev Services] significantly enhanced productivity in dev and test modes, but required careful consideration for their CI/CD environments, where no container runtime is available."
msgstr "link:https://quarkus.io/guides/dev-services[Devサービスは] 、開発およびテストモードでの生産性を大幅に向上させますが、コンテナランタイムが利用できないCI/CD環境については、慎重な検討が必要でした。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "The modular approach ensured applications remained lightweight but introduced a large number of small dependencies to manage."
msgstr "モジュラー・アプローチは、アプリケーションの軽量化を保証しますが、管理するために多くの小さな依存関係を導入しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Spec-First API Development"
msgstr "スペックファーストAPI開発"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "As spec-first practitioners, integrating OpenAPI specification generation was a crucial requirement that Quarkus handled effectively."
msgstr "スペックファーストの実践者として、OpenAPI仕様生成の統合は、Quarkusが効果的に処理するための重要な要件でした。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Java & Kotlin Interoperability"
msgstr "JavaとKotlinの相互運用性"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"While Quarkus supports Kotlin, writing full Kotlin extensions proved challenging at times.\n"
"The team retained some Java code, and Java-Kotlin interoperability worked smoothly."
msgstr "QuarkusはKotlinをサポートしていますが、完全なKotlinの拡張機能を書くのは難しいことがわかりました。チームは一部のJavaコードを保持し、JavaとKotlinの相互運用性はスムーズに機能しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Native Compilation & Performance"
msgstr "ネイティブ・コンパイルとパフォーマンス"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"Native compilation produced compact native executables, but the process of producing them was lengthy.\n"
"The team reserved it for the final build stage when absolutely necessary."
msgstr "ネイティブ・コンパイルはコンパクトなネイティブ実行ファイルを作成しますが、その作成プロセスには時間がかかりました。チームは、どうしても必要な場合に、最終的なビルド段階までこの作業を行うことにしました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Some fine-tuning was required to prevent class pruning issues."
msgstr "クラスの枝刈りの問題を防ぐために、いくつかの微調整が必要でした。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "When building native executables, the call tree is analyzed to determine which classes and methods are used. Everything that is not used is pruned to reduce the size of the executable and the RSS usage."
msgstr "ネイティブ実行可能ファイルをビルドする際、どのクラスとメソッドが使用されるかを判断するためにコールツリーが分析されます。使用されていないものはすべて削除され、実行ファイルのサイズとRSSの使用量が削減されます。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "In some cases, e.g. when using reflection, you will have to declare explicitly that a class is used so that it ends up being included in the native executable."
msgstr "リフレクションを使用する場合など、場合によっては、クラスが使用されることを明示的に宣言して、それがネイティブの実行ファイルに含まれるようにする必要があります。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Quarkus provides tooling to simplify this configuration."
msgstr "Quarkusは、この設定を簡素化するツールを提供しています。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Reactive Programming & Mutiny"
msgstr "リアクティブ・プログラミングと叛乱"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Having worked extensively with Reactor, the transition to Mutiny had a learning curve."
msgstr "リアクターで幅広く仕事をしてきたため、ミューティニーへの移行には学習曲線がありました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "While effective and more intuitive thanks to its navigable API, it was perceived as more verbose for the simple cases."
msgstr "ナビゲート可能なAPIのおかげで効果的でより直感的ですが、単純なケースではより冗長であると認識されていました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Architecture Overview"
msgstr "アーキテクチャの概要"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Orange designed a microservices-based architecture to expose 5G APIs efficiently."
msgstr "Orangeは、5G APIを効率的に公開するために、マイクロサービスベースのアーキテクチャを設計しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Microservices & API Wrappers"
msgstr "マイクロサービスとAPIラッパー"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"Each API wrapper was implemented as a dedicated microservice for better version control.\n"
"The team leveraged Reactive APIs wherever possible, since there are a lot of time-consuming asynchronous tasks to be performed on the core network side and saving resources is a business goal."
msgstr "各APIラッパーは、より良いバージョン管理のために専用のマイクロサービスとして実装されました。コアネットワーク側で実行される時間のかかる非同期タスクが多く、リソースを節約することがビジネスの目標であるため、チームは可能な限りReactive APIを活用しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "CI/CD & Deployment"
msgstr "CI/CDとデプロイメント"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Each microservice had its own GitLab repository with an independent build pipeline for its Docker image."
msgstr "各マイクロサービスは、Dockerイメージのための独立したビルドパイプラインを持つ独自のGitLabリポジトリを持っていました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"Renovate was used to automate dependency upgrades.\n"
"A dedicated deployment project pushed new Docker images to an OpenShift cluster using Kustomize + ArgoCD."
msgstr "依存関係のアップグレードを自動化するためにRenovateを使用しました。専用のデプロイプロジェクトは、Kustomize + ArgoCDを使用して新しいDockerイメージをOpenShiftクラスタにプッシュしました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Infrastructure Components"
msgstr "インフラ・コンポーネント"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Additional services included:"
msgstr "その他のサービス"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Vault for secrets management"
msgstr "秘密管理のための保管庫"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Redis for caching"
msgstr "キャッシュ用Redis"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Neo4j for database operations"
msgstr "データベース操作のためのNeo4j"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Kafka for messaging"
msgstr "メッセージング用Kafka"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Vert.x HTTP Proxy was used for routing and backend protection."
msgstr "ルーティングとバックエンドの保護には、Vert.x HTTP Proxyを使用しました。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Results & Impact"
msgstr "結果とインパクト"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"After implementing Quarkus in production, Orange successfully **deployed ten APIs** across various 4G/5G network cores.\n"
"Over time, the team performed **multiple Quarkus version upgrades (2.11 → 3.14)**, all well-managed through Renovate with minimal code adaptation—except for necessary adjustments during the migration to Jakarta EE."
msgstr "本番環境にQuarkusを導入した後、Orangeはさまざまな4G/5Gネットワークコアに *10個のAPIを展開する* ことに成功しました。その間、チームは *複数のQuarkusバージョンアップ（2.11→3.14）を* 行いましたが、ジャカルタEEへの移行時に必要な調整を除き、コードの変更を最小限に抑えながら、すべてRenovateによって適切に管理されました。"
