msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: YAML Front Matter: title
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Micrometer is recommended for metrics with Quarkus 1.9"
msgstr "Quarkus1.9での測定には、Micrometerを推奨します。"

#. type: YAML Front Matter: synopsis
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Micrometer is the recommended approach for metrics with Quarkus."
msgstr "Quarkusを使ったメトリクスは、Micrometerが推奨されています。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Though Quarkus offers extensions for MicroProfile,\n"
"including metrics,\n"
"we're now recommending the use of the Micrometer extension for metrics in Quarkus with the release of 1.9."
msgstr "Quarkusでは、メトリクスを含むMicroProfile用のエクステンションを提供していますが、Quarkus 1.9のリリースでは、Quarkusのメトリクス用にMicrometerエクステンションの使用を推奨しています。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Brief MicroProfile Metrics History"
msgstr "MicroProfile Metricsの簡単な歴史"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"During the creation of the MicroProfile Metrics specification in 2017,\n"
"Dropwizard Metrics was the most popular metrics library at that time.\n"
"It was a natural fit for MicroProfile to use DropWizard Metrics as inspiration for a metrics specification."
msgstr "2017年にMicroProfile Metrics仕様を作成した際、Dropwizard Metricsは当時最も人気のあるメトリクスライブラリでした。MicroProfileがDropWizard Metricsをメトリクス仕様のインスピレーションとして使用するのは自然なことでした。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The monitoring ecosystem for cloud environments has evolved considerably since then,\n"
"and that has prompted a re-evaluation of how we approach working with metrics."
msgstr "それ以来、クラウド環境のモニタリング・エコシステムは大幅に進化しており、メトリクスを使った作業への取り組み方の再評価を促しています。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Why Micrometer?"
msgstr "なぜMicrometerなのか？"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"During the last 3-4 years,\n"
"there's been a growing focus on the needs of Site Reliability Engineers (SREs) in monitoring the operations of many varied services.\n"
"This focus leads to driving simplicity and ease of use to the SRE world.\n"
"We don't want make the life of an SRE harder!"
msgstr "ここ3～4年、さまざまなサービスの運用を監視するサイト信頼性エンジニア（SRE）のニーズに注目が集まっています。この焦点は、SRE の世界にシンプルさと使いやすさをもたらすことにつながります。私たちは SRE の生活を難しくしたくありません！"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The design and development of Micrometer focused on the needs of SREs from the very beginning.\n"
"A key aspect to that approach is separating out the metric implementation into the registries,\n"
"enabling different registries to customize how the metric export,\n"
"aligning with a specific monitoring tool."
msgstr "Micrometerの設計と開発は、当初からSREのニーズに焦点を当てていました。そのアプローチの重要な側面は、メトリックの実装をレジストリに分離することで、異なるレジストリがメトリックのエクスポート方法をカスタマイズし、特定のモニタリングツールに合わせることができるようにすることです。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Micrometer was built to adapt to the changing cloud native landscape while presenting a steady API for applications and libraries to use.\n"
"Each MeterRegistry implementation encapsulates its specific aggregation and reporting requirements.\n"
"There are MeterRegistry implementations available for cloud monitoring systems like Prometheus and Statsd,\n"
"as well as service providers like Datadog, New Relic or Stackdriver.\n"
"You can include more than one of these registries at the same time, too."
msgstr "Micrometerは、アプリケーションやライブラリが使用できる安定したAPIを提供しながら、変化するクラウドネイティブの状況に適応するように構築されました。各MeterRegistryの実装は、特定の集計とレポート要件をカプセル化します。Prometheus や Statsd のようなクラウド監視システムや、Datadog、New Relic、Stackdriver のようなサービスプロバイダで利用可能な MeterRegistry 実装があります。同時に複数のレジストリを含めることもできます。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"While Micrometer has an API for applications to use,\n"
"practical usage is more focused on the MeterBinder abstraction.\n"
"MeterBinders allow instrumentation for application libraries to be added later.\n"
"It is even better when your application framework can register discovered MeterBinders on your behalf."
msgstr "Micrometerにはアプリケーションが使用するためのAPIがありますが、実用的な使用はMeterBinder抽象化に重点を置いています。MeterBinderを使用すると、アプリケーション・ライブラリのインスツルメンテーションを後から追加できます。アプリケーションフレームワークがあなたの代わりに検出されたMeterBindersを登録することができれば、さらに良いでしょう。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Micrometer does follow different naming conventions than Dropwizard or MP Metrics, for a few reasons.\n"
"First, it uses a dot notation for all metric names, e.g. my.metric.name.\n"
"Each registry implementation can then apply its own naming convention to convert that name into something that matches its convention.\n"
"The Prometheus MeterRegistry converts my.metric.name into my_metric_name, for example.\n"
"Second, Micrometer was built around the notion of dimensional metrics, rather than adapting to it later."
msgstr "Micrometerは、DropwizardやMP Metricsとは異なる命名規則に従っています。まず、my.metric.nameのように、すべてのメトリック名にドット表記を使用します。各レジストリの実装は、独自の命名規則を適用して、その名前をその規則に一致するものに変換することができます。例えば、Prometheus MeterRegistryはmy.metric.nameをmy_metric_nameに変換します。第二に、Micrometerは次元メトリクスの概念を中心に構築されました。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Another benefit to using Micrometer is its usage in the wider Java ecosystem.\n"
"Spring Boot and Micronaut both use Micrometer, amongst others.\n"
"In an environment where SREs are monitoring instances of different Java frameworks,\n"
"having them all produce metrics with the same names and dimensions is incredibly beneficial."
msgstr "Micrometerを使用するもう一つの利点は、より広いJavaエコシステムで使用されていることです。Spring BootもMicronautもMicrometerを使用しています。SREがさまざまなJavaフレームワークのインスタンスを監視している環境では、すべてのフレームワークが同じ名前とディメンションのメトリクスを生成することは非常に有益です。"

#. type: Plain text
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid "For example, we likely have a metric for an HTTP endpoint like below:"
msgstr "例えば、以下のようなHTTPエンドポイントのメトリックがあるとします："

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"With Quarkus,\n"
"the Micrometer extension emits the same HTTP endpoint metric irrespective of whether it was created by JAX-RS,\n"
"Vert.x, or Undertow without the developer needing to add anything to their code.\n"
"The only effort required is to activate metrics."
msgstr "Quarkusを使用すると、Micrometerエクステンションは、JAX-RS、Vert.x、Undertowのいずれで作成されたかに関係なく、同じHTTPエンドポイントのメトリックを出力します。必要な作業は、メトリックを有効にすることだけです。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The http metrics emitted by the Micrometer extension is the also same as what is emitted by Spring Boot and Micronaut,\n"
"allowing SREs to work with aggregated http metrics regardless of which Java framework is used."
msgstr "Micrometerエクステンションが出力するhttpメトリクスは、Spring BootやMicronautが出力するものと同じなので、SREはどのJavaフレームワークが使われているかに関係なく、集約されたhttpメトリクスを扱うことができます。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Can I still use MicroProfile Metrics?"
msgstr "MicroProfile Metricsはそのまま使えますか？"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The MicroProfile Metrics extension, `quarkus-smallrye-metrics`,\n"
"is still available and usable by applications.\n"
"For all the reasons outlined in <<why-micrometer>>,\n"
"Quarkus no longer recommends applications use the extension."
msgstr "MicroProfile Metricsエクステンション（ `quarkus-smallrye-metrics` ）は現在も使用可能で、アプリケーションで使用できます。 <<why-micrometer>> に概説されているすべての理由により、Quarkusではアプリケーションにこのエクステンションを使用することを推奨していません。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"In the short to medium term,\n"
"we will be working with the MicroProfile Metrics community to evolve the specification to be aligned with Micrometer.\n"
"What that means for the specification is not likely to be known until some time in 2021."
msgstr "短中期的には、MicroProfile Metricsのコミュニティと協力して、仕様をMicrometerに合わせたものに進化させる予定です。この仕様が何を意味するかは、2021年になってみないとわかりません。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"For those that prefer to retain compatibility with MicroProfile Metrics,\n"
"despite the problems discussed in <<why-micrometer>>,\n"
"that will remain possible,\n"
"but at the discretion of application developers to make the informed choice."
msgstr "マイクロプロファイルメトリクスとの互換性を維持したい場合は、 <<why-micrometer>> で説明されている問題にもかかわらず、引き続き可能ですが、アプリケーション開発者が十分な情報を得た上で選択する必要があります。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Since 1.8 Quarkus offered two extensions for metrics,\n"
"`quarkus-micrometer` and `quarkus-smallrye-metrics`.\n"
"With the release of 1.9,\n"
"Quarkus will be recommending `quarkus-micrometer` for use with metrics."
msgstr "1.8以降、Quarkusは、 `quarkus-micrometer` と `quarkus-smallrye-metrics` という2つのメトリクス用エクステンションを提供しています。1.9のリリースでは、Quarkusは、 `quarkus-micrometer` 、メトリクスでの使用を推奨しています。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Come play with the extension,\n"
"we love it for many reasons and hope you will too.\n"
"Reach out if you have any issues using the Micrometer extension in Quarkus!"
msgstr "私たちはこのエクステンションが大好きです。QuarkusでMicrometerエクステンションを使用していて問題があれば、ご連絡ください！"
