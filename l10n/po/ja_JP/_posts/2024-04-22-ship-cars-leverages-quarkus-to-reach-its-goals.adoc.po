msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Ship.Cars leverages Quarkus to reach its goals"
msgstr "Ship.Cars、Quarkusを活用して目標を達成"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Ship.Cars utilizes the Quarkus framework to increase efficiency and reduce costs in their auto transport logistics, despite initial challenges, the result is improved productivity and future scalability."
msgstr "Ship.CarsはQuarkusのフレームワークを利用して、自動車輸送ロジスティクスの効率化とコスト削減を実現しました。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"https://ship.cars/[Ship.Cars] is a revolutionary partner in auto transport logistics, offering customizable software solutions specially tailored to accommodate all your car hauling requirements.\n"
"Our tools are impeccably designed to amplify your business's ability to streamline, automate, and organize the entire car hauling process, from start to finish."
msgstr "link:https://ship.cars/[Ship.Carsは] 、自動車輸送ロジスティクスの革命的なパートナーであり、お客様のすべての自動車輸送要件に対応するために特別にカスタマイズ可能なソフトウェアソリューションを提供しています。当社のツールは、最初から最後まで、自動車運搬プロセス全体を合理化、自動化、組織化するあなたのビジネスの能力を増幅するために完璧に設計されています。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"Through the development of various products, Ship.Cars has helped the automotive logistics industry to transition into the modern age.\n"
"Our industry solutions, such as LoadMate and LoadMate Pro, cater to the various needs of dealerships, rental car companies, and other shippers.\n"
"Meanwhile, innovations like our SmartHaul TMS and SmartHaul APP have become indispensable tools for our car haulers to book and manage their loads."
msgstr "さまざまな製品の開発を通じて、Ship.Carsは自動車ロジスティクス業界の現代への移行を支援してきました。LoadMateやLoadMate Proなどの業界ソリューションは、ディーラー、レンタカー会社、その他の荷主のさまざまなニーズに対応しています。一方、SmartHaul TMSやSmartHaul APPのようなイノベーションは、自動車輸送業者にとって、積荷を予約・管理するための不可欠なツールとなっています。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Contending with challenges"
msgstr "課題との闘い"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"As a product-centric organization, we utilize the microservice paradigm to deliver a diverse array of functionality via numerous distinct software products.\n"
"Thus far, we've developed over **50** microservices.\n"
"Each of these not only meets the requisite functional requirements but also adheres to rigorous technical specifications.\n"
"These specifications ensure seamless provisioning of services, consistent performance under load, and easy identification and resolution of any arising issues."
msgstr "製品中心の組織として、私たちはマイクロサービスのパラダイムを活用し、多数の異なるソフトウェア製品を通じて多様な機能を提供しています。これまでに *50* 以上のマイクロサービスを開発しました。これらのそれぞれは、必要な機能要件を満たすだけでなく、厳格な技術仕様にも準拠しています。これらの仕様により、サービスのシームレスなプロビジョニング、負荷がかかった状態での一貫したパフォーマンス、発生した問題の容易な特定と解決が保証されます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"The construction of these services, over a large period of time, has relied on various frameworks, including _Quarkus_ , _Spring Boot_ and _Django_.\n"
"Each framework exhibits its unique strengths and weaknesses extending from nuanced characteristics.\n"
"However, with time, we've determined that Quarkus optimally fulfills a large portion of our requirements.\n"
"This explains our current shift from Django to Quarkus for a significant portion of our development."
msgstr "これらのサービスの構築は、長い期間にわたって、 _Quarkus_ 、 _Spring Boot_ 、 _Djangoを_ 含む様々なフレームワークに依存してきました。それぞれのフレームワークは、微妙な特性からくる独自の長所と短所を示しています。しかし、時間の経過とともに、Quarkus が私たちの要件の大部分を最適に満たすと判断しました。これが、開発の大部分をDjangoからQuarkusに移行している現在の理由です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"As Ship.Cars deploys its microservices on Kubernetes within the Google Cloud platform, we continually seek efficient ways to scale our developmental prowess, while simultaneously saving cloud resource consumption.\n"
"With cloud resource consumption costs always being a priority, we strive to find effective ways to optimize memory and processor use in the cloud."
msgstr "Ship.CarsはGoogle Cloudプラットフォーム内のKubernetes上にマイクロサービスをデプロイしているため、開発能力を拡張すると同時にクラウドのリソース消費を節約する効率的な方法を継続的に模索しています。クラウドのリソース消費コストは常に優先事項であるため、クラウドでのメモリとプロセッサの使用を最適化する効果的な方法を見つけるよう努めています。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Common challenges often arise when deploying microservices in the cloud, including:"
msgstr "クラウドにマイクロサービスをデプロイする際には、以下のような共通の課題がよく発生します："

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Lower cloud resource consumption**: Multiple active microservices can consume a significant amount of memory and CPU, escalating costs rapidly.\n"
"Hence, effective management of cloud resources is crucial."
msgstr "*クラウドリソースの消費を抑* えます：複数のアクティブなマイクロサービスは、メモリとCPUを大量に消費し、コストを急激に上昇させます。そのため、クラウドのリソースを効果的に管理することが重要です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Faster boot-up times**: In a microservices architecture, it's important for services to stop, start, and scale swiftly.\n"
"Slow boot-up times can have a severe impact on system performance and responsiveness."
msgstr "*起動時間の短縮* ：マイクロサービスアーキテクチャでは、サービスを迅速に停止、開始、拡張することが重要です。起動時間が遅いと、システムのパフォーマンスと応答性に深刻な影響を及ぼします。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Streamlined microservices development**: Building and ensuring interoperability within microservices can be complex, requiring deft management and specialized tooling."
msgstr "*マイクロサービス開発の合理化* マイクロサービス内の構築と相互運用性の確保は複雑で、巧みな管理と専用のツールが必要になります。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Resilience and fault tolerance**: Microservices must be resilient and capable of quick recovery from unexpected failures.\n"
"Implementing such fault tolerance mechanisms, however, can be challenging."
msgstr "*回復力と耐障害性* ：マイクロサービスは弾力性があり、予期せぬ障害から素早く復旧できなければなりません。しかし、このようなフォールトトレランスのメカニズムを実装することは困難です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Service discovery**: The ability to discover and communicate between services becomes critical as their number increases.\n"
"Traditional hard-coded endpoints do not scale well in these scenarios."
msgstr "*サービスの発見* ：サービスの数が増えれば増えるほど、サービス間のディスカバリーと通信が重要になります。従来のハードコードされたエンドポイントは、このようなシナリオではうまく拡張できません。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Event-driven microservices**: Implementing an event-driven architectural model in microservices enables distinct services to communicate asynchronously.\n"
"Yet, orchestrating this can be difficult."
msgstr "*イベント駆動型マイクロサービス* ：マイクロサービスにイベント駆動型アーキテクチャモデルを実装することで、異なるサービスが非同期で通信できるようになります。しかし、これをオーケストレーションするのは困難です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Reactive and imperative programming**: The selection of an appropriate programming model for the cloud, especially one that supports scalability and system responsiveness, can be daunting."
msgstr "*反応型プログラミングと命令型プログラミング* ：クラウドに適したプログラミング・モデル、特にスケーラビリティとシステムの応答性をサポートするプログラミング・モデルを選択するのは大変です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Quarkus could beautifully address these challenges as follows:"
msgstr "クオークスはこのような課題に対して、次のように見事に対処することができました："

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Lower cloud resource consumption**: Known for their high memory usage, traditional Java applications can get expensive in a cloud environment where resources cost money.\n"
"Quarkus significantly reduces the memory footprint of applications, leading to more efficient cloud resource management."
msgstr "*クラウドのリソース消費を低減* ：メモリ使用量が多いことで知られる従来のJavaアプリケーションは、リソースにコストがかかるクラウド環境では高くつく可能性があります。Quarkusは、アプリケーションのメモリフットプリントを大幅に削減し、クラウドのリソース管理を効率化します。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Faster boot-up times**: Slow startup times are quite common with traditional Java applications, an issue that presents a particular problem in the cloud where applications need to scale up and down quickly.\n"
"Quarkus drastically improves start-up performances, with applications often starting in sub-second times."
msgstr "*起動時間の短縮* ：従来のJavaアプリケーションでは、起動に時間がかかるのが一般的でした。この問題は、アプリケーションを迅速にスケールアップ／スケールダウンする必要があるクラウドでは特に問題となります。Quarkusでは、起動時のパフォーマンスが劇的に改善され、アプリケーションの起動時間が秒以下に短縮されることがよくあります。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Streamlined microservices development**: Quarkus has been designed to work with popular Java standards and technologies such as `Eclipse MicroProfile`, `Jakarta EE`, `OpenTelemetry`, `Hibernate`, etc., simplifying the development process and reducing the time and complexity involved."
msgstr "*合理化されたマイクロサービス開発* ：Quarkusは、 `Eclipse MicroProfile` 、 `Jakarta EE` 、 `OpenTelemetry` 、 `Hibernate` などの一般的なJava標準やテクノロジーと連携するように設計されているため、開発プロセスが簡素化され、時間と複雑さが軽減されます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Resilience and fault tolerance**: Quarkus employs the `MicroProfile Fault Tolerance` specification to provide features like timeout, retry, bulkhead, circuit breaker, and fallback.\n"
"These features render your microservices more resilient and fault-tolerant."
msgstr "*回復力とフォールトトレランス* ：Quarkusは、タイムアウト、再試行、バルクヘッド、サーキットブレーカー、フォールバックなどの機能を提供するために、 `MicroProfile Fault Tolerance` 仕様を採用しています。これらの機能により、マイクロサービスの弾力性と耐障害性が向上します。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Service discovery**: Quarkus supports Kubernetes service discovery natively, allowing services to discover and communicate with each other in a reliable manner."
msgstr "*サービスディスカバリー* ：QuarkusはKubernetesのサービスディスカバリーをネイティブでサポートしており、サービス同士が信頼性の高い方法でディスカバリーして通信できます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Event-driven microservices**: Quarkus supports event-driven architecture, enabling services to communicate through events, thereby reducing the complexity and coupling between the services."
msgstr "*イベント駆動型マイクロサービス* ：Quarkusはイベント駆動型アーキテクチャをサポートしており、サービス間でイベントを通じて通信できるため、サービス間の複雑さや結合が軽減されます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Reactive and imperative programming**: Quarkus gives developers the freedom to use reactive or imperative programming models or even combine both in the same application, creating a perfect solution for scalability and system responsiveness."
msgstr "*リアクティブプログラミングと命令型プログラミング* Quarkusでは、開発者が反応型または命令型のプログラミングモデルを自由に使用したり、同じアプリケーションで両方を組み合わせたりすることができます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Tackling cloud resource consumption"
msgstr "クラウドのリソース消費への取り組み"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"For businesses like ours, one of our organizational goals is to reduce costs while not sacrificing platform’s performance to ensure premium user experience.\n"
"However, traditional **JVM-based** services often present challenges like substantial memory footprints, extended startup times, and high CPU usage.\n"
"These problems not only impact technical aspects but also have financial implications, significantly affecting the overall cost of running and maintaining software solutions."
msgstr "当社のような企業にとって、組織的な目標の1つは、コストを削減する一方で、プラットフォームのパフォーマンスを犠牲にすることなく、最高のユーザー体験を確保することです。しかし、従来の *JVMベースの* サービスは、多くの場合、大量のメモリフットプリント、起動時間の延長、CPU使用率の高さといった課題を抱えています。これらの問題は、技術的な側面に影響を与えるだけでなく、財務的な意味合いも持ち、ソフトウェア・ソリューションの実行と維持の全体的なコストに大きな影響を与えます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"Native images are standalone executables that include both the application code and the necessary runtime components.\n"
"With the advent of GraalVM, a high-performance, polyglot virtual machine able to run applications written in different programming languages, the concept of native images has gained popularity."
msgstr "ネイティブ・イメージは、アプリケーション・コードと必要なランタイム・コンポーネントの両方を含むスタンドアロン実行可能ファイルです。さまざまなプログラミング言語で書かれたアプリケーションを実行できる、高性能でポリグロットな仮想マシンであるGraalVMの登場により、ネイティブ・イメージのコンセプトは人気を博しています。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Native images offer several advantages, such as:"
msgstr "ネイティブ画像には、次のような利点があります："

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Faster startup time**: As pre-compiled entities, native images can start incredibly quickly, often in milliseconds.\n"
"This aspect is hugely beneficial when applications need to start and stop almost instantly, like in serverless functions or cloud-based microservices architectures.\n"
"For instance, one of our microservices, `native powered by Quarkus 3.2.7.Final`, starts in just 0.677s."
msgstr "*起動時間の短縮* ：コンパイル済みのエンティティであるネイティブ・イメージは、驚くほど高速に、多くの場合ミリ秒単位で起動できます。この側面は、サーバーレス機能やクラウドベースのマイクロサービス・アーキテクチャのように、アプリケーションがほぼ瞬時に起動・停止する必要がある場合に非常に有益です。例えば、私たちのマイクロサービスの1つである `native powered by Quarkus 3.2.7.Final` は、わずか0.677秒で起動します。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"**Lower memory footprint**: Applications' memory footprints can be significantly reduced with native images as they only include the runtime components actually used by the applications.\n"
"This efficiency is important in cloud environments where resource usage directly affects costs."
msgstr "*メモリ・フットプリントの低減* ：ネイティブ・イメージには、アプリケーションが実際に使用するランタイム・コンポーネントのみが含まれるため、アプリケーションのメモリ・フットプリントは大幅に削減できます。リソースの使用量がコストに直接影響するクラウド環境では、この効率性が重要です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "*Real service memory usage*"
msgstr "*実サービスのメモリ使用量*"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Memory usage of a Quarkus native image"
msgstr "Quarkusネイティブイメージのメモリ使用量"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Easier distribution: As standalone executables, native images can be easily distributed and run on any environment without requiring the installation of a separate runtime."
msgstr "配布がより簡単に：スタンドアロンの実行可能ファイルであるネイティブ・イメージは、別のランタイムをインストールすることなく、どのような環境でも簡単に配布して実行できます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"Reduced container size: Being fully self-contained, the container images for native images are more efficient to distribute due to their reduced size.\n"
"This leads to faster start-up times in containerized environments like Kubernetes.\n"
"For example, the size comparison between `Quarkus Native (85.1 MB)`, `Quarkus Non-Native (648.4 MB)` and `Spring Boot (861.9 MB)` provides a clear picture of the difference in resource efficiency between them."
msgstr "コンテナサイズの縮小：完全に自己完結しているため、ネイティブイメージ用のコンテナイメージはサイズが小さくなり、配布効率が向上します。これは、Kubernetesのようなコンテナ化環境での起動時間の短縮につながります。たとえば、 `Quarkus Native (85.1 MB)` 、 `Quarkus Non-Native (648.4 MB)` 、 `Spring Boot (861.9 MB)` のサイズを比較すると、リソース効率の違いが一目瞭然です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "With Quarkus, you can compile your application into a native image by leveraging the GraalVM native-image compiler, allowing your Java applications to experience these advantages in cloud platforms, containerization, and serverless architectures due to their swift startup times and lower resource consumption."
msgstr "Quarkusを使用すると、GraalVMネイティブイメージコンパイラを活用して、アプリケーションをネイティブイメージにコンパイルできます。これにより、Javaアプリケーションは、クラウドプラットフォーム、コンテナ化、サーバーレスアーキテクチャにおいて、迅速な起動時間とリソース消費の低減というメリットを享受できます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Optimizing developer productivity"
msgstr "開発者の生産性を最適化"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Quarkus brings several benefits which enhance developer productivity, such as:"
msgstr "Quarkusには、開発者の生産性を向上させる以下のようなメリットがあります："

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Live Coding**: With no build time and deploy time, developers can test changes to the code instantaneously."
msgstr "*ライブコーディング* ：ビルド時間やデプロイ時間がないため、開発者はコードの変更を即座にテストできます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Zero configuration with Dev Services**: Quarkus can automatically configure some services for development and testing purposes, enhancing efficiency."
msgstr "*Devサービスで設定不要* ：Quarkusでは、開発およびテスト用に一部のサービスを自動的に設定できるため、効率が向上します。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Continuous testing**: Continuous testing is implemented via the command line and the Dev UI, enhancing the quality of the end product without depending on third-party tools and processes."
msgstr "*継続的なテスト* サードパーティのツールやプロセスに依存することなく、最終製品の品質を高めることができます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Dev UI**: Developers can configure extensions, monitor the application, and test components with great ease."
msgstr "*Dev UI* ：開発者は、エクステンションの設定、アプリケーションの監視、コンポーネントのテストを非常に簡単に行うことができます。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Unified config**: All of the application's configurations are consolidated in one place, improving accessibility."
msgstr "*統一されたコンフィグ* ：アプリケーションのすべてのコンフィギュレーションが一箇所に集約され、アクセシビリティが向上します。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "**Standards-based**"
msgstr "*スタンダードベース*"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Embracing Quarkus extensions"
msgstr "Quarkusのエクステンションの採用"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"Quarkus Extensions are pre-configured feature sets designed to simplify several common tasks during application development.\n"
"They offer an efficient way to imbibe new capabilities or direct integrations in your project with minimum effort."
msgstr "Quarkusエクステンションは、アプリケーション開発中のいくつかの一般的なタスクを簡素化するために設計された、設定済みの機能セットです。最小限の労力で、プロジェクトに新しい機能を取り入れたり、直接統合したりする効率的な方法を提供します。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"In our organization, we managed to implement our internal extensions swiftly, effectively addressing maintenance issues and configuration incompatibilities we encountered earlier while trying to create native images.\n"
"Today, we benefit from an extension hub that quells all previous concerns and enhances our productivity."
msgstr "私たちの組織では、社内のエクステンションを迅速に実装し、以前ネイティブイメージを作成しようとして遭遇したメンテナンスの問題や設定の非互換性に効果的に対処することができました。現在では、エクステンションハブによって以前の懸念がすべて解消され、生産性が向上しています。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "While Quarkus extensions are powerful tools offering deep integration, optimization, and enhanced developer experience, it's essential to weigh the trade-offs and consider if simpler solutions like standard JAR libraries might suit the need better."
msgstr "Quarkusのエクステンションは、深い統合、最適化、開発者のエクスペリエンスの向上を提供する強力なツールですが、トレードオフを考慮し、標準的なJARライブラリのようなシンプルなソリューションの方がニーズに合っているかどうかを検討することが重要です。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Looking ahead"
msgstr "今後の展望"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "In the graphical representation below, I want to illustrate the inherent relationship between the process of adopting Quarkus and the subsequent outcomes over time."
msgstr "以下のグラフでは、Quarkusを採用するプロセスと、その後の結果との間の本質的な関係を説明したいと思います。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid "Comparison of Difficulty/Cost and Ease of Ease-of-Use/Returns Over Time in Adopting Quarkus Features"
msgstr "Quarkusの機能を採用する際の難易度／コスト、使いやすさ／リターンの経年比較"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"On the _\"Y-Axis\"_, we define difficulty or cost in terms of story-points per sprint, reflecting the relative effort required for the features' implementation.\n"
"This also represents costs in terms of time and resources spent in the adoption of Quarkus features. Simultaneously, ease-of-use/returns take into account metrics such as decreased debugging time,\n"
"faster feature development, and improvements in team productivity post successful implementation.\n"
"The graph clearly demonstrates that at the outset (tagged as _\"Begin\"_ on the _\"X-Axis\"_), both the difficulty (illustrated in higher story points) and costs are at their peak, signifying a challenging initial phase.\n"
"However, as we move along the timeline from _\"Begin\"_ through _\"Middle\"_ and onto _\"Future\"_, we see a notable drop in story-points per sprint, indicating a reduced difficulty level and cost.\n"
"In parallel to this, the ease-of-use and returns charted start at a comparatively low point at the beginning.\n"
"These escalate gradually as we advance along the timeline towards _\"Middle\"_ and _\"Future\"_, showing a tangible increase in productivity and other gains from adopting and integrating Quarkus features into our practices."
msgstr "_Y軸_ 」では、機能の実装に必要な相対的な労力を反映し、スプリントあたりのストーリーポイントで難易度やコストを定義します。これは、Quarkusの機能を採用するために費やされた時間とリソースのコストでもあります。同時に、使いやすさ/リターンには、デバッグ時間の短縮、機能開発の迅速化、実装成功後のチーム生産性の向上などの指標が考慮されています。グラフは、開始時（ _「X軸_ 」の _「開始_ 」と表示）には、難易度（高いストーリーポイントで図示）とコストの両方がピークに達しており、初期段階が困難であることを明確に示しています。しかし、 _\"Begin_ \"から _\"Middle\"_ 、そして _\"Future \"_ と時間軸に沿って進むにつれて、スプリントあたりのストーリーポイントは顕著に低下し、難易度とコストが低下していることがわかります。これと並行して、使いやすさとリターンのチャートも、最初は比較的低いところから始まります。これは、Quarkusの機能を採用し、実務に統合することによって、生産性やその他の利益が目に見えて向上していることを示しています。"

#: _posts/2024-04-22-ship-cars-leverages-quarkus-to-reach-its-goals.adoc
#, fuzzy
msgid ""
"By the time we reach _\"Future\"_, we see a substantial decrease in difficulty and cost, while the ease-of-use and returns have considerably increased.\n"
"This dual progression effectively highlights the significant benefits of investing in the adoption of Quarkus, despite the initial challenges.\n"
"Investing in Quarkus is a strategic maneuver towards creating efficient, scalable, and modern applications aptly suited for the cloud era.\n"
"With its robust capabilities and supportive community, Quarkus is well-positioned to pioneer the future of cloud-native application development.\n"
"The decision to adopt Quarkus is a significant leap towards optimizing for efficiency, scalability, and cutting-edge application performance that will provide us with a considerable competitive edge in the rapidly evolving tech landscape."
msgstr "_Future_ 」に到達する頃には、難易度とコストは大幅に下がり、使いやすさとリターンは大幅に増えています。この二重の進行は、最初の課題にもかかわらず、Quarkusの導入に投資することの大きなメリットを効果的に浮き彫りにしています。Quarkusへの投資は、クラウド時代に適した、効率的でスケーラブルな最新のアプリケーションを作成するための戦略的な作戦です。Quarkusは、その堅牢な機能と支持的なコミュニティによって、クラウドネイティブアプリケーション開発の未来を切り開くのに十分な立場にあります。Quarkusを採用するという決定は、効率性、スケーラビリティ、最先端のアプリケーションパフォーマンスの最適化に向けた大きな飛躍であり、急速に進化する技術環境の中で、かなりの競争力を得ることができます。"
