msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: YAML Front Matter: title
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Compiling virtual thread applications into native executables"
msgstr "仮想スレッド・アプリケーションをネイティブ実行可能ファイルにコンパイルする"

#. type: YAML Front Matter: synopsis
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Learn how to compile applications using virtual threads into native executable."
msgstr "仮想スレッドを使用したアプリケーションをネイティブ実行可能ファイルにコンパイルする方法を学ぶ。"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"In https://quarkus.io/blog/virtual-threads-2/[another blog post], we have seen how you can implement a CRUD application with Quarkus to utilize virtual threads.\n"
"This post will show how you can compile such an application into a native executable."
msgstr "link:https://quarkus.io/blog/virtual-threads-2/[別のブログ記事] で、Quarkusを使用してCRUDアプリケーションを実装し、仮想スレッドを利用する方法を紹介しました。この記事では、このようなアプリケーションをネイティブ実行可能ファイルにコンパイルする方法を紹介します。"

#. type: Title ==
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Installing GraalVM 21"
msgstr "GraalVMのインストール"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"To compile a Quarkus application leveraging virtual threads into a native executable, you need a GraalVM version supporting Java 21.\n"
"You can download it from https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-21.0.0[GitHub]."
msgstr "仮想スレッドを活用するQuarkusアプリケーションをネイティブ実行可能ファイルにコンパイルするには、Java 21をサポートするGraalVMのバージョンが必要です。 link:https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-21.0.0[GitHubから] ダウンロードできます。"

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "Alternatively, you can use the https://sdkman.io/[SDKMAN] tool to install it:"
msgstr "または、 link:https://sdkman.io/[SDKMAN] ツールを使用してインストールすることもできます："

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "Once installed, make sure the `GRAALVM_HOME` environment variable points to the GraalVM installation directory:"
msgstr "インストールが完了したら、 `GRAALVM_HOME` 環境変数が GraalVM のインストール・ディレクトリを指していることを確認してください："

#. type: Title ==
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Compiling the application into a native executable"
msgstr "アプリケーションをネイティブ実行可能ファイルにコンパイルする"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"We will reuse the CRUD application developed in a https://quarkus.io/blog/virtual-threads-2/[previous blog post].\n"
"The source code is located in the https://github.com/quarkusio/virtual-threads-demos/tree/main/crud-example[virtual-threads-demos GitHub repository].\n"
"Note that while we are using the CRUD application, the same approach can be used with any Quarkus application leveraging virtual threads, including the other demos from the repository."
msgstr "link:https://quarkus.io/blog/virtual-threads-2/[以前のブログ記事] で開発したCRUDアプリケーションを再利用します。ソースコードは link:https://github.com/quarkusio/virtual-threads-demos/tree/main/crud-example[virtual-threads-demos GitHub リポジトリ] にあります。今回はCRUDアプリケーションを使用しますが、リポジトリにある他のデモも含め、仮想スレッドを活用するQuarkusアプリケーションであれば同じアプローチが使用できることに注意してください。"

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "First make sure you use Java 21+ and that the `GRAALVM_HOME` environment variable points to the GraalVM installation directory."
msgstr "まず、Java 21+を使用していることと、 `GRAALVM_HOME` 環境変数がGraalVMのインストール・ディレクトリを指していることを確認してください。"

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "Then, in the `pom.xml` file, add the `native` profile:"
msgstr "次に、 `pom.xml` ファイルに、 `native` プロファイルを追加する："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"The `native` profile is activated when the `native` property is set.\n"
"So, compile the application with:"
msgstr "`native` プロパティが設定されると、 `native` プロファイルが有効になります。そのため、アプリケーションを"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"The compilation takes a few minutes.\n"
"Once done, you can run the application:"
msgstr "コンパイルには数分かかります。完了したら、アプリケーションを実行できます："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "1) First, start the database:"
msgstr "1) まず、データベースを起動します："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "2) Then, start the application:"
msgstr "2) 次に、アプリケーションを起動します："

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "You get:"
msgstr "あなたは手に入れることができる："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"Then, open the application in a browser (http://localhost:8080) and start adding, updating, and completing tasks.\n"
"You will see in the logs that the processing of these requests are executed on virtual threads:"
msgstr "次に、ブラウザ ( link:http://localhost:8080[http://localhost:8080 )] でアプリケーションを開き、タスクの追加、更新、完了を開始します。これらのリクエストの処理が仮想スレッドで実行されていることがログでわかります："

#. type: Title ==
#: _posts/2023-10-19-virtual-threads-5.adoc
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"This blog post explains how to compile a Quarkus application leveraging virtual threads into a native executable.\n"
"First, make sure that you have a GraalVM installation supporting Java 21+.\n"
"Then, add the `native` profile to the `pom.xml` file and compile the application using the `-Dnative` option.\n"
"Finally, run it as any other native executable!"
msgstr "このブログ記事では、仮想スレッドを活用するQuarkusアプリケーションをネイティブ実行可能ファイルにコンパイルする方法を説明します。まず、Java 21+をサポートするGraalVMがインストールされていることを確認します。次に、 `pom.xml` ファイルに `native` プロファイルを追加し、 `-Dnative` オプションを使用してアプリケーションをコンパイルします。最後に、他のネイティブ実行可能ファイルとして実行します！"
