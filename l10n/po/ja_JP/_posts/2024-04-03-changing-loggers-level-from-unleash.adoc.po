msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Changing the Quarkus loggers level from Unleash"
msgstr "UnleashからのQuarkusロガーレベルの変更"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Updating an environment variable to change a logger level can sometimes be slow. What if you could change that level immediately with Unleash?"
msgstr "ロガーレベルを変更するために環境変数を更新すると、時間がかかることがあります。Unleashですぐにレベルを変更できるとしたらどうでしょう？"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
msgid "Introduction"
msgstr "はじめに"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"I'm part of a Red Hat team that is responsible for a dozen of Quarkus apps which run in Red Hat OpenShift, with multiple pods each.\n"
"While these apps all have different purposes, they also share a common fate: something will go wrong eventually.\n"
"When it does, we'll need to understand and fix the problem as fast as possible.\n"
"Lowering the level of a logger is often helpful, but our apps are containerized and updating an environment variable to change the logger level isn't always as easy at it sounds.\n"
"We also don't want to expose REST endpoints in most of our apps, so extensions such as https://github.com/quarkiverse/quarkus-logging-manager[quarkus-logging-manager^] are not an option."
msgstr "私はRed Hatのチームの一員で、Red Hat OpenShiftで複数のポッドごとに実行される十数個のQuarkusアプリを担当しています。これらのアプリはすべて異なる目的を持っていますが、共通の宿命も持っています。そうなったら、できるだけ早く問題を理解し、修正する必要があります。ロガーのレベルを下げることは多くの場合役に立ちますが、私たちのアプリはコンテナ化されており、ロガーレベルを変更するために環境変数を更新することは、必ずしも簡単ではありません。また、ほとんどのアプリでRESTエンドポイントを公開したくないので、 link:https://github.com/quarkiverse/quarkus-logging-manager[quarkus-logging-managerの] ようなエクステンションはオプションではありません。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"Our apps have another thing in common: they depend on https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash^] because we're fetching our feature toggles from https://www.getunleash.io/[Unleash^].\n"
"When I read https://medium.com/safe-engineering/how-unleash-enhanced-our-troubleshooting-experience-by-100x-e0c82b6df825[Zero downtime log level changes using Unleash^] from Aman Jain, it made me want to try the same thing with Quarkus.\n"
"I'll show you below how I successfully did that."
msgstr "私たちのアプリにはもう一つ共通点があります。それは、 link:https://www.getunleash.io/[Unleashから] 機能トグルを取得しているため、 link:https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleashに] 依存しているということです。Aman Jain氏の link:https://medium.com/safe-engineering/how-unleash-enhanced-our-troubleshooting-experience-by-100x-e0c82b6df825[Unleashを使用したゼロダウンタイムのログレベル] 変更を読んで、同じことをQuarkusで試してみたくなりました。その方法を以下にお見せします。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"This blog post contains incremental code snippets.\n"
"Each one of them is an enhanced version of the previous one and addresses a specific technical challenge."
msgstr "このブログ記事には、インクリメンタルなコード・スニペットが含まれています。それぞれは前のものを改良したもので、特定の技術的課題に対処しています。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Changing a logger level programmatically"
msgstr "プログラムによるロガーレベルの変更"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Let's start with the obvious requirement: how to change the level of a logger programmatically with Quarkus."
msgstr "Quarkusでロガーのレベルをプログラムで変更する方法です。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"As described in the https://quarkus.io/guides/logging[Logging configuration guide^], Quarkus supports multiple logging APIs.\n"
"I only tested the following code with the JBoss Logging API as well as the `io.quarkus.logging.Log` API.\n"
"I can't guarantee that everything will work out of the box with other logging APIs."
msgstr "link:https://quarkus.io/guides/logging[ロギング設定ガイドに] 記載されているように、Quarkusは複数のロギングAPIをサポートしています。以下のコードは、JBoss Logging APIと `io.quarkus.logging.Log` APIでのみテストしました。他のロギングAPIですぐにすべてが動作することを保証するものではありません。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "The JBoss Logging API doesn't offer a way to change the level of a logger programmatically, so we need the help of the `java.util.logging` API to do it:"
msgstr "JBoss Logging API には、ロガーのレベルをプログラムで変更する方法がないため、 `java.util.logging` API の助けが必要です："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Make sure you're importing classes from the `java.util.logging` package."
msgstr "`java.util.logging` パッケージからクラスをインポートしていることを確認してください。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Any category as described in the https://quarkus.io/guides/logging#logging-categories[Logging configuration guide^] will work as the logger name."
msgstr "link:https://quarkus.io/guides/logging#logging-categories[ロギング設定ガイドに] 記載されている任意のカテゴリが、ロガー名として機能します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "`Level#parse` will throw exceptions if the level name is not valid. Please handle them carefully."
msgstr "`Level#parse` は、レベル名が有効でない場合、例外をスローします。これらの例外は慎重に処理してください。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Setting a logger level from Unleash"
msgstr "Unleashからのロガーレベルの設定"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"So, we're able to set a logger level programmatically.\n"
"Now, how do we feed the `LogLevelManager#setLoggerLevel` method with data from Unleash?"
msgstr "これで、プログラムでロガーレベルを設定できるようになりました。では、 `LogLevelManager#setLoggerLevel` メソッドに Unleash からのデータをどのように送り込むのでしょうか？"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Unleash variants to the rescue"
msgstr "アンリーシュ・バリアントが救出へ"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"In Unleash, the feature toggles can be associated with https://docs.getunleash.io/reference/feature-toggle-variants[variants^] which are meant to facilitate A/B testing and experimentation.\n"
"Each variant is defined with a set of properties, including the optional `payload` that can be used to pass JSON data from Unleash to our Quarkus app.\n"
"That's how we'll set the level of our Quarkus app loggers:"
msgstr "Unleash では、機能のトグルを link:https://docs.getunleash.io/reference/feature-toggle-variants[バリアントに] 関連付けることができ、A/B テストや実験を容易にします。各バリアントは、オプションの `payload` を含む一連のプロパティで定義され、Unleash から Quarkus アプリに JSON データを渡すために使用できます。これが、Quarkusアプリのロガーのレベルを設定する方法です："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Retrieving the variant payload"
msgstr "バリアントペイロードの取得"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Now, let's see how we'll retrieve from the Quarkus app the variant payload defined in Unleash."
msgstr "では、Unleashで定義されたバリアントペイロードをQuarkusアプリから取得する方法を見てみましょう。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "First, the Quarkus app needs to depend on the https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash^] extension."
msgstr "まず、Quarkusアプリは link:https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash] エクステンションに依存する必要があります。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "We'll also use a very simple data structure to deserialize the payload with Jackson:"
msgstr "また、Jacksonでペイロードをデシリアライズするために、非常に単純なデータ構造を使用します："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Then, here's an update of the `LogLevelManager` class to make it get the variant from Unleash, deserialize the payload and change the level of a series of loggers:"
msgstr "次に、 `LogLevelManager` クラスを更新して、Unleash から variant を取得し、ペイロードをデシリアライズし、一連のロガーのレベルを変更します："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "From now on, `LogLevelManager` is an `@ApplicationScoped` bean."
msgstr "今後、 `LogLevelManager` は `@ApplicationScoped` 豆です。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "`Unleash` is an `@ApplicationScoped` bean produced by the https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash^] extension."
msgstr "`Unleash` は、 link:https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash] エクステンションが生成する ビーンです。 `@ApplicationScoped` "

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Be careful about the argument passed to `Unleash#getVariant`: it has to be the toggle name, not the variant name."
msgstr "`Unleash#getVariant` に渡す引数には注意してください : バリアント名ではなく、トグル名でなければなりません。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "`variant.isEnabled()` will return `false` if the toggle is disabled in Unleash or if the toggle has no variants."
msgstr "`variant.isEnabled()` は Unleash で toggle が無効になっているか、 toggle に variant がない場合は を返します。 `false` "

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "If the method is unable to find a variant payload or if it fails to deserialize that payload for any reasons, an empty `LogConfig` array will be returned."
msgstr "メソッドが variant ペイロードを見つけられなかったり、何らかの理由でそのペイロードのデシリアライズに失敗したりした場合は、空の `LogConfig` 配列が返されます。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"We can now retrieve the loggers configuration from Unleash, that's great!\n"
"But that new `LogLevelManager#updateLoggerslevel` method isn't used yet.\n"
"Where should it be used from, and when?"
msgstr "Unleashからロガーの設定を取得できるようになりました！しかし、その新しい `LogLevelManager#updateLoggerslevel` メソッドはまだ使用されていません。いつ、どこから使うべきでしょうか？"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"We need that method to be executed as soon as the loggers configuration is changed in Unleash.\n"
"So, its execution has to be periodically scheduled somehow.\n"
"We could make the method `@Scheduled` with the https://quarkus.io/guides/scheduler-reference[quarkus-scheduler^] extension, but there is a better approach thanks to the Unleash SDK.\n"
"Let's jump to the next section."
msgstr "このメソッドは、Unleashでロガーの設定が変更されるとすぐに実行される必要があります。そのため、このメソッドの実行を定期的にスケジュールする必要があります。 link:https://quarkus.io/guides/scheduler-reference[quarkus-scheduler] エクステンションを使用してメソッドを `@Scheduled` 、Unleash SDKのおかげでより良いアプローチがあります。次のセクションに飛びましょう。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "The Subscriber API from Unleash"
msgstr "UnleashのSubscriber API"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"The Unleash Client SDK for Java comes with a feature that will be very helpful here: the https://docs.getunleash.io/reference/sdks/java#subscriber-api[Subscriber API^].\n"
"The https://github.com/Unleash/unleash-client-java/blob/main/src/main/java/io/getunleash/event/UnleashSubscriber.java[UnleashSubscriber^] interface can indeed be implemented to subscribe to various Unleash events, including `FeatureToggleResponse` which is emitted when the Unleash client fetches toggles from the server."
msgstr "Unleash Client SDK for Javaには、ここで非常に役立つ機能、 link:https://docs.getunleash.io/reference/sdks/java#subscriber-api[Subscriber APIが] 付属しています。 link:https://github.com/Unleash/unleash-client-java/blob/main/src/main/java/io/getunleash/event/UnleashSubscriber.java[UnleashSubscriber] インターフェイスを実装することで、Unleashクライアントがサーバーからトグルをフェッチしたときに発行される `FeatureToggleResponse` 。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"Using the Subscriber API with the https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash^] extension is extremely simple.\n"
"`UnleashSubscriber` needs to be implemented in a CDI bean and that's it!\n"
"The extension will pass the bean to the Unleash client builder automatically."
msgstr "link:https://docs.quarkiverse.io/quarkus-unleash/dev/index.html[quarkus-unleash] エクステンションでSubscriber APIを使用するのは非常に簡単です。 `UnleashSubscriber` 、CDIビーンに実装する必要があります！エクステンションは、このBeanをUnleashクライアントビルダーに自動的に渡します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "We're still using the same `LogLevelManager` class, but now it's implementing `UnleashSubscriber`."
msgstr "同じ `LogLevelManager` クラスを使用していますが、現在は `UnleashSubscriber` を実装しています。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "This method is invoked every time the Unleash client fetches toggles from the server."
msgstr "このメソッドは、Unleashクライアントがサーバーからトグルをフェッチするたびに呼び出されます。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "We'll update the loggers level only if the toggles changed server-side."
msgstr "トグルがサーバー側で変更された場合のみ、ロガーレベルを更新します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"Okay, the `LogLevelManager#updateLoggerslevel` method is now automatically invoked whenever the client fetches new data from the server.\n"
"But what about scheduling that periodically?\n"
"Well, the Unleash client already relies on an internal scheduled executor to fetch the toggles.\n"
"Therefore, we don't need to bother scheduling anything in our app.\n"
"It will work automagically!"
msgstr "さて、 `LogLevelManager#updateLoggerslevel` メソッドは、クライアントがサーバーから新しいデータを取得するたびに自動的に呼び出されるようになりました。しかし、それを定期的にスケジューリングするのはどうでしょうか？Unleashクライアントはすでにトグルをフェッチするために内部のスケジュールされたエクゼキュータに依存しています。ですから、私たちのアプリでわざわざスケジューリングする必要はありません。自動的に動作します！"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "One variant to rule them all"
msgstr "すべてを支配する1つのバリエーション"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"At the beginning of this post, I mentioned that my team is responsible for a dozen of Quarkus apps.\n"
"Each app runs with a varying number of replicas.\n"
"Let's simplify and consider all of them as hosts."
msgstr "この記事の冒頭で、私のチームは12個のQuarkusアプリを担当していると述べました。それぞれのアプリは、さまざまな数のレプリカで実行されています。単純化して、これらすべてをホストとして考えてみましょう。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"We have dozens of hosts and yet only one Unleash variant to manage the loggers level for all of them.\n"
"Here's how I implemented that."
msgstr "私たちには何十ものホストがありますが、それらすべてのロガーレベルを管理するUnleashのバリアントは1つだけです。私が実装した方法は以下の通りです。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "First, the data structure of the variant payload needs a small addition:"
msgstr "まず、バリアントペイロードのデータ構造に少し追加が必要です："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "That's new!"
msgstr "それは新しい！"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Now, we can introduce a host filtering capability in `LogLevelManager`:"
msgstr "ここで、 `LogLevelManager` にホストフィルタリング機能を導入します："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "In OpenShift, we're passing the generated pod name through the `HOST_NAME` environment variable."
msgstr "OpenShift では、生成されたポッド名を `HOST_NAME` 環境変数を通して渡しています。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "This block is used to filter hosts based on a host name prefix. That's enough for our use case, but a regular expression could be used for finer filtering."
msgstr "このブロックはホスト名のプレフィックスに基づいてホストをフィルタリングするために使われます。私たちの使用例ではこれで十分ですが、正規表現を使えばもっと細かいフィルタリングができます。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Here's how the variant payload may look like after these changes:"
msgstr "これらの変更後のバリアントペイロードは以下のようになります："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "In that payload:"
msgstr "そのペイロードでは"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "the first entry will affect a specific host: `unstable-service-7dbbcb4cc-9d9hl`"
msgstr "最初のエントリは特定のホストに影響します： `unstable-service-7dbbcb4cc-9d9hl`"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "the second entry will affect all hosts whose name starts with `awesome-app`"
msgstr "で始まる名前を持つすべてのホストに影響します。 `awesome-app`"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "the third entry will affect all hosts regardless of their names"
msgstr "3番目のエントリは、名前に関係なくすべてのホストに影響します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Reverting changes automatically"
msgstr "変更を自動的に戻す"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid ""
"Changing the level of loggers through an Unleash variant should be a temporary action, mostly for troubleshooting purposes.\n"
"This means we need to revert the level of the loggers eventually when the troubleshooting is over.\n"
"Doing so by hand would be painful, so let's see how we can automate that."
msgstr "Unleash バリアントでロガーのレベルを変更するのは、一時的な操作であるべきです。つまり、トラブルシューティングが終わったら、最終的にロガーのレベルを元に戻す必要があります。手作業でそれをするのは大変なので、自動化する方法を見てみましょう。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "The original logger level is now stored in memory and will be used when the changes are eventually reverted."
msgstr "元のロガー レベルはメモリに保存され、最終的に変更が元に戻されたときに使用されます。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "If the level of a logger was previously modified from Unleash and that logger is no longer part of the latest Unleash variant payload, its level will be reverted to the original value."
msgstr "ロガーのレベルが以前に Unleash から変更され、そのロガーが最新の Unleash バリアント ペイロードの一部でなくなった場合、そのレベルは元の値に戻されます。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "If the original level is `null`, then the logger will inherit the level from its parent logger."
msgstr "元のレベルが `null` の場合、ロガーはその親ロガーからレベルを継承します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
msgid "Conclusion"
msgstr "まとめ"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "The `LogLevelManager` class is still far from perfect, but it finally meets the requirements of this blog post:"
msgstr "`LogLevelManager` クラスはまだ完璧には程遠いですが、ようやくこのブログ記事の要件を満たしています："

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "it changes the level of Quarkus loggers automatically and immediately, based on a variant payload from Unleash"
msgstr "Quarkusロガーのレベルを、Unleashのバリアントペイロードに基づいて、自動的かつ即座に変更します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "it automatically reverts all changes to the previous loggers configuration when needed"
msgstr "必要な場合、以前のロガー設定にすべての変更を自動的に戻します。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Thanks for reading this post! I hope it will help you troubleshoot your applications faster."
msgstr "この記事をお読みいただきありがとうございます！あなたのアプリケーションのトラブルシューティングがより速くなることを願っています。"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Special thanks"
msgstr "スペシャルサンクス"

#: _posts/2024-04-03-changing-loggers-level-from-unleash.adoc
#, fuzzy
msgid "Thanks to Mikel Alejo Barcina for helping me fix a bug in the code above!"
msgstr "上のコードのバグを修正してくれたMikel Alejo Barcinaに感謝します！"
