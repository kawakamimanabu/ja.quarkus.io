msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "From zero to hero on backporting pull requests"
msgstr "バックポート・プルリクエストのゼロからヒーローへ"

#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid ""
"The Quarkus project moves fast and when we prepare bugfix releases, we usually have several dozens of pull requests to backport.\n"
"The number of pull requests to backport is enormous and doing it via the GitHub UI is inconvenient and takes a lot of time (click PR, copy/paste commit hashes to cherry-pick, remove label, assign milestone, assign milestone to all fixed issues, next) plus some limitation of the UI (it's not possible to sort by merge date to avoid conflicts, for example).\n"
"So we decided to automate this work, and built an application.\n"
"Of course, with Quarkus!"
msgstr "Quarkusプロジェクトの動きは速く、バグ修正リリースを準備する際には、通常、数十件のバックポートするプルリクエストがあります。バックポートするプルリクエストの数は膨大で、GitHub の UI を使って行うのは不便で時間がかかります（PR をクリックし、コミットのハッシュをコピー/ペーストしてチェリーピックし、ラベルを削除し、マイルストーンを割り当て、すべての修正済み課題にマイルストーンを割り当て、次へ）。そこで、この作業を自動化しようと考え、アプリケーションを作成しました。もちろん、Quarkusを使用しています！"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Before we dig into the solution, let me give you a quick explanation of our release process."
msgstr "解決策を掘り下げる前に、私たちのリリースプロセスについて簡単に説明させてください。"

#. type: Title ==
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Release process"
msgstr "リリースプロセス"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "The Quarkus Team adopts a `Major.Minor.Patch.Classifier` (eg. _1.7.0.CR1_, _1.7.0.Final_) version pattern. Depending on the version bumped, different processes are adopted:"
msgstr "Quarkusチームは、 `Major.Minor.Patch.Classifier` （例： _1.7.0.CR1_ 、 _1.7.0.Final_ ）バージョンのパターンを採用しています。バンプされるバージョンによって、異なるプロセスが採用されます："

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Major and Minor bumps"
msgstr "メジャーとマイナーのバンプ"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Our main branch is always ready for the next major or minor release.  This process is usually very smooth and involves no backporting."
msgstr "私たちのメインブランチは、常に次のメジャーまたはマイナーリリースの準備ができています。このプロセスは通常、非常にスムーズで、バックポートも必要ありません。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Patch or Classifier bumps"
msgstr "パッチまたはクラシファイのバンプ"

#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid ""
"Whenever a new patched version (or a second CR) is about to be released in Quarkus, our Release team starts backporting commits from pull requests that were merged in the master branch.\n"
"How do they know which pull request to grab? We have a `triage/backport?` label that our team add to pull requests for features that would be worth having it in the upcoming patch release."
msgstr "Quarkusで新しいパッチバージョン（または2つ目のCR）がリリースされそうになると、リリースチームはmasterブランチにマージされたプルリクエストのコミットをバックポートし始めます。どのプルリクエストを取得すればいいのでしょうか？私たちのチームでは、 `triage/backport?` というラベルをプルリクエストに追加しています。"

#. type: Title ==
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "How do we automate that?"
msgstr "それをどう自動化するか。"

#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid ""
"The application basically queries a GitHub repository's merged pull requests and closed issues (using https://docs.github.com/en/graphql[the GraphQL API exposed by GitHub]) containing a certain label and changes their milestones to one selected in the UI (and removing the certain label afterwards).\n"
"Applying the changes introduced by these pull-requests (aka. _cherry-picking_) is simplified by providing a button next to each pull-request to copy the necessary `git cherry-pick` commands to the clipboard - we prefer this step to be done manually by the Release engineer."
msgstr "このアプリケーションは基本的に、あるラベルを含む GitHub リポジトリのマージ済みプルリクエストとクローズ済み課題を ( link:https://docs.github.com/en/graphql[GitHub が公開している GraphQL API] を使って) クエリし、それらのマイルストーンを UI で選択したものに変更します (その後、そのラベルを削除します)。これらのプルリクエストによって導入された変更の適用 (別名: _チェリーピック_ ) は、各プルリクエストの横に必要な `git cherry-pick` コマンドをクリップボードにコピーするボタンを提供することで簡素化されています。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Screenshots"
msgstr "スクリーンショット"

#. type: Title ====
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Choosing a milestone"
msgstr "マイルストーンの選択"

#. type: Title ====
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Choosing the pull requests to be backported"
msgstr "バックポートするプルリクエストを選択する"

#. type: Title ==
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Our experience with Quarkus"
msgstr "Quarkusを使用した体験談"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Here you can find a summary of the extensions used in the backports application:"
msgstr "ここでは、backportsアプリケーションで使用されているエクステンションの概要を紹介しています："

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "ArC (CDI): Manages the services lifecycle"
msgstr "ArC（CDI）です：サービスのライフサイクルを管理する"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "<<microprofile-config>>: To externalize properties"
msgstr "<<microprofile-config>> :プロパティを外部化する"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "RESTEasy: Exposes an endpoint the UI can consume. Also serves the UI using Qute's Type-safe templates (see <<qute>>)."
msgstr "RESTEasy: UIが消費できるエンドポイントを公開します。また、QuteのType-safeテンプレート（ <<qute>> 参照）を使ってUIを提供します。"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "<<qute>>: Used on all templates (UI and GraphQL query payload)"
msgstr "<<qute>> :すべてのテンプレート（UIおよびGraphQLクエリペイロード）で使用されます。"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "<<rest-client>>: To invoke the https://docs.github.com/en/graphql[GitHub's GraphQL endpoint]"
msgstr "<<rest-client>> : link:https://docs.github.com/en/graphql[GitHubのGraphQLエンド] ポイントを呼び出すには"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Cache: For https://github.com/quarkusio/quarkus-backports/blob/291868a9480601dd13b71703e7f8f73552109ded/src/main/java/io/quarkus/backports/GitHubService.java#L84[caching open Milestones] from the GitHub's GraphQL endpoint"
msgstr "キャッシュします：GitHubのGraphQLエンドポイントから link:https://github.com/quarkusio/quarkus-backports/blob/291868a9480601dd13b71703e7f8f73552109ded/src/main/java/io/quarkus/backports/GitHubService.java#L84[開いたマイルストーンをキャッシュ] します。"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Hibernate Validator: For validating input"
msgstr "Hibernate Validatorです：入力のバリデーションを行う"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Jackson (JSON library): To parse the result from the GitHub GraphQL endpoint"
msgstr "Jackson（JSONライブラリ）です：GitHub GraphQLエンドポイントからの結果をパースする。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, no-wrap
msgid "Live Coding"
msgstr "ライブコーディング"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "The live coding is a killer feature in Quarkus and provided a quick feedback while classes and methods were changed during development. As a rule of thumb, always use `./mvnw quarkus:dev` while developing a Quarkus application."
msgstr "ライブコーディングはQuarkusのキラー機能であり、開発中にクラスやメソッドが変更された場合でも、迅速なフィードバックが得られました。Quarkusアプリケーションの開発中は、経験則として、常に `./mvnw quarkus:dev` を使用してください。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "MicroProfile Config"
msgstr "マイクロプロファイルコンフィグ"

#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid ""
"Configuring which GitHub repository to use (to test or even for non-Quarkus repositories) and the GitHub authentication token (plus a different backport label if necessary) should be easy to configure without changing any source code.\n"
"Quarkus uses Microprofile Config, so we externalized these properties.\n"
"Quarkus also supports `.env` files, which we used while testing. This made local testing easier by not requiring us to change the `application.properties` directly or setting any environment or system property before running the application."
msgstr "使用する GitHub リポジトリ（テスト用、または Quarkus 以外のリポジトリ用）と GitHub 認証トークン（必要に応じて別のバックポートラベル）の設定は、ソースコードを変更することなく簡単にできるはずです。QuarkusはMicroprofile Configを使用しているため、これらのプロパティを外部化しました。また、Quarkusは `.env` 。これにより、アプリケーションを実行する前に `application.properties` を直接変更したり、環境やシステムプロパティを設定したりする必要がなくなり、ローカルでのテストが容易になりました。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, no-wrap
msgid "Qute"
msgstr "Qute"

#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid ""
"Qute is a template engine. We used it to generate the UI and to generate GraphQL queries where simply using GraphQL variables are not enough - for example, https://github.com/quarkusio/quarkus-backports/blob/291868a9480601dd13b71703e7f8f73552109ded/src/main/resources/templates/GitHubService/findIssues.txt#L3-L7[getting issue data from a list of issue numbers].\n"
"We used https://quarkus.io/guides/qute#type-safe-templates[Type-safe templates] to generate the UI and the GraphQL queries."
msgstr "Quteはテンプレートエンジンです。私たちはこれを使用してUIを生成し、GraphQL変数を使用するだけでは不十分な場合（たとえば、 link:https://github.com/quarkusio/quarkus-backports/blob/291868a9480601dd13b71703e7f8f73552109ded/src/main/resources/templates/GitHubService/findIssues.txt#L3-L7[issue番号のリストからissueデータを取得] する場合など）にGraphQLクエリを生成しました。UIとGraphQLクエリの生成には、 link:https://quarkus.io/guides/qute#type-safe-templates[タイプセーフのテンプレート] を使用しました。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Rest Client"
msgstr "レストクライアント"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "GraphQL, in a nutshell, means POSTing some JSON data to an HTTP endpoint and parsing the result as a JSON document. Simply that. The Microprofile REST Client is a good option to perform this task, so we came up with this:"
msgstr "GraphQLとは、一言で言えば、あるJSONデータをHTTPエンドポイントにPOSTし、その結果をJSONドキュメントとしてパースすることです。単純にそれだけです。この作業を行うには、Microprofile REST Clientが良いということで、これを考えました："

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "In the GitHubService we can now consume the GraphQLClient object:"
msgstr "GitHubServiceでGraphQLClientオブジェクトを利用することができるようになりました："

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "You can see how the client is invoked https://github.com/quarkusio/quarkus-backports/blob/291868a9480601dd13b71703e7f8f73552109ded/src/main/java/io/quarkus/backports/GitHubService.java#L85-L101[here]"
msgstr "クライアントがどのように起動されるかは、 link:https://github.com/quarkusio/quarkus-backports/blob/291868a9480601dd13b71703e7f8f73552109ded/src/main/java/io/quarkus/backports/GitHubService.java#L85-L101[こちら] でご確認ください。"

#. type: Title ===
#: _posts/2020-08-25-backports-application.adoc
#, no-wrap
msgid "Next steps"
msgstr "次のステップ"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Given the nature of dynamic queries, we decided to not use the SmallRye GraphQL extension, but that can be changed when the extension supports that feature."
msgstr "動的クエリの性質を考慮して、SmallRye GraphQLエクステンションを使用しないことにしましたが、エクステンションがその機能をサポートしたときに変更することができます。"

#. type: Title ==
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy, no-wrap
msgid "Thanks"
msgstr "ありがとうございます"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "This application took ~1 week to be developed (learning GraphQL included). That was made possible due to the following Quarkus team members:"
msgstr "このアプリケーションの開発には、1週間ほどかかりました（GraphQLの学習も含む）。それを可能にしたのは、以下のQuarkusチームメンバーのおかげです："

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "image:https://github.com/gsmet.png?v=3&s=96[48,48] https://github.com/gsmet[Guillaume Smet]: For the beautiful frontend work"
msgstr "image:https://github.com/gsmet.png?v=3&s=96[alt=\"48\", width=\"48\"] link:https://github.com/gsmet[ギョーム・スメット] 美しいフロントエンドの仕事に対して"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "image:https://github.com/gastaldi.png?v=3&s=96[48,48] https://github.com/gastaldi[George Gastaldi]: For having fun developing the backend and the GraphQL integration"
msgstr "image:https://github.com/gastaldi.png?v=3&s=96[alt=\"48\", width=\"48\"] link:https://github.com/gastaldi[ジョージ・ガスタルディ] ：バックエンドとGraphQLの統合を楽しく開発できたから。"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "image:https://github.com/dmlloyd.png?v=3&s=96[48,48] https://github.com/dmlloyd[David Lloyd]: For the crazy regular expressions needed to extract issue numbers in commit messages."
msgstr "image:https://github.com/dmlloyd.png?v=3&s=96[alt=\"48\", width=\"48\"] link:https://github.com/dmlloyd[David Lloyd] ：コミットメッセージに含まれるイシュー番号を抽出するために必要な、おかしな正規表現について。"

#. type: Title ==
#: _posts/2020-08-25-backports-application.adoc
#, no-wrap
msgid "More information"
msgstr "詳細情報"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Quarkus Backports sources: https://github.com/quarkusio/quarkus-backports"
msgstr "link:https://github.com/quarkusio/quarkus-backports[Quarkus] Backports ソース link:https://github.com/quarkusio/quarkus-backports[：https://github.com/quarkusio/quarkus-backports]"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Quarkus website: https://quarkus.io"
msgstr "link:https://quarkus.io[Quarkus] のサイト link:https://quarkus.io[：https://quarkus.io]"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "link:https://github.com/quarkusio/quarkus[Quarkus] GitHubプロジェクト: https: link:https://github.com/quarkusio/quarkus[//github.com/quarkusio/quarkus]"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "link:https://twitter.com/QuarkusIO[Quarkus] Twitter: https: link:https://twitter.com/QuarkusIO[//twitter.com/QuarkusIO]"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "link:https://quarkusio.zulipchat.com/[Quarkus] チャット： https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https: link:https://groups.google.com/forum/#!forum/quarkus-dev[//groups.google.com/forum/#!forum/quarkus-dev]"

#. type: Plain text
#: _posts/2020-08-25-backports-application.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quarkusを使用する4つの理由]"
