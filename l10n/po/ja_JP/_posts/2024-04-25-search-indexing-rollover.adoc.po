msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Indexing rollover with Quarkus and Hibernate Search"
msgstr "QuarkusとHibernate Searchによるインデックスのロールオーバー"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "This is the first post in the series that dives into the implementation details of the search.quarkus.io application. Are you interested in near zero-downtime reindexing? Then this one is for you!"
msgstr "これは、search.quarkus.ioアプリケーションの実装の詳細を掘り下げるシリーズの最初の投稿です。ほぼゼロダウンタイムの再インデックスに興味がありますか？それなら、この記事をご覧ください！"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"This is the first post in the series diving into the implementation details of the\n"
"link:https://github.com/quarkusio/search.quarkus.io[application] backing the guide search of\n"
"link:https://quarkus.io/guides/[quarkus.io]."
msgstr "これは、 link:https://quarkus.io/guides/[quarkus.ioの] ガイド検索をバックアップする link:https://github.com/quarkusio/search.quarkus.io[アプリケーションの] 実装の詳細に飛び込むシリーズの最初の投稿です。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Does your application need full-text search capabilities? Do you need to keep your application running\n"
"and producing search results without any downtime, even when reindexing all your data?\n"
"Look no further. In this post, we'll cover how you can approach this problem\n"
"and solve it in practice with a few low-level APIs, provided you use Hibernate Search,\n"
"be it link:{quarkus-hibernate-search-docs-url}[on top of Hibernate ORM]\n"
"or https://quarkus.io/version/main/guides/hibernate-search-standalone-elasticsearch[in standalone mode]."
msgstr "アプリケーションに全文検索機能が必要ですか？すべてのデータのインデックスを再作成する場合でも、ダウンタイムなしにアプリケーションを実行し、検索結果を生成し続ける必要がありますか？ご安心ください。この投稿では、Hibernate link:{quarkus-hibernate-search-docs-url}[ORMの上で] あれ link:https://quarkus.io/version/main/guides/hibernate-search-standalone-elasticsearch[スタンドアロンモードで] あれ、Hibernate Searchを使用する場合に、いくつかの低レベルのAPIでこの問題にアプローチし、実際に解決する方法を説明します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"The approach suggested in this post is based on the fact that Hibernate Search uses\n"
"link:{hibernate-search-docs-url}#backend-elasticsearch-indexlayout[aliased indexes],\n"
"and communicates with the actual index through a read/write alias, depending on the operation it needs to perform.\n"
"For example, a search operation will be routed to a read index alias,\n"
"while an indexing operation will be sent to a write index alias."
msgstr "この投稿で提案するアプローチは、Hibernate Searchが link:{hibernate-search-docs-url}#backend-elasticsearch-indexlayout[エイリアス化されたインデックスを] 使用し、実行する必要がある操作に応じて読み取り/書き込みエイリアスを介して実際のインデックスと通信するという事実に基づいています。例えば、検索操作は読み取りインデックスエイリアスにルーティングされ、インデックス作成操作は書き込みインデックスエイリアスに送信されます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"This approach is implemented and successfully used in our Quarkus application that backs the guides'\n"
"search of https://quarkus.io/guides/[quarkus.io/guides/].\n"
"You can see the complete implementation here:\n"
"link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/Rollover.java#L44-L331[rollover implementation]\n"
"and link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/IndexingService.java#L226-L244[rollover usage]."
msgstr "このアプローチは、 link:https://quarkus.io/guides/[quarkus.io/guides/の] ガイド検索をバックアップするQuarkusアプリケーションで実装され、うまく使用されています。完全な実装はこちらでご覧いただけます： link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/Rollover.java#L44-L331[ロールオーバーの実装と] link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/IndexingService.java#L226-L244[ロールオーバーの使用法] 。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Applications using Hibernate Search can keep their search indexes up-to-date by updating the index gradually,\n"
"as the data on which the index documents are based is modified, providing a near real-time index synchronisation."
msgstr "Hibernate Searchを使用するアプリケーションは、インデックスドキュメントのベースとなるデータが変更されるたびにインデックスを徐々に更新することで、検索インデックスを最新の状態に保つことができます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"On the other hand, if the search requirements allow for a delay in synchronisation\n"
"or the data is updated only at certain times of day, the option of mass indexing can effectively keep the indexes up-to-date.\n"
"The link:{hibernate-search-docs-url}[Hibernate Search documentation] provides more information about these approaches\n"
"and other Hibernate Search capabilities."
msgstr "一方、検索要件で同期の遅延が許容される場合や、データが特定の時間帯にのみ更新される場合は、大量インデックスのオプションを使用することで、効果的にインデックスを最新の状態に保つことができます。 link:{hibernate-search-docs-url}[Hibernate Searchのドキュメントには] 、これらのアプローチやその他のHibernate Search機能の詳細が記載されています。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"The application discussed in this post is using the mass indexing approach.\n"
"This means that at certain events, e.g., when a new version of the application is deployed or a scheduled time is reached,\n"
"the application has to process the documentation guides and create search index documents from them."
msgstr "この投稿で取り上げたアプリケーションは、マスインデクシングアプローチを使用しています。これは、特定のイベント、例えば、アプリケーションの新しいバージョンがデプロイされたときや、スケジュールされた時間に達したときに、アプリケーションがドキュメントガイドを処理し、それらから検索インデックスドキュメントを作成しなければならないことを意味します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Now, since we want our application to keep  providing results to any search requests while we add/update documents to the indexes,\n"
"we cannot perform a simple reindexing operation\n"
"using a link:{hibernate-search-docs-url}#search-batchindex-massindexer[mass indexer],\n"
"or the recently added link:{quarkus-hibernate-search-docs-url}#management[management endpoint in Quarkus],\n"
"as these would drop all existing documents from the index before indexing them:\n"
"search operations would not be able to match them anymore until reindexing finishes."
msgstr "ドキュメントをインデックスに追加/更新している間、アプリケーションは検索リクエストに結果を提供し続けたいので、 link:{hibernate-search-docs-url}#search-batchindex-massindexer[マスインデクサーや] 最近 link:{quarkus-hibernate-search-docs-url}#management[Quarkusに] 追加された link:{quarkus-hibernate-search-docs-url}#management[管理エンド] ポイントを使用して単純なインデックス再作成操作を行うことはできません。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Instead, we can create a new index with the same schema and route any write operations to it."
msgstr "その代わりに、同じスキーマで新しいインデックスを作成し、書き込み操作をそのインデックスにルーティングすることができます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Since Hibernate Search does not provide the rollover feature out of the box (https://hibernate.atlassian.net/browse/HSEARCH-3499[yet])\n"
"we will need to resort to using the lower-level APIs to access the Elasticsearch client and perform the required operations ourselves.\n"
"To do so, we need to follow a few simple steps:"
msgstr "Hibernate Searchはロールオーバー機能を提供していないので（ link:https://hibernate.atlassian.net/browse/HSEARCH-3499[まだ] ）、低レベルのAPIを使用してElasticsearchクライアントにアクセスし、必要な操作を自分で実行する必要があります。そのためには、いくつかの簡単な手順を踏む必要があります："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the mapping information for the index we want to reindex using the schema manager."
msgstr "スキーマ・マネージャを使用して、インデックスを再作成するインデックスのマッピング情報を取得します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"@Inject\n"
"SearchMapping searchMapping; // <1>\n"
"// ...\n"
"\n"
"searchMapping.scope(MyIndexedEntity.class).schemaManager() // <2>\n"
"    .exportExpectedSchema((backendName, indexName, export) -> { // <3>\n"
"        var createIndexRequestBody = export.extension(ElasticsearchExtension.get())\n"
"                .bodyParts().get(0); // <4>\n"
"        var mappings = createIndexRequestBody.getAsJsonObject(\"mappings\"); // <5>\n"
"        var settings =createIndexRequestBody.getAsJsonObject(\"settings\"); // <6>\n"
"    });"
msgstr "SearchMapping searchMapping; // <1>を注入します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Inject `SearchMapping` somewhere in your app so that we can use it to access a schema manager."
msgstr "`SearchMapping` をアプリのどこかに注入して、スキーマ・マネージャにアクセスできるようにします。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Get a schema manager for the indexed entity we are interested in (`MyIndexedEntity`).\n"
"If all entities should be targeted, then `Object.class` can be used to create the scope."
msgstr "対象のインデックス付きエンティティのスキーマ・マネージャを取得します ( `MyIndexedEntity` )。すべてのエンティティを対象とする場合は、 `Object.class` を使用してスコープを作成できます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Use the export schema API to access the mapping information."
msgstr "マッピング情報にアクセスするには、エクスポート・スキーマ API を使用します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Use the extension to get access to the Elasticsearch-specific `.bodyParts()` method that returns\n"
"a JSON representing the JSON HTTP body needed to create the indexes."
msgstr "インデックスを作成するために必要な JSON HTTP ボディを表す JSON を返す Elasticsearch 固有の `.bodyParts()` メソッドにアクセスするには、このエクステンションを使用します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the mapping information for the particular index."
msgstr "特定のインデックスのマッピング情報を取得します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the settings for the particular index."
msgstr "特定のインデックスの設定を取得します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the reference to the Elasticsearch client, so we can perform API calls to the search backend cluster:"
msgstr "Elasticsearch クライアントへの参照を取得し、検索バックエンドクラスタへの API 呼び出しを実行できるようにします："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"@Inject\n"
"SearchMapping searchMapping; // <1>\n"
"// ...\n"
"RestClient client = searchMapping.backend() // <2>\n"
"    .unwrap(ElasticsearchBackend.class) // <3>\n"
"    .client(RestClient.class); // <4>"
msgstr "SearchMapping searchMapping; // <1> RestClient client = searchMapping.backend() // <2> .unwrap(ElasticsearchBackend.class) // <3> .client(RestClient.class); // <4>."

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Access the backend from a search mapping instance."
msgstr "検索マッピングインスタンスからバックエンドにアクセスします。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Unwrap the backend to the `ElasticsearchBackend`, so that we can access backend-specific APIs."
msgstr "バックエンドを `ElasticsearchBackend` にアンラップして、バックエンド固有の API にアクセスできるようにします。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get a reference to the Elasticsearch's rest client."
msgstr "Elasticsearch のレストクライアントへの参照を取得します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Create a new index using the OpenSearch/Elasticsearch rollover API\n"
"that would allow us to keep using the existing index for read operations,\n"
"while write operations will be sent to the new index:"
msgstr "OpenSearch/Elasticsearch のロールオーバー API を使用して新しいインデックスを作成し、既存のインデックスを読み込み操作に使用し続け、書き込み操作は新しいインデックスに送信します："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"@Inject\n"
"SearchMapping searchMapping; // <1>\n"
"// ...\n"
"\n"
"SearchIndexedEntity<?> entity = searchMapping.indexedEntity(MyIndexedEntity.class);\n"
"var index = entity.indexManager().unwrap(ElasticsearchIndexManager.class).descriptor(); // <2>\n"
"\n"
"var request = new Request(\"POST\", \"/\" + index.writeName() + \"/_rollover\"); // <3>\n"
"var body = new JsonObject();\n"
"body.add(\"mappings\", mappings);\n"
"body.add(\"settings\", settings);\n"
"body.add(\"aliases\", new JsonObject()); // <4>\n"
"request.setEntity(new StringEntity(gson.toJson(body), ContentType.APPLICATION_JSON));\n"
"\n"
"var response = client.performRequest(request); // <5>\n"
"//..."
msgstr "SearchMapping searchMapping; // <1>を注入します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the index descriptor to get the aliases from it."
msgstr "インデックス記述子を取得し、そこからエイリアスを取得します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Start building the rollover request body using the write index alias from the index descriptor."
msgstr "インデックス記述子から書き込みインデックスエイリアスを使用して、ロールオーバー要求本文の構築を開始します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Note that we are including an empty \"aliases\" so that the aliases are not copied over to the new index,\n"
"except for the write alias (which is implicitly updated since the rollover request is targeting it directly).\n"
"We don't want the read alias to start pointing to the new index immediately."
msgstr "空の \"aliases \"を含めることで、書き込みエイリアス（ロールオーバーリクエストがそれを直接対象としているため、暗黙のうちに更新されます）を除いて、エイリアスが新しいインデックスにコピーされないようにしていることに注意してください。読み込みエイリアスがすぐに新しいインデックスを指すようにすることはありません。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Perform the rollover API request using the Elasticsearch REST client obtained in the previous step."
msgstr "前のステップで取得した Elasticsearch REST クライアントを使用して、ロールオーバー API リクエストを実行します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "With this successfully completed, indexes are in the state we wanted:"
msgstr "これでインデックスが目的の状態になりました："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "We can start populating our write index without affecting search requests."
msgstr "検索リクエストに影響を与えることなく、書き込みインデックスの作成を開始することができます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Once we are done with indexing, we can either commit or rollback depending on the results:"
msgstr "インデックスの作成が終わったら、その結果に応じてコミットするかロールバックします："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Committing the index rollover means that we are happy with the results and ready to switch to the new index\n"
"for both reading and writing operations while removing the old one. To do that, we need to send a request to the cluster:"
msgstr "インデックスのロールオーバーをコミットするということは、その結果に満足し、古いインデックスを削除しながら読み取りと書き込みの両方を新しいインデックスに切り替える準備ができたということです。そのためには、クラスタにリクエストを送信する必要があります："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"var client = ... <1>\n"
"\n"
"var request = new Request(\"POST\", \"_aliases\"); // <2>\n"
"request.setEntity(new StringEntity(\"\"\"\n"
"        {\n"
"            \"actions\": [\n"
"                {\n"
"                    \"add\": {  // <3>\n"
"                        \"index\": \"%s\",\n"
"                        \"alias\": \"%s\",\n"
"                        \"is_write_index\": false\n"
"                    },\n"
"                    \"remove_index\": {  // <4>\n"
"                        \"index\": \"%s\"\n"
"                    }\n"
"                }\n"
"            ]\n"
"        }\n"
"        \"\"\".formatted( newIndexName, readAliasName, oldIndexName ) // <5>\n"
"    , ContentType.APPLICATION_JSON));\n"
"\n"
"var response = client.performRequest(request); // <5>\n"
"//..."
msgstr "var クライアント = ... <1"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get access to the Elasticsearch REST client as described above."
msgstr "上記のように Elasticsearch REST クライアントにアクセスします。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Start creating an `_aliases` API request."
msgstr "`_aliases` API リクエストの作成を開始します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Add an action to update the index aliases to use the new index for both read and write operations.\n"
"Here, we must make the read alias point to the new index."
msgstr "読み取りと書き込みの両方の操作で新しいインデックスを使用するようにインデックスエイリアスを更新するアクションを追加します。ここでは、読み込みエイリアスが新しいインデックスを指すようにしなければなりません。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Add an action to remove the old index."
msgstr "古いインデックスを削除するアクションを追加します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"The names of the new/old index can be retrieved from the response of the initial `_rollover` API request,\n"
"while the aliases can be retrieved from the index descriptor."
msgstr "新旧インデックスの名前は最初の `_rollover` API リクエストのレスポンスから取得でき、エイリアスはインデックス記述子から取得できます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Otherwise, if we have encountered an error or decided for any other reason to stop the rollover, we can roll back to using\n"
"the initial index:"
msgstr "そうでなければ、エラーが発生したり、何らかの理由でロールオーバーを中止することにした場合、最初のインデックスを使用するようにロールバックすることができます："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"var client = ... <1>\n"
"\n"
"var request = new Request(\"POST\", \"_aliases\"); // <2>\n"
"request.setEntity(new StringEntity(\"\"\"\n"
"        {\n"
"            \"actions\": [\n"
"                {\n"
"                    \"add\": {  // <3>\n"
"                        \"index\": \"%s\",\n"
"                        \"alias\": \"%s\",\n"
"                        \"is_write_index\": true\n"
"                    },\n"
"                    \"remove_index\": {  // <4>\n"
"                        \"index\": \"%s\"\n"
"                    }\n"
"                }\n"
"            ]\n"
"        }\n"
"        \"\"\".formatted( oldIndexName, writeAliasName, newIndexName ) // <5>\n"
"    , ContentType.APPLICATION_JSON));\n"
"\n"
"var response = client.performRequest(request); // <5>\n"
"//..."
msgstr "var クライアント = ... <1"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Add an action to update the index aliases to use the old index for both read and write operations.\n"
"Here, we must make the write alias point back to the old index."
msgstr "インデックスエイリアスを更新するアクションを追加し、読み取りと書き込みの両方で古いインデックスを使用するようにします。ここでは、書き込みエイリアスが古いインデックスを指すようにしなければなりません。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Add an action to remove the new index."
msgstr "新しいインデックスを削除するアクションを追加します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Keep in mind that in case of a rollback, your initial index may be out of sync if any write operations were performed\n"
"while the write alias was pointing to the new index."
msgstr "ロールバックの場合、書き込みエイリアスが新しいインデックスを指している間に書き込み操作が行われると、初期インデックスが同期されなくなる可能性があることに注意してください。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "With this knowledge, we can organize the rollover process as follows:"
msgstr "この知識があれば、ロールオーバーのプロセスを次のように整理することができます："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"try (Rollover rollover = Rollover.start(searchMapping)) {\n"
"    // Perform the indexing operations ...\n"
"    rollover.commit();\n"
"}"
msgstr "try (Rollover rollover = Rollover.start(searchMapping)){ // インデックスの作成処理を実行 ... rollover.commit(); } } // インデックスの作成処理を実行 ... rollover.commit()"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Where the `Rollover` class will look as follows:"
msgstr "`Rollover` クラスは以下のようになります："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"class Rollover implements Closeable {\n"
"    public static Rollover start(SearchMapping searchMapping) {\n"
"        // initiate the rollover process by sending the _rollover request ...\n"
"        // ...\n"
"        return new Rollover( client, rolloverResponse );  // <1>\n"
"    }\n"
"\n"
"    @Override\n"
"    public void close() {\n"
"        if ( !done ) { // <2>\n"
"            rollback();\n"
"        }\n"
"    }\n"
"\n"
"    public void commit() {\n"
"        // send the `_aliases` request to switch to the *new* index\n"
"        // ...\n"
"        done = true;\n"
"    }\n"
"\n"
"    public void rollback() {\n"
"        // send the `_aliases` request to switch to the *old* index\n"
"        // ...\n"
"        done = true;\n"
"    }\n"
"}"
msgstr "class Rollover implements Closeable { public static Rollover start(SearchMapping searchMapping) { // _rolloverリクエストを送信することでロールオーバー処理を開始 ... // ... return new Rollover( client, rolloverResponse ); // <1> }."

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Keep the reference to the Elasticsearch REST client to perform API calls."
msgstr "APIコールを実行するためのElasticsearch RESTクライアントへの参照を保持します。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "If we haven't successfully committed the rollover, it'll be rolled back on close."
msgstr "ロールオーバーに成功していなければ、クローズ時にロールバックされます。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Once again, for a complete working example of this rollover implementation, check out the\n"
"link:https://github.com/quarkusio/search.quarkus.io[search.quarkus.io on GitHub]."
msgstr "繰り返しになりますが、このロールオーバー実装の完全な動作例については、 link:https://github.com/quarkusio/search.quarkus.io[GitHubのsearch.quarkus.ioを] ご覧ください。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"If you find this feature useful and would like to have it built-in into your Hibernate Search and Quarkus apps\n"
"feel free to reach out to us on the https://hibernate.atlassian.net/browse/HSEARCH-3499[pending feature requests]\n"
"to discuss your ideas and suggestions."
msgstr "この機能が便利で、Hibernate SearchやQuarkusアプリに組み込みたいとお考えの場合は、 link:https://hibernate.atlassian.net/browse/HSEARCH-3499[保留中の機能リクエストに] ご連絡いただき、アイデアやご提案についてご相談ください。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Stay tuned for more details in the coming weeks as we publish more blog posts\n"
"diving into other interesting implementation aspects of this application.\n"
"Happy searching and rolling over!"
msgstr "今後数週間、このアプリケーションの他の興味深い実装面について掘り下げたブログ記事を発表していきますので、詳細をお楽しみに。検索とロールオーバーをお楽しみください！"
