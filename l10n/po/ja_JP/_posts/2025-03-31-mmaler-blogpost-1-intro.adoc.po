msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Optimizing Java for the Cloud-Native Era with Quarkus"
msgstr "Quarkusによるクラウドネイティブ時代のJavaの最適化"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "This blog post invites you to discover how Quarkus can help your company cut costs, streamline development, and modernize your Java stack for today’s cloud-native world."
msgstr "このブログ記事では、Quarkusがどのようにコスト削減、開発の合理化、今日のクラウドネイティブな世界に向けたJavaスタックの近代化に役立つかをご紹介します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
msgid "Intro"
msgstr "イントロ"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"This post explores how Quarkus can help organizations reduce costs, streamline development, and modernize their Java applications for today’s cloud-native environments.\n"
"It outlines the real-world benefits of adopting Quarkus and highlights how its core features address the performance and scalability challenges commonly associated with traditional Java frameworks."
msgstr "この投稿では、Quarkusがどのように企業のコスト削減、開発の合理化、今日のクラウドネイティブ環境向けのJavaアプリケーションの近代化に役立つかを説明します。この記事では、Quarkusを採用することの現実的なメリットを概説し、Quarkusのコア機能が、従来のJavaフレームワークで一般的だったパフォーマンスとスケーラビリティの課題にどのように対処しているかを紹介します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus is already being adopted across industries.\n"
"One example is Orange, a global telecom provider that selected Quarkus to support its 5G API initiative, and benefited from fast startup times, a lightweight footprint, and seamless integration with Kubernetes."
msgstr "Quarkusはすでに業界全体で採用されています。その一例として、5G APIイニシアチブをサポートするためにQuarkusを選択した世界的な通信プロバイダーであるOrangeが挙げられ、迅速なスタートアップ時間、軽量なフットプリント、Kubernetesとのシームレスな統合の恩恵を受けています。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"After evaluating multiple frameworks, Orange chose Quarkus as the optimal solution for exposing 5G APIs, thanks to its fast startup, lightweight footprint, modularity, and seamless Kubernetes deployment.\n"
"Quarkus successfully deployed 10 APIs across 4G/5G network cores, with smooth upgrades and optimized resource usage.\n"
"This solidified Quarkus as a key technology for telecom innovation."
msgstr "複数のフレームワークを評価した結果、Orange社は、高速起動、軽量フットプリント、モジュール性、シームレスなKubernetes展開により、5G APIの公開に最適なソリューションとしてQuarkusを選択しました。Quarkusは、スムーズなアップグレードと最適化されたリソース使用により、4G/5Gネットワークコア全体で10個のAPIのデプロイに成功しました。これにより、Quarkusは通信イノベーションのキーテクノロジーとして確固たる地位を築きました。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"For a collection of user stories from the community, see the link:https://quarkus.io/userstories/[Quarkus user stories blog] series.\n"
"These stories highlight how different teams and organizations are using Quarkus in the real world."
msgstr "コミュニティからのユーザーストーリーは、 link:https://quarkus.io/userstories/[Quarkusユーザーストーリーブログシリーズを] ご覧ください。これらのストーリーは、さまざまなチームや組織がQuarkusを実際にどのように使用しているかを紹介しています。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "What does Quarkus have to offer?"
msgstr "クアルカスは何を提供してくれますか？"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Developer joy with live coding and dev mode"
msgstr "ライブコーディングと開発モードによる開発者の喜び"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Quarkus streamlines the traditional write-compile-deploy-refresh cycle by offering live coding support out of the box. As developers make changes, Quarkus automatically detects, recompiles, and redeploys the application, which eliminates the need for manual restarts."
msgstr "Quarkusでは、ライブコーディングサポートをすぐに利用できるため、従来の書き込み-コンパイル-デプロイ-リフレッシュのサイクルが合理化されます。開発者が変更を加えると、Quarkusが自動的にアプリケーションを検出して再コンパイルし、再導入します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "While similar functionality has existed through third-party tools, Quarkus integrates it natively and without licensing overhead. This significantly boosts productivity and enhances the developer experience."
msgstr "同様の機能はサードパーティツールでも存在しましたが、Quarkusでは、ライセンスのオーバーヘッドなしに、ネイティブに統合されます。これにより、生産性が大幅に向上し、開発者のエクスペリエンスが向上します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Cost efficiency and performance"
msgstr "コスト効率とパフォーマンス"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"By optimizing for low memory usage and fast startup times, Quarkus enables higher-density deployments and rapid scaling.\n"
"For comparable workloads, Quarkus typically consumes fewer resources such as CPU and memory, which can lead to significant cost savings in cloud environments.\n"
"However, organizations considering the switch should always measure and evaluate their specific workloads to validate these benefits in practice."
msgstr "Quarkusは、メモリ使用量を抑え、起動時間を短縮するように最適化されているため、高密度な展開と迅速なスケーリングが可能です。同等のワークロードに対して、Quarkusは通常、CPUやメモリなどのリソースをより少なく消費するため、クラウド環境では大幅なコスト削減につながります。しかし、Quarkusへの切り替えを検討している企業は、常に特定のワークロードを測定および評価し、これらの利点を実際に検証する必要があります。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Reactive at its core"
msgstr "核心は反応性"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"At its core, Quarkus is built on Eclipse Vert.x, a high-performance reactive toolkit.\n"
"Still, it allows developers to work primarily in an imperative style while leveraging the performance benefits of its reactive underpinnings.\n"
"This hybrid approach allows developers to squeeze out even more efficiency from traditional imperative programming while offering the flexibility to adopt reactive patterns where they make sense.\n"
"Unlike traditional reactive-only frameworks, Quarkus enables developers to combine both imperative and reactive styles in a single application.\n"
"This is particularly beneficial for systems requiring high throughput and low latency, ensuring that applications remain robust under heavy load.\n"
"Quarkus's reactive model makes it ideal for event-driven architectures and microservices."
msgstr "Quarkusの中核は、高性能なリアクティブツールキットであるEclipse Vert.x上に構築されています。しかし、Quarkusでは、リアクティブな基盤のパフォーマンス上の利点を活用しながら、主に命令型のスタイルで作業することができます。このハイブリッド・アプローチにより、開発者は従来の命令型プログラミングからさらに効率性を引き出すことができる一方、理にかなったリアクティブ・パターンを柔軟に採用することができます。従来のリアクティブのみのフレームワークとは異なり、Quarkusでは、1つのアプリケーションで命令型とリアクティブの両方のスタイルを組み合わせることができます。これは、高スループットと低レイテンシーを必要とするシステムにとって特に有益であり、高負荷下でもアプリケーションの堅牢性を維持できます。Quarkusのリアクティブモデルは、イベント駆動型アーキテクチャやマイクロサービスに最適です。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "A basic example of reactive messaging in Quarkus:"
msgstr "Quarkusのリアクティブメッセージングの基本的な例です："

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"In this example, prices are received from one channel (`prices`), converted, and sent to another channel (`converted-prices`).\n"
"This pattern supports high-throughput, event-driven processing with clean and efficient logic."
msgstr "この例では、価格があるチャネル( `prices` )から受信され、変換され、別のチャネル( `converted-prices` )に送信されます。このパターンは、クリーンで効率的なロジックで、高スループットのイベント駆動型処理をサポートします。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "An example of a reactive HTTP endpoint using reactive routes in Quarkus:"
msgstr "Quarkusのリアクティブルートを使用したリアクティブHTTPエンドポイントの例："

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "This route handles HTTP GET requests reactively using `Uni` from Mutiny, making it easy to build non-blocking, low-latency APIs."
msgstr "このルートは Mutiny の `Uni` を使って HTTP GET リクエストをリアクティブに処理し、ノンブロッキングで低レイテンシーの API を簡単に構築できます。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Which of your current development pains could Quarkus solve?"
msgstr "Quarkusが解決できる、現在の開発の課題は何ですか？"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"One often-overlooked benefit of Quarkus is how it improves onboarding and standardization across teams.\n"
"With built-in conventions, automatic service provisioning, and curated extension defaults, Quarkus helps developers get up to speed quickly and encourages consistent patterns across projects."
msgstr "Quarkusの利点としてよく見落とされがちなのは、チーム間のオンボーディングと標準化を改善できることです。Quarkusは、組み込みの規約、自動サービスプロビジョニング、管理された拡張機能のデフォルトによって、開発者が迅速にスピードアップできるようにし、プロジェクト全体で一貫したパターンを推奨します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
msgid "Dev Services"
msgstr "Dev Services"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus Dev Services reduce friction during development and testing by automatically provisioning required services such as databases, message brokers, or identity providers.\n"
"For example, if your application includes PostgreSQL, Kafka, or Keycloak extensions, Quarkus can spin up the necessary containers without any manual setup.\n"
"This allows you to focus on coding instead of configuring infrastructure, accelerating your local development workflow."
msgstr "Quarkus Dev Servicesは、データベース、メッセージブローカー、IDプロバイダーなどの必要なサービスを自動的にプロビジョニングすることで、開発やテスト時の摩擦を軽減します。たとえば、アプリケーションにPostgreSQL、Kafka、Keycloakの拡張機能が含まれている場合、Quarkusは必要なコンテナを手動で設定することなくスピンアップできます。これにより、インフラストラクチャを設定する代わりにコーディングに集中でき、ローカル開発のワークフローが加速します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Vast extension ecosystem"
msgstr "広大な拡張エコシステム"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus offers a rich extension ecosystem that simplifies integration with essential technologies such as databases, messaging systems, authentication providers, and cloud services.\n"
"In addition to official extensions, the Quarkiverse community provides a growing collection of open-source extensions maintained by contributors across the ecosystem.\n"
"This broadens the range of supported technologies and enables developers to benefit from shared solutions and community expertise."
msgstr "Quarkusには、データベース、メッセージングシステム、認証プロバイダー、クラウドサービスなどの重要なテクノロジーとの統合を簡素化する、豊富な拡張機能エコシステムがあります。公式の拡張機能に加えて、Quarkiverseコミュニティでは、エコシステム全体の貢献者によって維持されているオープンソースの拡張機能が提供されています。これにより、サポートされるテクノロジーの範囲が広がり、開発者は共有ソリューションやコミュニティの専門知識から恩恵を受けることができます。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Popular extensions include:\n"
"* `quarkus-hibernate-orm` and `quarkus-jdbc-postgresql` for seamless data persistence.\n"
"* `quarkus-smallrye-reactive-messaging` and `quarkus-kafka-client` for reactive messaging and Apache Kafka integration.\n"
"* `quarkus-oidc` for implementing OpenID Connect authentication and securing applications.\n"
"* `quarkus-micrometer` and `quarkus-opentelemetry` for observability, metrics, and tracing.\n"
"* `quarkus-container-image-docker` and `quarkus-kubernetes` for containerization and deployment to Kubernetes platforms."
msgstr "人気のある拡張機能は以下の通りです：* `quarkus-hibernate-orm` と `quarkus-jdbc-postgresql` : シームレスなデータ永続化。* リアクティブ・メッセージングと Apache Kafka 統合のための `quarkus-smallrye-reactive-messaging` と `quarkus-kafka-client` 。* `quarkus-oidc` : OpenID Connect 認証の実装とアプリケーションのセキュリティ保護。* `quarkus-micrometer` と `quarkus-opentelemetry` 観測可能性、メトリクス、トレース。* `quarkus-container-image-docker` と `quarkus-kubernetes` Kubernetes プラットフォームへのコンテナ化とデプロイメント。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "These extensions are widely adopted because they reduce boilerplate, provide reliable default configurations out of the box, and follow cloud-native best practices—making it easy to plug Quarkus into real-world architectures."
msgstr "これらの拡張機能は、定型文を減らし、信頼性の高いデフォルト設定をすぐに提供し、クラウドネイティブのベストプラクティスに従っているため、広く採用されています。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "“OK, I would like to try it, but is it easy enough to migrate my workflow to Quarkus?”"
msgstr "「ワークフローをQuarkusに移行するのは簡単ですか？"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Migrating to a new framework can feel daunting, even when it promises better performance, lower costs, and an improved developer experience.\n"
"It’s like being offered a better house in a better neighborhood, but hesitating because of the hassle of packing, moving, and settling in."
msgstr "新しいフレームワークへの移行は、パフォーマンス向上やコスト削減、開発者体験の向上が約束されていても、難しく感じることがあります。近所に良い家があると言われても、荷造りや引っ越し、定住の手間を考えて躊躇するようなものです。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"With Quarkus, the transition doesn’t have to be disruptive.\n"
"Thanks to its compatibility with standard Java APIs, support for Jakarta EE and Spring, and a wide range of extensions, many projects can adopt Quarkus incrementally without rewriting existing code.\n"
"Whether you're coming from a traditional Java EE application server, a Spring-based stack, or another framework such as Micronaut or Dropwizard, Quarkus provides familiar APIs, tooling, and migration guides to ease the transition.\n"
"The platform supports commonly used Jakarta specifications like JAX-RS, CDI, JPA, and Bean Validation out of the box.\n"
"For Spring users, the compatibility layer includes support for widely used annotations and components.\n"
"See the link:https://quarkus.io/guides/spring-di[Spring DI guide] to learn more."
msgstr "Quarkusを使用すれば、移行を中断する必要はありません。標準的なJava APIとの互換性、Jakarta EEやSpringのサポート、幅広い拡張機能により、多くのプロジェクトで、既存のコードを書き換えることなく、Quarkusを段階的に導入できます。従来のJava EEアプリケーションサーバー、Springベースのスタック、またはMicronautやDropwizardなどの別のフレームワークのいずれから導入する場合でも、Quarkusは使い慣れたAPI、ツール、移行ガイドを提供し、移行を容易にします。このプラットフォームは、JAX-RS、CDI、JPA、Bean Validationなど、一般的に使用されているJakartaの仕様をすぐにサポートします。Springユーザーのために、互換性レイヤーは広く使われているアノテーションとコンポーネントをサポートしています。詳しくは link:https://quarkus.io/guides/spring-di[Spring DIガイドを] ご覧ください。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Need assistance getting started?\n"
"You’re not alone.\n"
"The Quarkus team offers expert guidance throughout the migration journey, from initial architecture reviews to production readiness.\n"
"Whether you're evaluating the framework or planning a full transition, support is available to help ensure a smooth and successful adoption."
msgstr "スタートアップのサポートが必要ですか？お一人ではありません。Quarkusチームは、最初のアーキテクチャのレビューから本番環境への準備まで、移行の全過程を通じて専門家によるガイダンスを提供します。フレームワークの評価中であっても、完全な移行を計画している場合であっても、スムーズな移行を成功させるためのサポートを提供します。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"All it takes is a decision to move forward.\n"
"Your team deserves a faster, leaner, and cloud-native future."
msgstr "必要なのは、前進する決断だけです。あなたのチームは、より速く、無駄のない、クラウドネイティブな未来を手に入れるべきです。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Concluding note"
msgstr "結びの言葉"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus is redefining Java development by combining modern features with the robustness of the Java ecosystem.\n"
"Its focus on developer productivity, performance, and seamless integration positions it as a formidable framework for building efficient, cloud-native applications.\n"
"Whether you're looking to optimize costs, enhance development speed, or adopt a reactive approach, Quarkus is a game-changer for Java developers."
msgstr "Quarkusは、最新の機能とJavaエコシステムの堅牢性を組み合わせることで、Java開発を再定義しています。開発者の生産性、パフォーマンス、シームレスな統合に重点を置いているため、効率的なクラウドネイティブアプリケーションを構築するための強力なフレームワークとして位置付けられています。コストの最適化、開発速度の向上、リアクティブアプローチの採用など、QuarkusはJava開発者にとって画期的な製品です。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "The end."
msgstr "終わり。"
