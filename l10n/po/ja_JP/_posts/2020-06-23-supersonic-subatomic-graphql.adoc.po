msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: YAML Front Matter: title
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy, no-wrap
msgid "Supersonic Subatomic GraphQL"
msgstr "スーパーソニック サブアトミック GraphQL"

#. type: YAML Front Matter: synopsis
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy, no-wrap
msgid "Quick look at MicroProfile GraphQL version 1.0 that is now part of Quarkus 1.5."
msgstr "Quarkus 1.5の一部となったMicroProfile GraphQLバージョン1.0を素早く見ることができます。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "https://github.com/eclipse/microprofile-graphql[MicroProfile GraphQL] is now included in the just released https://quarkus.io/blog/quarkus-1-5-final-released/[version 1.5.0] of Quarkus."
msgstr "link:https://github.com/eclipse/microprofile-graphql[MicroProfile GraphQL] は、リリースされたばかりのQuarkusの link:https://quarkus.io/blog/quarkus-1-5-final-released/[バージョン1.5.0] に含まれるようになりました。"

#. type: Title ==
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy, no-wrap
msgid "What is GraphQL?"
msgstr "GraphQLとは何ですか？"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"\"GraphQL is an open-source data query and manipulation language for APIs, and a runtime for fulfilling queries with existing data.\n"
"GraphQL interprets strings from the client, and returns data in an understandable, predictable, pre-defined manner.\n"
"GraphQL is an alternative, though not necessarily a replacement for REST.\""
msgstr "「GraphQLはオープンソースのAPI用データクエリおよび操作言語であり、既存のデータでクエリを実行するためのランタイムです。GraphQLはクライアントからの文字列を解釈し、理解可能で予測可能な、事前に定義された方法でデータを返します。GraphQLはRESTの代替ではありますが、必ずしも代替ではありません。\""

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Read the full http://spec.graphql.org/draft/[GraphQL Specification]"
msgstr "link:http://spec.graphql.org/draft/[GraphQL仕様] の全文を読む"

#. type: Title ==
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy, no-wrap
msgid "Why GraphQL ?"
msgstr "なぜGraphQLなのか？"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "The main reasons for using GraphQL are:"
msgstr "GraphQLを使用する主な理由は以下の通りです："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Avoiding over-fetching or under-fetching data. Clients can retrieve several types of data in a single request or can limit the response data based on specific criteria."
msgstr "データの過剰フェッチや過小フェッチを避けることができる。クライアントは、1回のリクエストで複数の種類のデータを取得したり、特定の条件に基づいて応答データを制限したりすることができます。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Enabling data models to evolve. Changes to the schema can be made so as to not require changes on existing clients, and vice versa - this can be done without a need for a new version of the application."
msgstr "データモデルを進化させることができる。スキーマの変更は、既存のクライアントの変更を必要としないように行うことができ、その逆もまた同様です。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Advanced developer experience:"
msgstr "高度な開発者としての経験："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "The schema defines how the data can be accessed and serves as the contract between the client and the server. Development teams on both sides can work without further communication."
msgstr "スキーマは、データへのアクセス方法を定義し、クライアントとサーバーの間の契約として機能する。双方の開発チームは、それ以上のコミュニケーションを取ることなく作業を進めることができます。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Native schema introspection enables users to discover APIs and to refine the queries on the client-side. This advantage is increased with graphical tools such as GraphiQL and GraphQL Voyager enabling smooth and easy API discovery."
msgstr "ネイティブなスキーマ・イントロスペクションにより、ユーザーはAPIを発見し、クライアントサイドでクエリを改良することができます。この利点は、GraphiQLやGraphQL Voyagerなどのグラフィカルなツールによって、スムーズで簡単なAPIの発見を可能にします。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "On the client-side, the query language provides flexibility and efficiency enabling developers to adapt to the constraints of their technical environments while reducing server round-trips."
msgstr "クライアントサイドでは、クエリー言語が柔軟性と効率性を提供するため、開発者は技術環境の制約に適応し、サーバーのラウンドトリップを削減することができます。"

#. type: Title ==
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy, no-wrap
msgid "What is MicroProfile GraphQL?"
msgstr "MicroProfile GraphQLとは何ですか？"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"\"The intent of the MicroProfile GraphQL specification is to provide a \"code-first\" set of APIs that will enable users to quickly develop portable GraphQL-based applications in Java.\n"
"There are 2 main requirements for all implementations of this specification, namely:"
msgstr "「MicroProfile GraphQL 仕様の意図は、ユーザーが Java で移植可能な GraphQL ベースのアプリケーションを迅速に開発できるようにする「コードファースト」な API セットを提供することです。この仕様のすべての実装には 2 つの主な要件があります："

#. type: Bullet: '* '
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Generate and make the GraphQL Schema available. This is done by looking at the annotations in the users code, and must include all GraphQL Queries and Mutations as well as all entities as defined implicitly via the response type or argument(s) of Queries and Mutations."
msgstr "GraphQL スキーマを生成し、利用可能にします。これはユーザー コードのアノテーションを見て行われ、すべての GraphQL Queries と Mutations、および Queries と Mutations の応答タイプまたは引数を介して暗黙的に定義されるすべてのエンティティを含める必要があります。"

#. type: Bullet: '* '
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Execute GraphQL requests. This will be in the form of either a Query or a Mutation. As a minimum the specification must support executing these requests via HTTP.\""
msgstr "GraphQLリクエストを実行します。これはQueryまたはMutationのいずれかの形式となる。最低限、仕様はHTTP経由でこれらのリクエストを実行することをサポートしなければなりません。\""

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Read the full https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html[MicroProfile GraphQL Specification]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html[MicroProfile GraphQL仕様] の全文を読む"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "You can now use https://code.quarkus.io/[code.quarkus.io] to get going with Quarkus and include the https://github.com/smallrye/smallrye-graphql[SmallRye GraphQL Extension]."
msgstr "link:https://code.quarkus.io/[code.quarkus.] ioを使用してQuarkusを使い始め、SmallRye link:https://github.com/smallrye/smallrye-graphql[GraphQL Extension] を含めることができるようになりました。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "This will create a Quarkus starter application with the following dependencies:"
msgstr "これにより、以下の依存関係を持つQuarkusスターターアプリケーションが作成されます："

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"At the moment, the example application created is a JAX-RS application. There is https://github.com/quarkusio/quarkus/issues/8134[some work in progress] to allow extensions\n"
"to define custom examples application, but until then we always get a JAX-RS application. You can remove the `quarkus-resteasy` dependency as we do not need JAX-RS."
msgstr "現時点では、作成されるサンプルアプリケーションは JAX-RS アプリケーションです。エクステンションでカスタムのサンプルアプリケーションを定義できるようにするための link:https://github.com/quarkusio/quarkus/issues/8134[作業が進行中] ですが、それまでは常にJAX-RSアプリケーションが作成されます。JAX-RSは必要ないので、 `quarkus-resteasy` の依存関係を削除することができます。"

#. type: Title ==
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy, no-wrap
msgid "Your first GraphQL Endpoint."
msgstr "最初のGraphQL Endpointです。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Let's change the `ExampleResource` Rest service to be a GraphQL endpoint."
msgstr "`ExampleResource` Rest serviceをGraphQLエンドポイントに変更してみましょう。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Replace the `@Path(\"/hello\")` class annotation with `@GraphQLApi`."
msgstr "`@Path(\"/hello\")` クラスアノテーションを `@GraphQLApi` に置き換えてください。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Replace the `@GET` method annotation with `@Query`."
msgstr "`@GET` メソッドアノテーションを `@Query` に置き換えてください。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Remove the `@Produces(MediaType.TEXT_PLAIN)` method annotation and all JAX-RS imports."
msgstr "`@Produces(MediaType.TEXT_PLAIN)` メソッドアノテーションとすべての JAX-RS インポートを削除します。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "That is it! Your `ExampleResource` should look like this now:"
msgstr "これで完了です！あなたの `ExampleResource` は今、このように見えるはずです："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "You can now run the application using Quarkus dev mode:"
msgstr "これで、Quarkusの開発モードを使用してアプリケーションを実行できるようになりました："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Now browse to http://localhost:8080/graphql-ui/[localhost:8080/graphql-ui/] and run the following query:"
msgstr "ここで、 link:http://localhost:8080/graphql-ui/[localhost:8080/graphql-ui/] を参照し、以下のクエリーを実行します："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "This will return:"
msgstr "これが返ってきます："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Also see the link:/guides/microprofile-graphql[MicroProfile GraphQL guide]."
msgstr "また、 link:/guides/microprofile-graphql[MicroProfile GraphQLガイドも] ご参照ください。"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "A more detailed example"
msgstr "より詳細な例"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Let's look at a more detailed example, get the source from https://github.com/phillip-kruger/graphql-example[this GitHub project]."
msgstr "より詳細な例を見てみましょう。 link:https://github.com/phillip-kruger/graphql-example[このGitHubプロジェクト] で ソースを入手してください。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "This is a multi-module application. First compile all modules. In the root:"
msgstr "このアプリケーションは複数モジュールで構成されています。まず、すべてのモジュールをコンパイルします。ルートで"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Now browse to the quarkus example:"
msgstr "では、Quarkusの例をご覧ください："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Look at `ProfileGraphQLApi.java` that is marked as a `@GraphQLApi`:"
msgstr "`@GraphQLApi` としてマークされている `ProfileGraphQLApi.java` を見てください："

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"Above method will get a person by `personId`. As you can see the method is made queryable with the `@Query` annotation. You can optionally provide the name (\"person\" in this case),\n"
"however the default would be \"person\" anyway (method name without \"get\"). You can also optionally name the parameter, but the default would be the parameter name (\"personId\")."
msgstr "上記のメソッドは、 `personId` によって人を取得します。ご覧のように、このメソッドは `@Query` アノテーションでクエリ可能になっています。オプションで名前 (この場合は \"person\") を指定できますが、デフォルトは \"person\" となります (メソッド名から \"get\" を除いたもの)。オプションでパラメータ名を指定することもできますが、デフォルトはパラメータ名 (\"personId\") となります。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "The Person Object is a POJO that represents a Person (User or Member) in the system. It has many fields, some that are other complex POJOs:"
msgstr "Person オブジェクトは、システム内の Person (User または Member) を表す POJO です。多くのフィールドを持ち、中には他の複雑なPOJOもあります："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "However, the `Query` annotation makes it possible to query the exact fields we are interested in."
msgstr "しかし、 `Query` のアノテーションにより、興味のあるフィールドを正確に照会することが可能です。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Run the example application:"
msgstr "サンプルアプリケーションを実行します："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Notice that you have 'code insight' in the editor. That is because GraphQL has a schema and also supports introspection."
msgstr "エディターで「コードインサイト」をしていることに注目してください。それは、GraphQLがスキーマを持ち、またイントロスペクションをサポートしているからです。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "We can request only the fields we are interested in, making the payload much smaller."
msgstr "興味のあるフィールドだけをリクエストすることができるので、ペイロードを大幅に小さくすることができるのです。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "We can also combine queries, i.e., lets say we want to get the fields for person 1 as shown above, and also the name and surname for person 2, we can do the following:"
msgstr "例えば、上記のような人物1のフィールドと、人物2の名前と姓を取得したい場合、次のようにクエリーを組み合わせることができます："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "This will return :"
msgstr "これは、. を返します："

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Source fields"
msgstr "ソース・フィールド"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"If you look closely at our query, you will see we asked for the `scores` field of the person, however, the `Person` POJO does not contain a `scores` field.\n"
"We added the `scores` field by adding a `@Source` field to the person:"
msgstr "クエリをよく見ると、人物の `scores` フィールドを要求していますが、 `Person` POJO には `scores` フィールドが含まれていません。そこで、 `@Source` フィールドを人物に追加することで、 `scores` フィールドを追加しました："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "So we can add fields that merge onto the output by adding the `@Source` parameter that matches the response type."
msgstr "そこで、レスポンスタイプに合わせた `@Source` パラメータを追加することで、出力にマージするフィールドを追加することができます。"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Partial results"
msgstr "一部結果"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"The above example merges two different data sources, but let's say the score system is down. We will then still return the data we have, and an error\n"
"for the score:"
msgstr "上記の例では2つの異なるデータソースをマージしていますが、スコアシステムがダウンしているとしましょう。その場合でも、今あるデータを返し、スコアについてはエラーを返します："

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
msgid "Native mode"
msgstr "ネイティブモード"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Let's run this example in native mode (using graalvm-ce-java11-19.3.2):"
msgstr "この例をネイティブモードで実行してみましょう（graalvm-ce-java11-19.3.2使用）："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "This will create a native executable and will now start the application very quickly:"
msgstr "これにより、ネイティブ実行可能ファイルが作成され、アプリケーションを非常に素早く起動することができるようになります："

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "In the pipeline"
msgstr "パイプライン"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"This is the first version of the MicroProfile GraphQL Spec and there are many things in the pipeline. One of those is a client.\n"
"We are proposing two types of clients:"
msgstr "これはMicroProfile GraphQL Specの最初のバージョンであり、パイプラインには多くのものがあります。その1つがクライアントです。私たちは2種類のクライアントを提案しています："

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Dynamic"
msgstr "ダイナミック"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "The dynamic client will allow you to build a query using a builder:"
msgstr "ダイナミッククライアントでは、ビルダーを使用してクエリを構築できます："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "For more details see: https://github.com/worldline/dynaql[github.com/worldline/dynaql]"
msgstr "詳細は link:https://github.com/worldline/dynaql[github.com/worldline/dynaql] をご覧ください。"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Type safe"
msgstr "タイプセーフ"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"The type safe client will be closer to MicroProfile RESTClient. Looking at the same example as above, lets see how we can to use it.\n"
"From the root of the project, browse to the `quarkus-client` folder. This example uses https://quarkus.io/blog/introducing-command-mode/[Quarkus Command Mode] to make a Query."
msgstr "型安全クライアントは MicroProfile RESTClient に近くなります。上記と同じ例で、どのように使用できるかを見てみましょう。プロジェクトのルートから、 `quarkus-client` フォルダを参照します。この例では、 link:https://quarkus.io/blog/introducing-command-mode/[Quarkus コマンドモード] を使用してクエリを作成します。"

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "The client is not yet a Quarkus Extension, so we add it in our project like this:"
msgstr "クライアントはまだQuarkus Extensionではないので、このようにプロジェクトに追加します："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Now we can create a POJO that contains only fields that we are interested in. Looking at `Person` and `Score` in the client module, it is much smaller than the definition on the server side:"
msgstr "これで、興味のあるフィールドだけを含むPOJOを作成することができます。クライアントモジュールの `Person` と `Score` を見ると、サーバー側の定義よりずっと小さい："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "All we need to do now is to add an interface that defines the queries that we are interested in:"
msgstr "あとは、興味のあるクエリを定義するインターフェイスを追加するだけです："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "And now we can use this:"
msgstr "そして今、これを使うことができる："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "Running the Quarkus client appication we can now make a call to the server (make sure this is still running) and print the response:"
msgstr "Quarkusクライアントアプリケーションを実行して、サーバーに電話をかけ（これがまだ実行されていることを確認してください）、応答を表示することができます："

#. type: Plain text
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid "The number (2) is the `personId` in our example:"
msgstr "数字（2）は、この例では `personId` です："

#. type: Title ==
#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#: _posts/2020-06-23-supersonic-subatomic-graphql.adoc
#, fuzzy
msgid ""
"This is a short and quick introduction to MicroProfile GraphQL that is now available in Quarkus.\n"
"There are many more https://download.eclipse.org/microprofile/microprofile-graphql-1.0.2/microprofile-graphql.html[features]\n"
"and even more https://github.com/eclipse/microprofile-graphql/issues[planned], so stay tuned."
msgstr "これは、Quarkusで利用可能になったMicroProfile GraphQLの簡単な紹介です。他にも多くの link:https://download.eclipse.org/microprofile/microprofile-graphql-1.0.2/microprofile-graphql.html[機能] があり、さらに多くの機能が link:https://github.com/eclipse/microprofile-graphql/issues[計画されて] いますので、ご期待ください。"
