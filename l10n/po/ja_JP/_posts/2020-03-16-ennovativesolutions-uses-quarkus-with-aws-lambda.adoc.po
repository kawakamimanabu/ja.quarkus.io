msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. type: Title =
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR"
msgstr "Ennovative Solutionsは、QuarkusとAWS Lambdaを使用して、新製品PURQRでより良いカスタマーエクスペリエンスを提供します。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://www.ennovative-solutions.be/[Ennovative Solutions] is an IT Consulting and Services company out of Diepenbeek, Belgium. By working with many customers, including ones in retail, they identified that many of them were suffering low sales due to poor customer experience. As a result, in 2019, they created a new application called https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] (Purchasing via QR codes), which is a new cloud platform that comes with both a backend application and a mobile application to manage retailers’ physical store showrooms. By using the mobile app, one can perform in store analytics, e.g. popular products & categories, best performing salespersons, etc., and deliver a more personalized experience to end customers. The platform also manages appointments and customer data so when they leave the showroom they can receive an overview of what they liked via mail. In addition, PURQR integrates to customers’ quoting systems. For example, one of its goals is to provide customers with a more personalized follow-up quote to turn it into a sale. The solution also keeps customer information for further communication and possible co-sale and up-sale opportunities. Because one scans the products as part of its processes, one can get insights into popular products that the company can then stock up on.  Their cloud platform can improve customer experience and also increase sales."
msgstr "link:https://www.ennovative-solutions.be/[Ennovative Solutions] は、ベルギーのDiepenbeekにあるITコンサルティング・サービス企業です。小売業を含む多くの顧客と協業することで、多くの顧客がカスタマーエクスペリエンスの低下による売上減少に悩まされていることを突き止めた。その結果、2019年に「 link:https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] （QRコードによる購買）」という新しいアプリケーションを作り、バックエンドアプリケーションと小売店の実店舗ショールームを管理するモバイルアプリケーションの両方が付属した新しいクラウドプラットフォームを開発しました。モバイルアプリケーションを使用することで、人気商品やカテゴリー、最もパフォーマンスの高い販売員など、店舗での分析を行うことができ、エンドユーザーによりパーソナライズされた体験を提供することができます。また、このプラットフォームは予約や顧客データを管理し、ショールームを出た後に、気に入った商品の概要をメールで受け取ることができます。さらに、PURQRは顧客の見積もりシステムとも統合しています。例えば、よりパーソナライズされたフォローアップ見積もりを顧客に提供し、販売につなげることが目的の一つです。また、このソリューションでは、さらなるコミュニケーションや共同販売・アップセールの可能性を考慮して、顧客情報を保持しています。また、商品のスキャンを行うことで、人気商品の情報を得ることができ、その商品を仕入れることができます。クラウドプラットフォームは、顧客体験を向上させ、売上を増加させることができます。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Their journey into Quarkus"
msgstr "彼らのQuarkusへの旅は"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "For the development of PURQR, Ennovative Solutions decided to follow a Function-as-a-Service approach by using AWS Lambda as the serverless computing platform. When Dennis Baerten, Software Engineer with Ennovative Solutions, started his journey using AWS Lambda, he described it as _“I ran into the long startup times using regular Java in AWS Lambda”._ They soon realized that using plain Java on this serverless computing platform was not going to deliver the performance and experience that they were after. This is when they started to look at other options."
msgstr "PURQR の開発にあたり、Ennovative Solutions はサーバーレスコンピューティングプラットフォームとして AWS Lambda を使用し、Function-as-a-Service アプローチを採用することにしました。Ennovative SolutionsのソフトウェアエンジニアであるDennis BaertenがAWS Lambdaを使った旅を始めたとき、彼はそれを _「AWS Lambdaで普通のJavaを使うと長い起動時間にぶつかる_ 」と表現しました。彼らはすぐに、このサーバーレス・コンピューティング・プラットフォームで普通のJavaを使っても、自分たちが求めているパフォーマンスや体験は得られないと悟った。このとき、彼らは他の選択肢を検討し始めたのです。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "From Micronaut to Quarkus"
msgstr "マイクロノートからQuarkusへ"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "A colleague of Dennis’ told him to look at Micronaut, which is another framework that supports GraalVM. He tried out Micronaut but encountered difficulties getting it to work with the type of application he was building. Furthermore, there was no Micronaut plugin to build his native image in AWS. _“Quarkus had more features and extensions than Micronaut that could be compiled to native (compatible with GraalVM)”,_ Dennis asserted. When he got started with Quarkus, one of the first things Dennis did was to enroll himself to the Quarkus Zulip channel. Dennis engaged and connected with the Quarkus community and obtained quick replies to his questions and even found some bugs in Quarkus. He was even able to apply the fixes himself via GitHub Pull Requests, which were eventually merged into the Quarkus project. Dennis expressed _“I valued and was very pleased with the support from the Quarkus community, which is very active”._ In addition, the fact that Red Hat was behind Quarkus was also important to Dennis. He was familiar with Hibernate and other open source technologies that are sponsored by Red Hat. He knew Red Hat was a big player in the IT world so knowing this gave Dennis the confidence in the technology. Knowing that Red Hat was a sponsor of Quarkus, reassured him about his decision to use it to implement his application."
msgstr "デニスの同僚は、GraalVMをサポートする別のフレームワークであるMicronautを見るように彼に言った。彼はMicronautを試してみたが、彼が構築しているアプリケーションのタイプで動作させるのが難しいことに遭遇した。さらに、AWSでネイティブイメージを構築するためのMicronautプラグインがなかったのです。 _\"Quarkusには、ネイティブにコンパイルできる（GraalVMと互換性のある）Micronautよりも多くの機能と_ エクステンションが _あった \"_ と、Dennisは断言した。Quarkusを使い始めたとき、Dennisが最初にしたことの1つは、Quarkus Zulipチャネルに登録することでした。DennisはQuarkusのコミュニティとつながり、質問に対する迅速な回答を得るとともに、Quarkusのバグを発見しました。さらに、GitHubのPull Requestsを通じて自ら修正を施し、最終的にQuarkusプロジェクトにマージされました。Dennis氏は、 _「_ Quarkus _のコミュニティが非常に活発であることを評価し、そのサポートに非常に満足して_ いる」と述べています。さらに、Quarkusの背後にRed Hatがいるという事実も、Dennis氏にとって重要でした。彼は、Red HatがスポンサーになっているHibernateやその他のオープンソース技術に精通していました。RedHatがITの世界では大きな存在であることは知っていたので、このことを知ることで、Dennisはこの技術に自信を持つことができました。Red HatがQuarkusのスポンサーであることを知ったことで、アプリケーションの実装にQuarkusを使用するという決断をすることができました。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions had tried Micronaut during the proof of concept phase. However, after learning about Quarkus and its benefits over Micronaut, they migrated everything to Quarkus. In their opinion, some of these benefits included:"
msgstr "Ennovative Solutionsは、概念実証の段階でMicronautを試用しました。しかし、Quarkusのことを知り、Micronautと比較した場合のメリットを知ったことで、すべてをQuarkusに移行しました。彼らの意見では、以下のような利点がありました："

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Great support via Zulip"
msgstr "Zulipによる素晴らしいサポート"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ability to directly contribute to the project"
msgstr "プロジェクトに直接貢献する能力"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Fast innovation"
msgstr "ファストイノベーション"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Fast project release cadence that provides quick bug fixes and new features"
msgstr "バグフィックスや新機能を素早く提供する、迅速なプロジェクトリリースケーデンス"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus is following closely what happens with GraalVM"
msgstr "QuarkusはGraalVMの動向を注視しています。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus is a hot topic and innovative technology that is talked about a lot at Java conferences"
msgstr "Quarkusは、Javaのカンファレンスで多く語られる話題の技術であり、革新的な技術です"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "PURQR high-level architecture"
msgstr "PURQR ハイレベルアーキテクチャ"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "PURQR consists of 7 Quarkus microservices that are currently running in production. They have been in production since October 2019."
msgstr "PURQRは、現在本番で稼働している7つのQuarkusマイクロサービスから構成されています。2019年10月から本番稼働している。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Most of the microservices are HTTP-based and sit behind an Amazon API Gateway and at the backend they are all AWS Lambda functions. These microservices are:"
msgstr "ほとんどのマイクロサービスはHTTPベースで、Amazon API Gatewayの後ろにあり、バックエンドではすべてAWS Lambda関数になっています。これらのマイクロサービスは以下の通りです："

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "External product view - viewing capabilities for products for the end consumer"
msgstr "外部製品ビュー - 最終消費者向け製品の閲覧機能"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Product repository - this is where information about products reside"
msgstr "製品リポジトリ - 製品に関する情報が保存されている場所です。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Company settings - interface to set company wide parameters"
msgstr "会社設定 - 会社全体のパラメータを設定するためのインターフェイス"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Appointments - customer appointments functionality"
msgstr "アポイントメント - 顧客アポイントメント機能"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Label generation - capabilities for generating Dymo labels"
msgstr "ラベル生成 - Dymoラベルを生成する機能。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Notifications - SQS consumer for asynchronous emails"
msgstr "Notifications - 非同期メール用のSQSコンシューマ。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Summary - aggregates all the data to display on the dashboard for the business owner"
msgstr "サマリー - ビジネスオーナーのためのダッシュボードに表示するすべてのデータを集計します"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Here’s a high-level pictorial of the PURQR system that uses Quarkus with AWS Lamdba:"
msgstr "Quarkus with AWS Lamdbaを利用したPURQRシステムのハイレベルな絵図を紹介します："

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "As depicted in the logical architecture diagram above, the Quarkus-based microservices all run as AWS Lambda functions. It is worth mentioning that all these microservices run in test and production in Quarkus native mode, which leverages GraalVM native image. For local development and debugging purposes, they run these microservices in Quarkus JVM mode using https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS Serverless Application Model] (SAM) on their local machines."
msgstr "上の論理アーキテクチャ図に描かれているように、QuarkusベースのマイクロサービスはすべてAWS Lambda関数として実行されます。これらのマイクロサービスはすべて、テストと本番では、GraalVMネイティブイメージを活用したQuarkusネイティブモードで実行されていることは特筆に値する。ローカルでの開発やデバッグのために、ローカルマシン上で link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS Serverless Application Model] （SAM）を使用してQuarkus JVMモードでこれらのマイクロサービスを実行する。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Lastly, _“moving to Quarkus was easy.  Getting everything to work in native mode took a couple of days. And it took about two months to develop the complete application”,_ added Dennis."
msgstr "最後に、 _「Quarkusへの移行は簡単でした_ 。 _すべてをネイティブモードで動作させるのに2～3日かかりました。そして、完全なアプリケーションを開発するのに2ヶ月ほどか_ かりました」とDennisは付け加えました。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus benefits"
msgstr "Quarkusのメリット"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions found Quarkus to be a very valuable and rich Java stack with a wide range of capabilities to implement any type of business application. Among the many benefits that Quarkus provided to them, running Java applications in AWS Lambda functions without the downside of cold starts was one of them. Quarkus fast startup time was key here because they wanted to reduce the cold start timing of AWS Lambda functions to a bare minimum when running in both test and production environments. For example, _“using Spring with AWS Lambda would have been prohibitive because the startup time of Spring in AWS Lambda is too big from my research”,_ Dennis mentioned ( https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[1] , https://dzone.com/articles/aws-lambda-with-spring-boot[2] , https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3] ). Also, from past experience, he had seen that _“using plain Java with AWS Lambda, it was taking 6 to 7 seconds for a cold startup whereas with Quarkus it takes about 200 milliseconds”,_ Dennis added. However, in order to be more thorough in his research, he took one of the simplest functions (no dependency injection, logging) he had and ran it in AWS Lambda in plain Java and Quarkus native mode, the latter being a combination of Quarkus + GraalVM native image. The measurements, as reported by the AWS Lambda platform, are as follows:"
msgstr "Ennovative Solutionsは、Quarkusが、あらゆるタイプのビジネスアプリケーションを実装するための幅広い機能を備えた、非常に価値のある豊富なJavaスタックであることを知りました。Quarkusが提供する多くのメリットの中でも、コールドスタートのデメリットなしにAWS Lambda関数でJavaアプリケーションを実行できることは、その1つでした。テスト環境と本番環境の両方で実行する際に、AWS Lambdaファンクションのコールドスタートのタイミングを極限まで短縮したかったため、ここではQuarkusの高速起動時間が鍵となった。例えば、 _「AWS LambdaでSpringを使用すると、私の調査からSpringの起動時間が大きすぎるため、禁止されて_ いた」とDennis氏は言及しています（ link:https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[1] , link:https://dzone.com/articles/aws-lambda-with-spring-boot[2] , link:https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3] ）。また、過去の経験から、 _「AWS LambdaでプレーンなJavaを使うと、コールドスタートアップに6～7秒かかっていたのに対し、_ Quarkusを使うと _200ミリ秒程度で_ 済む」とDennis氏は付け加えた。しかし、より徹底した調査を行うために、彼は持っている最もシンプルな機能の1つ（依存性注入、ロギングなし）を取り出し、AWS LambdaでプレーンJavaとQuarkusネイティブモード（後者はQuarkus + GraalVMネイティブイメージの組み合わせ）で実行しました。AWS Lambdaプラットフォームから報告された測定値は以下の通りです："

#. type: Block title
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus with AWS Lambda - measurements"
msgstr "AWS Lambdaを使ったQuarkus - 測定例"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Metric name"
msgstr "メトリック名"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Plain Java"
msgstr "プレーンなジャワ"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus native mode"
msgstr "Quarkusネイティブモード"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Cold start time (ms)"
msgstr "コールドスタート時間（ms）"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "584.13"
msgstr "584.13"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "222.07"
msgstr "222.07"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Execution time (ms)"
msgstr "実行可能ファイル(ms)"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "76.12"
msgstr "76.12"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "6.67"
msgstr "6.67"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Memory consumed (MB)"
msgstr "消費メモリー(MB)"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "102"
msgstr "102"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "72"
msgstr "72"

#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "In the table above, you can see a 62% reduction in cold start from plain Java to Quarkus native and a 91% reduction in execution time from plain Java to Quarkus native mode!  For memory consumption, there was a 29% reduction in going from plain Java to Quarkus native."
msgstr "上の表では、コールドスタートがプレーンなJavaからQuarkusネイティブになることで62%削減され、実行時間がプレーンなJavaからQuarkusネイティブモードになることで91%削減されたことがわかります！メモリ消費については、プレーンなJavaからQuarkusネイティブに移行することで、29%削減されました。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "By using Quarkus with AWS Lambda, Ennovative Solutions have been able to lower the cloud resource consumption costs, which include the use of AWS Lambda, SQS, DynamoDB, Route53, among others. Presently, PURQR has a handful of customers so their monthly costs are minimal. However, Dennis mentions that as their number of customers grows so will their cloud resource consumption costs.  _“As these costs increase, this is when the benefit of using Quarkus will be experienced due to its more efficient use of cloud resources and fast startup time compared to plain Java and Spring Boot”,_ Dennis stated."
msgstr "Ennovative Solutionsは、AWS LambdaとQuarkusを併用することで、AWS Lambda、SQS、DynamoDB、Route53などの利用を含むクラウドリソース消費コストを下げることに成功しました。現在、PURQRの顧客数は少ないため、月々のコストは最小限に抑えられています。しかし、顧客数が増えれば増えるほど、クラウドリソースの使用料も増えていくとデニス氏は指摘する。「クラウドリソースを _効率的に利用でき、起動時間が短いため、普通のJavaやSpring Boot_ と比較して、Quarkusを利用するメリットを実感できるはずです」とDennisは述べています。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "As a Spring developer, Dennis found Quarkus very easy to learn. He mentioned _“it took me about 3 days to get familiar with the Quarkus stack”._ In fact, he highlighted that the fast learning curve attracted him to Quarkus as well. He was also particularly impressed by the Quarkus documentation, which _\"is very good\",_ he added. Dennis thinks the Quarkus guides are very thorough and provide good detailed information. This is another reason why he selected Quarkus."
msgstr "Springの開発者であるDennisは、Quarkusが非常に習得しやすいと感じました。Quarkusの _スタックに慣れるのに3日ほどかかりました_ 」と述べています。実際、彼はQuarkusの学習曲線の速さに惹かれたと述べています。また、Quarkusのドキュメントには特に感銘を受けたといい、 _「非常に優れて_ いる」とも述べています。Dennis氏は、Quarkusのガイドはとても丁寧で、詳細な情報が提供されていると考えています。これが、彼がQuarkusを選んだもう一つの理由です。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "レッスンラーニング"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus can run in JVM mode and native mode. If you are interested in running your application in Quarkus native mode, Dennis recommends to first check if Quarkus offers extensions for your required functional requirements. For example, if you’d like to access an in-memory-data-grid (IMDG) like Kafka, he suggests you first search the Quarkus extensions to see if there’s any extension related to this need. Quarkus extensions can compile to native so it’s better to check if Quarkus offers your required functionality before you start implementing your application with a library for which Quarkus does not provide an extension. If you don’t find a Quarkus extension for the third-party library you want to use, then Dennis recommends to check the Quarkus project issues to see if there’s already a pending request to “quark” the third-party library. Also, you’d want to check with the third-party library authors/project to see if they already have a Quarkus extension or are working on one.  You don’t want to find out that you can’t compile your application to a native executable after you have spent hours developing it! You want to avoid this if your goal is to compile to native. In short, the lesson learned here is _“check first if there are Quarkus extensions available for what you need”_, Dennis suggests."
msgstr "Quarkusは、JVMモードとネイティブモードで実行できます。Quarkusのネイティブモードでアプリケーションを実行することに興味がある場合、Dennisはまず、Quarkusに必要な機能要件を満たすエクステンションがあるかどうかを確認するよう勧めています。たとえば、Kafkaのようなインメモリーデータグリッド（IMDG）にアクセスしたい場合、まずQuarkusのエクステンションを検索して、このニーズに関連するエクステンションがあるかどうかを確認することをお勧めします。Quarkusのエクステンションはネイティブにコンパイルできるので、Quarkusがエクステンションを提供していないライブラリでアプリケーションの実装を始める前に、Quarkusが必要な機能を提供しているかどうかを確認する方がよいでしょう。使用したいサードパーティライブラリのQuarkusエクステンションが見つからない場合、DennisはQuarkusプロジェクトの問題をチェックして、サードパーティライブラリを「Quark」するための保留中のリクエストがないか確認することを推奨します。また、サードパーティライブラリの認可者やプロジェクトが、すでにQuarkusエクステンションを持っているか、またはそれに取り組んでいるかどうかを確認することをお勧めします。何時間もかけて開発したアプリケーションを、ネイティブ実行可能ファイルにコンパイルできないことに気づいたくはないでしょう！ネイティブにコンパイルすることが目的であれば、このようなことは避けたいものです。要するに、ここで学んだ教訓は、 _「必要なものに対応する_ Quarkusエクステンションがあるかどうかを _まず確認する」_ ことだとDennisは提案します。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "They were not able to use live coding with Quarkus because this capability does not currently support AWS Serverless Application Model (SAM) for the AWS Lambda functions running on their local machines."
msgstr "Quarkusのライブコーディングは、ローカルマシン上で動作するAWS LambdaファンクションのAWS Serverless Application Model（SAM）に対応していないため、利用できなかったそうです。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Lastly, although learning Quarkus was fast, learning the internals of Quarkus native mode was more challenging and took longer to understand."
msgstr "最後に、Quarkusの習得は早かったのですが、Quarkusのネイティブモードの内部を理解することの方が難しく、時間がかかりました。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "The future"
msgstr "今後の展開"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions plans to continue using Quarkus for future development of PURQR as well as other solutions. They are extremely impressed by this new technology and the involvement and active participation of its community. About the Quarkus project, Dennis’s parting thoughts are _“Great job! Keep up the good work and continue accepting work from the community.”_"
msgstr "Ennovative Solutionsは、PURQRや他のソリューションの今後の開発にQuarkusを使い続ける予定です。彼らは、この新しいテクノロジーと、そのコミュニティーの関与と積極的な参加に非常に感銘を受けています。 _Quarkus_ プロジェクトについて、Dennisは次のように語っています。 _「よくやった_ ！ _これからも頑張って、コミュニティからの仕事を受け入れてください。\"_"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "Quarkusの詳細については、こちらをご覧ください："

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "link:http://quarkus.io[Quarkus] のサイト link:http://quarkus.io[：http://quarkus.io]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "link:https://github.com/quarkusio/quarkus[Quarkus] GitHubプロジェクト: https: link:https://github.com/quarkusio/quarkus[//github.com/quarkusio/quarkus]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "link:https://twitter.com/QuarkusIO[Quarkus] Twitter: https: link:https://twitter.com/QuarkusIO[//twitter.com/QuarkusIO]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "link:https://quarkusio.zulipchat.com/[Quarkus] チャット： https://quarkusio.zulipchat.com/"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https: link:https://groups.google.com/forum/#!forum/quarkus-dev[//groups.google.com/forum/#!forum/quarkus-dev]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[Quarkus YouTubeチャンネル]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quarkusを使用する4つの理由]"
