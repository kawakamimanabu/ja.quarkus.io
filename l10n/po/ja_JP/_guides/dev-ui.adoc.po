msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#: _guides/dev-ui.adoc
msgid "Dev UI"
msgstr ""

#: _guides/dev-ui.adoc
msgid "General overview"
msgstr ""

#: _guides/dev-ui.adoc
msgid ""
"Quarkus Dev UI is a developer-friendly user interface that comes to life when you run your application in development mode (`./mvnw quarkus:dev`).\n"
"It serves as a powerful portal for exploring, debugging, and interacting with your application - all while it's running - with zero code changes or restarts."
msgstr ""

#: _guides/dev-ui.adoc
msgid "What is Dev UI?"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The Dev UI is designed to boost developer joy by making Quarkus' inner workings observable and extensible. It offers:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Insight into available extensions and their capabilities"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Access to runtime metadata and tools"
msgstr ""

#: _guides/dev-ui.adoc
msgid "A responsive frontend that integrates tightly with hot reload"
msgstr ""

#: _guides/dev-ui.adoc
msgid "A flexible way for extensions to expose configuration, documentation, and actions"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Whether you're a developer exploring your project or an extension author enhancing the experience, Dev UI is your entry point."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Layout at a Glance"
msgstr ""

#: _guides/dev-ui.adoc
msgid "When running in dev mode, Quarkus provides a dynamic, modular web interface accessible at http://localhost:8080/q/dev-ui. You can also click `d` in the console log, that will open your default browser at Dev UI."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The basic layout has the following parts:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Menu"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Page"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Footer"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Card"
msgstr "Card"

#: _guides/dev-ui.adoc
msgid "Below is a visual overview of the layout:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Menu (Left Sidebar)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The *menu* on the left-hand side provides structured access to built-in pages:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Menu Item"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Description"
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Extensions*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Displays all Quarkus extensions (used by the current application) as cards. Each card may provide configuration, documentation, or tools."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Configuration*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Shows all configuration options (with current, default, and documentation info). Includes a config editor (text & form modes)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Workspace*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "A project file browser. Files can be opened and edited inline. Extensions may add workspace actions."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Endpoints*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Lists all HTTP endpoints (REST, GraphQL, internal, etc.). Helps you inspect available routes in your app."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Continuous Testing*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Monitors and controls continuous testing. View test results, rerun tests, or toggle testing state."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Dev Services*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Displays information about automatically started services (e.g., databases, Kafka brokers)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Build Metrics*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Provides performance metrics from the last build and reload cycle."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Readme*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Renders your project's `README.md`, if available. Useful for onboarding or project context."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Dependencies*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Shows all runtime and deployment dependencies with dependency path exploration and search functionality."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can drag a page from an extension card into the menu to *bookmark* it for quick access."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Page Area (Main Content)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The *main panel* displays content for the selected menu item or extension. Depending on the selected page, it may render:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Extension-specific tools and UIs (e.g., GraphQL UI, Swagger UI)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "JSON viewers, code editors, or metrics charts"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Interactive actions (e.g., buttons, toggles)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Documentation and links"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Pages are modular and dynamically loaded. Extensions can contribute custom pages written using Web Components and interact with the backend via JSON-RPC."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The *footer* at the bottom is primarily used to display logs while the application runs in dev mode."
msgstr ""

#: _guides/dev-ui.adoc
msgid "By default, the `Server` log (standard Quarkus log output) is selected, but additional log tabs may appear depending on which extensions are present. For example:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "`HTTP`, `GraphQL`,`Scheduler`, etc., may appear when relevant extensions are in use"
msgstr ""

#: _guides/dev-ui.adoc
msgid "`Dev Services` log output from started services like databases, Kafka brokers, etc."
msgstr ""

#: _guides/dev-ui.adoc
msgid "This live log view helps developers track behavior, debug issues, and monitor Dev Services without switching to the terminal."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Cards"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Each Quarkus extension that contributes to Dev UI is represented as a card in the *Extensions* page. These cards provide quick access to features, documentation, configuration, and runtime tools offered by the extension."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Each card may include the following elements:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Element"
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Logo* _(optional)_"
msgstr ""

#: _guides/dev-ui.adoc
msgid "An optional logo representing the extension or its domain"
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Title*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The name of the extension as recognized in the Dev UI."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Favorite*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Marks the card as a favorite. Favorited cards are always displayed first in the Extensions view for easier access."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Guide* _(optional)_"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Links to the online Quarkus guide for the extension (if available)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Description*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "A short explanation of what the extension does or enables."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Page Links* _(optional)_"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Interactive entries that navigate to custom pages contributed by the extension. A page link can also optionally contain a label that we discuss later."
msgstr ""

#: _guides/dev-ui.adoc
msgid "A shortcut to the configuration editor filtered to settings relevant to this extension."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Underlying Library* _(optional)_"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Shows the version of the main library powering the extension (if any)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*More Details*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Opens a dialog with all information"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Clicking a page link inside a card navigates to a dedicated UI page for that feature. These pages can be bookmarked into the menu for quick access."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Extensions are free to customize their cards and add interactive behaviors based on what they provide at runtime."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Guide for Extension Developers"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Quarkus extensions can enhance the developer experience by contributing to the Dev UI. The rest of this guide outlines how to integrate your extension into the Dev UI, covering metadata configuration, adding pages to the card, menu, and footer, and best practices for dynamic content."
msgstr ""

#: _guides/dev-ui.adoc
msgid "quarkus-extension.yaml"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To have your extension appear in the Dev UI, ensure the `quarkus-extension.yaml` file is present in the `src/main/resources/META-INF` directory of your extension's *runtime* module. This file provides metadata that the Dev UI uses to generate the extension card."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Example:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Key fields:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "`name`: Displayed as the extension title in the Dev UI card."
msgstr ""

#: _guides/dev-ui.adoc
msgid "`description`: Shown as the card's summary."
msgstr ""

#: _guides/dev-ui.adoc
msgid "`guide`: URL to the extension's guide; used to render the guide icon on the card."
msgstr ""

#: _guides/dev-ui.adoc
msgid "`metadata.config-filter`: Filters configuration keys shown when clicking \"Configuration\" on the card."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Adding Pages to the Dev UI"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Your extension needs to have the following dependency in it's deployment module:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This can be transitivly or directly and is only needed in deployment module. This gives your processor access to the relative Build Items."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Extensions can contribute interactive pages to the Dev UI in the following areas:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "**Card**: Add links to pages directly on the extension card."
msgstr ""

#: _guides/dev-ui.adoc
msgid "**Footer**: Add tabs to the footer for logs or other runtime information."
msgstr ""

#: _guides/dev-ui.adoc
msgid "**Menu**: Add pages to the Dev UI's left-hand menu."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The most common way to contribute to Dev UI is via Pages from your extension card in the Extension page."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add links to your extension's card, produce a `CardPageBuildItem` in a `@BuildStep`:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Always make sure that this build step is only run when in local dev mode."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add anything on the card, you must return/produce a `CardPageBuildItem`."
msgstr "カードに何かを追加するには、 `CardPageBuildItem` を返す/生成する必要があります。"

#: _guides/dev-ui.adoc
msgid "You can optionally add a logo (dark and light mode) in `deployment/src/main/resources/dev-ui/`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add a link on the card, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. The most common one is the `webComponentPageBuilder` - but we will discuss some others later."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can (optionally) add the title, else it will be derived from the component link."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add an icon. All free https://fontawesome.com/icons[font-awesome] icons are available."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Add the link to the web component source (`js`) file in `deployment/src/main/resources/dev-ui/`. This has to take the format of qwc-extensionname-pagename.js"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Later we will discuss how to create this web component page."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Note about icons"
msgstr "アイコンに関する注意事項"

#: _guides/dev-ui.adoc
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`."
msgstr "https://fontawesome.com/search?o=r&m=free[Font awesome] でアイコンを見つけた場合は、次のようにマッピングできます。たとえば、 `<i class=\"fa-solid fa-house\"></i>` は `font-awesome-solid:house` にマッピングされるため、 `fa` は `font-awesome` になり、アイコン名から `fa-` が削除されます。"

#: _guides/dev-ui.adoc
msgid "Optional: Library Version"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add a underlying library badge on the card. This is usefull for cases where the extension is exposing a well known library. As example, the `quarkus-hibernate-orm` extension provides access to Hibernate. Showing the underlying Hibernate details could be useful information for the user:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This can be done using the `addLibraryVersion` method:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You provide the groupId and artifactId (so that we can look up the version) and a Name and optionally a url."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Optional: Build Time Data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can pass data gathered during build to the Page (js):"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr "ページに必要なことがビルド時にわかっているすべてのデータに対して、これらのキーと値のペアを複数追加できます。"

#: _guides/dev-ui.adoc
msgid "The key will be scoped automatically, so you do not have to prefix any namespace. Later we will discuss how to access this data in the webcomponent (page)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Optional: Labels"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add an optional label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr ""

#: _guides/dev-ui.adoc
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr "静的 (ビルド時に既知のラベル) `.staticLabel(\"staticLabelValue\")`"

#: _guides/dev-ui.adoc
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "動的 (実行時にロード) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"

#: _guides/dev-ui.adoc
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "ストリーミング (実行時に更新される値の継続的なストリーミング)値を継続的にストリーミング `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"

#: _guides/dev-ui.adoc
msgid "For dynamic and streaming labels, the method name is the name of the JsonRPC method, that we will discuss later."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Apart from adding a card and a page, extensions can add a tab to the footer. This is useful for things that are happening continuously. A page will disconnect from the DOM (and maybe the backend) when navigating away from that page (or webcomponent), and a log in the footer will be permanently connected to the DOM, as it's always part of the view (or app)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "There are 2 ways to add things to the footer. There easiest is to just expose the log in a BuildItem. Here we expect either a supplier (function) that return a `Flow.Publisher<String>` or a RuntimeValue<SubmissionPublisher<String>>:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You must return/produce a `FooterLogBuildItem`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Here return a Flow.Publisher<String> that will stream the log"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The RuntimeValue is useful if the log is only available at runtime. If you can get the log in the deployment module you can use the supplier."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Or you can take full control of the UI and produce a `FooterPageBuildItem` and provide a custom web component in a js file:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add anything on the footer, you must return/produce a `FooterPageBuildItem`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add a tab in the footer, you can use the `addPage` method, as all tabs renders a \"page\". `Page` has some builders to assist with building a page. The most common one is the `webComponentPageBuilder` - but we will discuss some others later."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add an icon. All free font-awesome icons are available."
msgstr "アイコンを追加できます。無料の font-awesome アイコンが利用可能です。"

#: _guides/dev-ui.adoc
msgid "To add a page to the Dev UI menu, produce a `MenuPageBuildItem`:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add anything on the menu, you must return/produce a `MenuPageBuildItem`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add a link in the menu, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. The most common one is the `webComponentPageBuilder` - but we will discuss some others later."
msgstr ""

#: _guides/dev-ui.adoc
msgid "This page will appear alongside built-in menu items like \"Configuration\" or \"Workspace.\""
msgstr ""

#: _guides/dev-ui.adoc
msgid "Building Web Components"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr "Dev UI は、これらの Web コンポーネントの構築を容易にするために https://lit.dev/[Lit] を使用します。Web コンポーネントと Lit の詳細は、以下を参照してください。"

#: _guides/dev-ui.adoc
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr "https://www.webcomponents.org/introduction[Web コンポーネントスタートガイド]"

#: _guides/dev-ui.adoc
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr "https://lit.dev/docs/[Lit ドキュメント]"

#: _guides/dev-ui.adoc
msgid "Basic structure of a Web component page"
msgstr "Web コンポーネントページの基本構造"

#: _guides/dev-ui.adoc
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr "Web コンポーネントページは、新しい HTML 要素を作成する JavaScript クラスです。"

#: _guides/dev-ui.adoc
msgid ""
"You can import Classes and/or functions from other libraries.\n"
"In this case, we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr ""
"他のライブラリーからクラスや関数をインポートできます。\n"
"その場合、 `Lit` の `LitElement` クラスと `html` および `css` 関数を使用します。"

#: _guides/dev-ui.adoc
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr "ビルド・ステップで定義されたビルド・タイム・データは、キーを使用して `build-time-data` から常にインポートすることができます。ビルド・ステップで追加されたすべてのキーが使用可能になります。"

#: _guides/dev-ui.adoc
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component), then Extension Name, then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr "コンポーネントの名前は、Qwc (Quarkus Web Component の略)、エクステンション名、ページタイトルの順に、すべて Camel Case で連結した形式にする必要があります。これは、前述のファイル名の形式とも一致します。コンポーネントは `LitComponent` を拡張する必要もあります。"

#: _guides/dev-ui.adoc
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr "CSS スタイルは `css` 関数を使用して追加でき、これらのスタイルはコンポーネントにのみ適用されます。"

#: _guides/dev-ui.adoc
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc.)"
msgstr "スタイルは、グローバルに定義された CSS 変数を参照して、特にライトモードとダークモードの切り替え時にページが正しくレンダリングされるようにすることができます。すべての CSS 変数は、Vaadin のドキュメント ((https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[カラー]、 https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[・サイズと間隔]など) で確認できます。"

#: _guides/dev-ui.adoc
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component (or part of it) should re-render. In this case, the jokes are Build time data that we gathered while building."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Constructors (optional) should always call `super` first and then set the default values for the properties."
msgstr "コンストラクター (オプション) は必ず最初に `super` を呼び出し、次にそのプロパティーのデフォルト値を設定する必要があります。"

#: _guides/dev-ui.adoc
msgid "`connectedCallback` is a method from Lit that gets called when this component are connected to the DOM. This is a good place to do 'page load' type things, like fetching data from the backend (we will discuss this later)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "`disconnectedCallback` us a method from Lit that gets called when this component are disconnected from the DOM. This is a good place to do any clean up."
msgstr ""

#: _guides/dev-ui.adoc
msgid "`render` is a method from Lit that will be called to render the page. In this method, you return the markup of the page you want."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can use the `html` function from `Lit`, which gives you a template language to output the HTML you want. Once the template is created, you must only set or change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You must always register your Web component as a custom element, with a unique tag. Here, the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr "Web コンポーネントは、必ず一意のタグを持つカスタム要素として登録する必要があります。その場合のタグは、ファイル名と同じ形式 (`qwc` ダッシュ `エクステンション名` ダッシュ `ページタイトル`) である必要があります。"

#: _guides/dev-ui.adoc
msgid "Hot reload"
msgstr "ホットリロード"

#: _guides/dev-ui.adoc
msgid "You can update a screen automatically when a hot reload happens. To do this, replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr "ホットリロードの発生時に、画面を自動的に更新できます。そのためには、Webcomponent が拡張する `LitElement` を `QwcHotReloadElement` に置き換えます。"

#: _guides/dev-ui.adoc
msgid "`QwcHotReloadElement` extends `LitElement`, so your component is still a Lit Element."
msgstr "`QwcHotReloadElement` は `LitElement` を拡張するため、コンポーネントは変わらず Lit Element です。"

#: _guides/dev-ui.adoc
msgid "When extending a `QwcHotReloadElement`, you have to use the `hotReload` method. (You must also still provide the `render` method from Lit)"
msgstr "`QwcHotReloadElement` を拡張する場合は、 `hotReload` メソッドを使用する必要があります (Lit の `render` メソッドも提供する必要があります)。"

#: _guides/dev-ui.adoc
msgid "UI Components"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Vaadin Web Components"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://vaadin.com/docs/latest/components[Vaadin Web Components]: Dev UI makes extensive usage of Vaadin web components as UI Building blocks."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Qomponent"
msgstr "Qomponent"

#: _guides/dev-ui.adoc
msgid "https://github.com/qomponent[Qomponent]: A few custom build compoments that can be used."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Currently the following UI component are available:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-dot - Render dot files."
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-code-block - Render code. (See below *Code block* section)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-directory-tree - Render a directory tree (like in the workspace)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-alert - Show an alert."
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-card - Card component."
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-switch - Switch button."
msgstr ""

#: _guides/dev-ui.adoc
msgid "qui-badge - Badge component."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Code block"
msgstr "Code block"

#: _guides/dev-ui.adoc
msgid ""
"Creates a code block (containing marked up code). This could also be made editable.\n"
"This component use the above mentioned code block from qomponent, that is build with https://codemirror.net/[code-mirror], but adds the automatic theme state when switching themes."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Code can be provided remotely (`src`) or as a property (`content`) or as a slotted value (example below)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Currently the following modes are supported:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "xml"
msgstr ""

#: _guides/dev-ui.adoc
msgid "javascript"
msgstr ""

#: _guides/dev-ui.adoc
msgid "php"
msgstr ""

#: _guides/dev-ui.adoc
msgid "cpp"
msgstr ""

#: _guides/dev-ui.adoc
msgid "go"
msgstr ""

#: _guides/dev-ui.adoc
msgid "rust"
msgstr ""

#: _guides/dev-ui.adoc
msgid "python"
msgstr ""

#: _guides/dev-ui.adoc
msgid "json"
msgstr ""

#: _guides/dev-ui.adoc
msgid "java"
msgstr ""

#: _guides/dev-ui.adoc
msgid "sql"
msgstr ""

#: _guides/dev-ui.adoc
msgid "yaml"
msgstr ""

#: _guides/dev-ui.adoc
msgid "html"
msgstr ""

#: _guides/dev-ui.adoc
msgid "css"
msgstr ""

#: _guides/dev-ui.adoc
msgid "sass"
msgstr ""

#: _guides/dev-ui.adoc
msgid "less"
msgstr ""

#: _guides/dev-ui.adoc
msgid "markdown"
msgstr ""

#: _guides/dev-ui.adoc
msgid "asciidoc"
msgstr ""

#: _guides/dev-ui.adoc
msgid "properties"
msgstr ""

#: _guides/dev-ui.adoc
msgid "asciiArmor"
msgstr ""

#: _guides/dev-ui.adoc
msgid "powerShell"
msgstr ""

#: _guides/dev-ui.adoc
msgid "shell"
msgstr ""

#: _guides/dev-ui.adoc
msgid "protobuf"
msgstr ""

#: _guides/dev-ui.adoc
msgid "dockerFile"
msgstr ""

#: _guides/dev-ui.adoc
msgid "diff"
msgstr ""

#: _guides/dev-ui.adoc
msgid "See the https://github.com/qomponent/qui-code-block[@qomponent/qui-code-block] for more details."
msgstr ""

#: _guides/dev-ui.adoc
msgid "IDE link"
msgstr "IDE リンク"

#: _guides/dev-ui.adoc
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr "ユーザーの IDE (IDE を検出できる場合) で開くことができるリソース (Java ソースファイルなど) へのリンクを作成します。"

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[サンプルコード]"

#: _guides/dev-ui.adoc
msgid "Using internal controllers"
msgstr "内部コントローラーの使用"

#: _guides/dev-ui.adoc
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr "特定のことを簡単にするために、いくつかの link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[内部コントローラー] が用意されている："

#: _guides/dev-ui.adoc
msgid "Notifier"
msgstr "Notifier"

#: _guides/dev-ui.adoc
msgid "Storage"
msgstr "Storage"

#: _guides/dev-ui.adoc
msgid "Log"
msgstr "Log"

#: _guides/dev-ui.adoc
msgid "Router"
msgstr "Router"

#: _guides/dev-ui.adoc
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, which will create a more prominent toast message."
msgstr "これは容易にトーストメッセージを表示できる方法です。トーストは画面上に配置でき (デフォルトでは左下)、レベル (Info、Success、Warning、Error) を設定できます。いずれかのレベルを primary にすることで、目を引くトーストメッセージを作成できます。"

#: _guides/dev-ui.adoc
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr "このコントローラーのソースについては、 https://github.com/quarkusio/quarkus/Blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[こちら] を参照してください。"

#: _guides/dev-ui.adoc
msgid "Example usage:"
msgstr "使用例:"

#: _guides/dev-ui.adoc
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr "有効な位置はすべて https://vaadin.com/docs/latest/components/notification/#position[こちら] で確認できます。"

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[サンプルコード]"

#: _guides/dev-ui.adoc
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, which is scoped for your extension. This way, you do not have to worry that you might clash with another extension."
msgstr "安全にローカルストレージにアクセスできる方法です。これにより、エクステンションをスコープとするローカルストレージに値が保存されます。この方法では、別のエクステンションと競合する心配はありません。"

#: _guides/dev-ui.adoc
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr "ローカルストレージは、ユーザーの好みや状態を記憶するのに便利です。例えば、フッターは一番下の引き出しの状態（開閉）と開いたときのサイズを記憶しています。"

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[サンプルコード]"

#: _guides/dev-ui.adoc
msgid ""
"The log controller is used to add control buttons to a (footer) log.\n"
"See <<footer>>."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[サンプルコード]"

#: _guides/dev-ui.adoc
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr "ルーターは主に内部で使用されます。これは、SPA内の正しいページ/セクションにURLをルーティングするために、隠れて link:https://github.com/vaadin/router[Vaadin Router] を使用しています。これはナビゲーションを更新し、履歴(戻るボタン)を許可します。これはまた、複数のページを持つエクステンションで利用可能なサブメニューを作成します。"

#: _guides/dev-ui.adoc
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr "https://github.com/quarkusio/quarkus/Blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] には、役立ちそうなメソッドが記載されています。"

#: _guides/dev-ui.adoc
msgid "Global State"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The properties on a Web component page is scope for that page/webcomponent. There is also a few global states available that might be useful in your component. Dev UI uses https://gitaarik.github.io/lit-state/build/[LitState] for this. LitState automatically re-renders your LitElement components, when a shared app state variable they use changes. It's like LitElement's properties, but then shared over multiple components."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Dev UI has the following build-in state:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Connection"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Theme"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Assistant"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Connection State"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This will give you the connection state to the backend. Dev UI is connected to the backend with a Web Socket. The UI might loose connection to the backend in certain cases, example a Hot reload is in progress or the user actually stopped the server."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To use this state in your page:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "import observeState from the LitState library."
msgstr ""

#: _guides/dev-ui.adoc
msgid "import the state you are interested in, in this case connection state."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Wrap the LitElement in `observerState`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Now you can access the connection state anywhere in your page, and when that state changes it will act exactly the same as a local state - re-render the relevant parts of the page:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can see all the properties of connection state https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state/connection-state.js[here]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Theme State"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This will give you access to the current theme, that the user can change at any time."
msgstr ""

#: _guides/dev-ui.adoc
msgid "import the state you are interested in, in this case theme state."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Now you can access the theme state anywhere in your page, and when that state changes it will act exactly the same as a local state - re-render the relevant parts of the page:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can see all the properties of theme state https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state/theme-state.js[here]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Assistant State"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This state contains information on the Quarkus Assistant, if it's available and if it's configured and ready to be used. This is useful if you extension provide assistant features and you need to know the state of the assistant."
msgstr ""

#: _guides/dev-ui.adoc
msgid "import the state you are interested in, in this case assistant state."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Now you can access the assistant state anywhere in your page, and when that state changes it will act exactly the same as a local state - re-render the relevant parts of the page:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can see all the properties of assistant state https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state/assistant-state.js[here]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Dev UI State"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This state is a general state that contains global properties used in Dev UI, and it's mostly use internally. It works exactly the same as any of the states discussed before."
msgstr ""

#: _guides/dev-ui.adoc
msgid "A lot of the properties in this state is really build time data that auto reload when a hot-reload happens."
msgstr ""

#: _guides/dev-ui.adoc
msgid ""
"You can see all the properties of dev ui state\n"
"https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state/devui-state.js[here]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Other ways to create pages"
msgstr ""

#: _guides/dev-ui.adoc
msgid "As mentioned, there are some other ways to create pages in Dev UI (other than using Web Components)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "External links"
msgstr "外部リンク"

#: _guides/dev-ui.adoc
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text, or other data."
msgstr "これらは、他の (Dev UI の外の) データを参照するリンクで、HTML ページ、テキスト、その他のデータがあります。"

#: _guides/dev-ui.adoc
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated OpenAPI schema in both JSON and YAML format, and a link to Swagger UI:"
msgstr "その良い例としては、JSON と YAML の両方のフォーマットで生成された OpenAPI スキーマへのリンクと、Swagger UI へのリンクが含まれる SmallRye OpenAPI エクステンションが挙げられます。"

#: _guides/dev-ui.adoc
msgid "The links to these external references are known at build time. So to get links like this on your card, you add the following Build Step in your extension:"
msgstr "外部参照へのリンクはビルド時に判明するため、このようなリンクをカードに表示するには、エクステンションに以下のビルドステップを追加します。"

#: _guides/dev-ui.adoc
msgid "Always make sure that this build step is only run when in local dev mode"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`."
msgstr "リンクを追加するには `addPage` メソッドを使用します。すべてのリンクが \"page\" に移動します。 `Page` には、ページの構築を支援するビルダーがいくつかあります。 `external` リンクの場合は、 `externalPageBuilder` を使用します。"

#: _guides/dev-ui.adoc
msgid "Adding the url of the external link (in this case, we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non-application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr "外部リンクの URL を追加します。ここでは、リンクが設定可能な非アプリケーションパス (デフォルトは `/q`) の下にあるため、 `NonApplicationRootPathBuildItem` を使用してリンクを作成します。リンクが `/q` の下にある場合は、必ず `NonApplicationRootPathBuildItem` を使用します。"

#: _guides/dev-ui.adoc
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr "移動先のコンテンツのコンテンツタイプを (オプションで) ヒントとして表示できます。ヒントがない場合、 `MediaType` を決定するためにヘッダー呼び出しが実行されます。"

#: _guides/dev-ui.adoc
msgid "Embedding external content"
msgstr "外部コンテンツの埋め込み"

#: _guides/dev-ui.adoc
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered, and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example, the OpenAPI schema document in YAML format:"
msgstr "デフォルトでは、外部リンクも Dev UI の内部 (埋め込み) でレンダリングされます。HTML の場合、ページがレンダリングされ、その他のコンテンツはメディアタイプをマークアップするために link:https://codemirror.net/[code-mirror] を使用して表示されます。たとえば `yaml` 形式のOpenAPI スキーマドキュメントは、次のようになります。"

#: _guides/dev-ui.adoc
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr "コンテンツを埋め込みたくない場合は、ページビルダーの `.doNotEmbed()`、リンクを新しいタブで開くことができます。"

#: _guides/dev-ui.adoc
msgid "Runtime external links"
msgstr "ランタイム外部リンク"

#: _guides/dev-ui.adoc
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case, you can use a JsonRPC Method (discussed later) that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Raw data pages"
msgstr ""

#: _guides/dev-ui.adoc
msgid "If you have some data that is known at build time (build time data) that you want to display, you can use one of the following builders in `Page`:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "<<marked-up-data,Marked-up data>>"
msgstr ""

#: _guides/dev-ui.adoc
msgid "<<table-data,Table data>>"
msgstr "<<table-data,Table data>>"

#: _guides/dev-ui.adoc
msgid "<<qute-data,Qute data>>"
msgstr "<<qute-data,Qute data>>"

#: _guides/dev-ui.adoc
msgid "Marked-up data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This will display your data in its raw (serialised) JSON value:"
msgstr "データは、生の (シリアル化された) JSON 値で表示されます。"

#: _guides/dev-ui.adoc
msgid "Use the `rawDataPageBuilder`."
msgstr "`rawDataPageBuilder` を使用します。"

#: _guides/dev-ui.adoc
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr "Page BuildItem の `addBuildTimeData` でビルド時データを追加したときに使用したキーにリンクします。"

#: _guides/dev-ui.adoc
msgid "That will create a link to a page that renders the raw data in JSON:"
msgstr "これにより、生データを JSON でレンダリングするページへのリンクが作成されます。"

#: _guides/dev-ui.adoc
msgid "Table data"
msgstr "テーブルデータ"

#: _guides/dev-ui.adoc
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr "構造上可能な場合は、ビルド時データをテーブルに表示することもできます。"

#: _guides/dev-ui.adoc
msgid "Use the `tableDataPageBuilder`."
msgstr "`tableDataPageBuilder` を使用します。"

#: _guides/dev-ui.adoc
msgid "Optionally only show certain fields."
msgstr "オプションで特定のフィールドのみを表示します。"

#: _guides/dev-ui.adoc
msgid "That will create a link to a page that renders the data in a table:"
msgstr "これにより、テーブル内のデータをレンダリングするページへのリンクが作成されます。"

#: _guides/dev-ui.adoc
msgid "Qute data"
msgstr "Qute データ"

#: _guides/dev-ui.adoc
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr "qute テンプレートを使用して、ビルド時データを表示することもできます。すべてのビルド時データキーは、テンプレートで使用できます。"

#: _guides/dev-ui.adoc
msgid "Use the `quteDataPageBuilder`."
msgstr "`quteDataPageBuilder` を使用します。"

#: _guides/dev-ui.adoc
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr "`/deployment/src/main/resources/dev-ui/` の Qute テンプレートにリンクします。"

#: _guides/dev-ui.adoc
msgid "Use any Qute template to display the data, for example, `qute-jokes-template.html`:"
msgstr "データを表示するには、任意の Qute テンプレートを使用します (例: `qute-jokes-template.html`)。"

#: _guides/dev-ui.adoc
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr "Page Build Item のビルド時データキーとして `jokes` が追加されました。"

#: _guides/dev-ui.adoc
msgid "Communicating to the backend"
msgstr "バックエンドとの通信"

#: _guides/dev-ui.adoc
msgid "All communication to the backend happend with https://www.jsonrpc.org/[JsonRPC] over web socket. Dev UI makes this easy to use for extension developers, and you do not really need to get into the details of either JsonRPC or Web Sockets."
msgstr ""

#: _guides/dev-ui.adoc
msgid "There are 3 stages to communicate to a backend during runtime (when the user is running their app in dev mode):"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Executing some method against the runtime classpath"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Executing some method against the deployment classpath"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Returning data from some recorded value"
msgstr ""

#: _guides/dev-ui.adoc
msgid "JsonRPC against the Runtime classpath"
msgstr "ランタイムクラスパスに対する JsonRPC"

#: _guides/dev-ui.adoc
msgid "You can fetch or stream runtime data (rather than Build time data discussed earlier) or execute methods against the runtime classpath (as opposed to deployment classpath). There are two parts to getting data during runtime. The Java side in the runtime or runtime-dev module, and then the usage in the web component (that we will discuss later)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "In your Runtime or Runtime-dev module, create the JsonRPC Service. This class will default to an application-scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The return object in these methods can be:"
msgstr "これらのメソッドで返されるオブジェクトは次のとおりです。"

#: _guides/dev-ui.adoc
msgid "primitives or `String`,"
msgstr "プリミティブまたは `String`"

#: _guides/dev-ui.adoc
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#: _guides/dev-ui.adoc
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#: _guides/dev-ui.adoc
msgid "any other POJO that can be serializable to JSON"
msgstr "JSON にシリアル化できるその他の POJO"

#: _guides/dev-ui.adoc
msgid "All of the above can be blocking (POJO) or nonblocking (`@NonBlocking` or `Uni`). Alternatively, data can be streamed using `Multi`."
msgstr "上記のすべては、ブロッキング (POJO) または非ブロッキング (`@NonBlocking` または `Uni`) にできます。また、 `Multi` を使用してデータをストリーミングすることもできます。"

#: _guides/dev-ui.adoc
msgid "Non-scoped class will default to Application Scope"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Data can be streamed with Multi"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This example runs nonblocking. We could also return `Uni<Joke>`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This code is responsible for making data available to display on the UI."
msgstr "このコードは、データを UI に表示できるようにする役割を担います。"

#: _guides/dev-ui.adoc
msgid "You must register the `JsonPRCService` in your processor in the deployment module:"
msgstr "デプロイメントモジュールのプロセッサーに `JsonPRCService` を登録する必要があります。"

#: _guides/dev-ui.adoc
msgid "Produce or return a `JsonRPCProvidersBuildItem`"
msgstr "`JsonRPCProvidersBuildItem` を生成または返します。"

#: _guides/dev-ui.adoc
msgid "Define the class in your runtime or runtime-dev module that will contain methods that make data available in the UI"
msgstr ""

#: _guides/dev-ui.adoc
msgid "JsonRPC against the Deployment classpath"
msgstr ""

#: _guides/dev-ui.adoc
msgid ""
"In certain cases you might need to execute methods and/or get data against the deployment classpath. This also happens over JsonRPC communication, but in this case you do not create a JsonRPC Service in the runtime module,\n"
"you can just supply the code to be run in a supplier in the deployment module. To do this you will produce a `BuildTimeActionBuildItem`, example:"
msgstr ""
"場合によっては、デプロイメントクラスパスに対してメソッドを実行したり、データを取得したりする必要があるかもしれません。同様の状況は JsonRPC 通信でも発生しますが、その場合はランタイムモジュールに JsonRPC サービスは作成せず、\n"
"デプロイメントモジュールのサプライヤーで実行されるコードを提供します。これを行うには、以下のように `BuildTimeActionBuildItem` を作成します。"

#: _guides/dev-ui.adoc
msgid "Return or use a BuildProducer to create a `BuildTimeActionBuildItem`"
msgstr "BuildProducer を返す、または使用して、 `BuildTimeActionBuildItem` を作成します"

#: _guides/dev-ui.adoc
msgid "`BuildTimeActionBuildItem` is automatically scoped with your extension namespace"
msgstr "`BuildTimeActionBuildItem` は、エクステンションの namespace で自動的にスコープ指定されます。"

#: _guides/dev-ui.adoc
msgid "Here we add an action, that is the same as a request-response method. The method name (that can be called from js in the same way as any json-rpc service) is `generateManifests`. If there are any parameters, those will be available in a map (params)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can also return a `CompletableFuture`/`CompletionStage` as an action, and if you want to stream data you need to use `addSubscription` (rather than `addAction`) and return a `Flow.Publisher`. Here you can not use Uni and Multi as we need to pass data between the deployment and runtime classpaths, so sticking to JDK classes is the safe option."
msgstr ""

#: _guides/dev-ui.adoc
msgid "JsonRPC against a recorded value"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Passing recorded data to the UI work the same as the above deployment classpath, except rather than a function, you pass the RuntimeValue (returned from your recorder)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Set the RuntimeValue as returned from your recorder."
msgstr ""

#: _guides/dev-ui.adoc
msgid "JsonRPC in the Webcomponent (Page)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can use the built-in JsonRPC controller to access the any of the methods you defined. Runtime, Deployment and Recorded all works the same way in the WebComponent."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Note the method `getJoke` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr ""

#: _guides/dev-ui.adoc
msgid "In this case, the result is an object, so we just add it to our list of jokes. This could also be an array if the server returned some collection."
msgstr ""

#: _guides/dev-ui.adoc
msgid "JsonArray (or any Java collection), either blocking or nonblocking, will return an array; otherwise, a JsonObject will be returned."
msgstr "JsonArray (または任意の Java コレクション) は、ブロッキングまたは非ブロッキングであれば配列を返します。それ以外の場合は、JsonObject が返されます。"

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[サンプルコード]"

#: _guides/dev-ui.adoc
msgid ""
"You can also pass in parameters in the method being called, for example:\n"
"(In the Runtime Java code)"
msgstr ""
"呼び出されるメソッドにパラメーターを渡すこともできます。以下はその例です \n"
"(ランタイム Java コード内)。"

#: _guides/dev-ui.adoc
msgid "The clear method takes one parameter called `name`"
msgstr "clear メソッドは `name` と呼ばれるパラメーターを 1 つ受け取ります。"

#: _guides/dev-ui.adoc
msgid "In the Webcomponent (Javascript):"
msgstr "Webcomponent (Javascript) の場合: "

#: _guides/dev-ui.adoc
msgid "The `name` parameter is passed in."
msgstr "`name` パラメーターが渡されます。"

#: _guides/dev-ui.adoc
msgid "Streaming data"
msgstr "ストリーミングデータ"

#: _guides/dev-ui.adoc
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr "データを継続的に画面にストリーミングすることで、UI 画面を最新のデータで更新することができます。これは、 `Multi` (Java 側) と `Observer` (Javascript 側) で実行できます。"

#: _guides/dev-ui.adoc
msgid "Java side of streaming data:"
msgstr "ストリーミングデータの Java 側: "

#: _guides/dev-ui.adoc
msgid "Return the Multi that will stream jokes"
msgstr "jokes をストリーミングする Multi を返します。"

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[サンプルコード]"

#: _guides/dev-ui.adoc
msgid "Javascript side of streaming data:"
msgstr "ストリーミングデータの Javascript 側: "

#: _guides/dev-ui.adoc
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr "メソッドを呼び出し (オプションでパラメーターを渡す)、次のイベントで呼び出されるコードを提供できます。"

#: _guides/dev-ui.adoc
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr "必要に応じて後でキャンセルできるように、オブザーバーのインスタンスを保管してください。"

#: _guides/dev-ui.adoc
msgid "Workspace"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Extensions can contribute `actions` to items in the workspace."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Actions are really a JsonRPC Method that takes a workspace item as input."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To do this you can return/produce a `WorkspaceActionBuildItem` in your processor:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Use the actionBuilder to create a new Action."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The label is what will be displayed in the action drop down in thw Workspace Page"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Here the code that will execute if the user selects this action. You will receive some input (see the `Input` section below)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "How the result should be displayed (see the `Display` section below)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "What the result type would be (see the `DisplayType` section below)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Optional filter if this action only applies to certain items. Takes a regex as input, and some predefined regexes exisits in the the `Patterns` class"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Input"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The input your fuction receive is:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "actionId: The unique (autoscoped) action id"
msgstr ""

#: _guides/dev-ui.adoc
msgid "name: The item (or file) name"
msgstr ""

#: _guides/dev-ui.adoc
msgid "path: The full path to that item (or file)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "content: The content of this item (or file)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "type: the type (example text/plain)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Display"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Here you can set how the response should display in the Workspace page. Options are:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "nothing:  Nothing will be displayed"
msgstr ""

#: _guides/dev-ui.adoc
msgid "dialog:  Content will be displayed in a dialog popup"
msgstr ""

#: _guides/dev-ui.adoc
msgid "replace:  Content will replace the original (input) content"
msgstr ""

#: _guides/dev-ui.adoc
msgid "split:  Content will display in a split screen (left/right)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "notification:  Content will in a notification"
msgstr ""

#: _guides/dev-ui.adoc
msgid "DisplayType"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Depending on what your action does with the content input, your output might produce the following types:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "raw: This be used as is (text)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "code: This will be rendered in a code editor"
msgstr ""

#: _guides/dev-ui.adoc
msgid "markdown: This will display interperated markdown"
msgstr ""

#: _guides/dev-ui.adoc
msgid "html: This will display interperated html"
msgstr ""

#: _guides/dev-ui.adoc
msgid "image: This will display an image"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Advanced: Custom cards"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr "デフォルトの内蔵カードを使用したくない場合は、拡張ページに表示されるカードをカスタマイズすることができます。"

#: _guides/dev-ui.adoc
msgid "To do this, you must provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr "これを行うには、提供されたカードの代わりに読み込まれる Web コンポーネントを提供し、これを Java プロセッサーに登録する必要があります。"

#: _guides/dev-ui.adoc
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr "Javascript 側では、すべてのページにアクセスできます (リンクを作成する必要がある場合)。"

#: _guides/dev-ui.adoc
msgid "And the following properties will be passed in:"
msgstr "次に、以下のプロパティが渡されます。"

#: _guides/dev-ui.adoc
msgid "extensionName"
msgstr "extensionName"

#: _guides/dev-ui.adoc
msgid "description"
msgstr "description"

#: _guides/dev-ui.adoc
msgid "guide"
msgstr "guide"

#: _guides/dev-ui.adoc
msgid "namespace"
msgstr "namespace"

#: _guides/dev-ui.adoc
msgid "logoUrl"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Dev UI Log"
msgstr "Dev UI Log"

#: _guides/dev-ui.adoc
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful for debugging all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr "`999-SNAPSHOT` バージョンを使用してローカルアプリケーションを実行すると、Dev UI のフッターに `Dev UI` Log が表示されます。これは、ブラウザーと Quarkus アプリ間でやり取りされるすべての JSON RPC メッセージをデバッグする場合に役立ちます。"

#: _guides/dev-ui.adoc
msgid "There might be cases where you develop an extension outside of Quarkus core (like Quarkiverse), so your quarkus version is not `999-SNAPSHOT`. In that case you can still enable the Dev UI log with this application property: `quarkus.dev-ui.show-json-rpc-log=true`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Testing"
msgstr "テスト"

#: _guides/dev-ui.adoc
msgid "You can add tests to your extension that test:"
msgstr "エクステンションには、以下をテストするテストを追加できます。"

#: _guides/dev-ui.adoc
msgid "Build time data"
msgstr "ビルド時データ"

#: _guides/dev-ui.adoc
msgid "Runtime data via JsonRPC"
msgstr "JsonRPC経由の実行時データ"

#: _guides/dev-ui.adoc
msgid "You must add this to your pom:"
msgstr "これを pom に追加する必要があります。"

#: _guides/dev-ui.adoc
msgid "This will give you access to two base classes for creating these tests."
msgstr "そうすることで、テストを作成するための 2 つのベースクラスにアクセスできるようになります。"

#: _guides/dev-ui.adoc
msgid "Testing Build time data"
msgstr "ビルド時データのテスト"

#: _guides/dev-ui.adoc
msgid "If you added Build time data, for example:"
msgstr "ビルド時データを追加した場合の例:"

#: _guides/dev-ui.adoc
msgid "To test that your build time data is generated correctly, you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr "ビルド時データが正しく生成されていることをテストするには、 `DevUIBuildTimeDataTest` を拡張するテストを追加できます。"

#: _guides/dev-ui.adoc
msgid "Testing Runtime data"
msgstr "実行時データのテスト"

#: _guides/dev-ui.adoc
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr "実行時データレスポンスが含まれる JsonRPC サービスを追加した場合の例:"

#: _guides/dev-ui.adoc
msgid "To test that `updateProperties` executes correctly via JsonRPC, you can add a test that extends `DevUIJsonRPCTest`."
msgstr "`updateProperties` が JsonRPC 経由で正しく実行されることをテストするには、 `DevUIJsonRPCTest` を拡張するテストを追加できます。"

#: _guides/dev-ui.adoc
#, fuzzy
msgid "The following dependency might also be required to be added to your pom, if it's not yet added by other dependencies, otherwise Dev UI will not start during testing:"
msgstr "他の依存関係によってまだ追加されていない場合、以下の依存関係もpomに追加する必要があるかもしれません："
