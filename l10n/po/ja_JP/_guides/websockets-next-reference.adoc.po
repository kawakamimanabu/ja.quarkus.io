msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSockets Next reference guide"
msgstr "WebSockets Next リファレンスガイド"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr "`quarkus-websockets-next` 拡張は、WebSocket サーバーとクライアントのエンドポイントを定義するための最新の宣言型 API を提供します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket protocol"
msgstr "WebSocketプロトコル"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] で文書化されている _WebSocket_ プロトコルは、単一の TCP 接続を通じてクライアントとサーバーの間に双方向通信チャネルを作成するための標準化された方法を確立します。HTTPとは異なり、WebSocketは別のTCPプロトコルとして動作しますが、HTTPとシームレスに機能するように設計されています。例えば、同じポートを再利用し、同じセキュリティ機構と互換性があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr "WebSocket を使用した対話は、WebSocket プロトコルに移行するために 'Upgrade' ヘッダーを使用する HTTP リクエストで開始します。サーバーは `200 OK` レスポンスの代わりに、HTTP 接続を WebSocket 接続にアップグレードするための `101 Switching Protocols` レスポンスで応答します。このハンドシェイクが成功すると、最初の HTTP アップグレードリクエストで使用された TCP ソケットは開いたままになり、クライアントとサーバーの両方が継続的に双方向のメッセージを交換できるようになります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTPとWebSocketのアーキテクチャスタイル"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "WebSocket は HTTP と互換性があり、HTTP リクエストによって開始されるにもかかわらず、2 つのプロトコルは明確に異なるアーキテクチャとプログラミングモデルにつながることを認識することが重要です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr "HTTP/RESTでは、アプリケーションはさまざまなHTTPメソッドとパスを扱うリソース/エンドポイントを中心に構成されます。クライアントとの対話は、リクエスト-レスポンスパターンに従って、適切なメソッドとパスを持つ HTTP リクエストを発行することで行われます。サーバーは、パス、メソッド、ヘッダーに基づいて、入ってきたリクエストを対応するハンドラーにルーティングし、その後、明確に定義されたレスポンスで返信します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr "逆に、WebSocketは通常、最初のHTTP接続に単一のエンドポイントを使用し、その後すべてのメッセージは同じTCP接続を使用します。WebSocket は、非同期かつメッセージ駆動型という、まったく異なる相互作用モデルを導入しています。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr "WebSocketはHTTPとは対照的に、低レベルのトランスポートプロトコルです。メッセージの形式、ルーティング、または処理には、メッセージのセマンティクスに関するクライアントとサーバー間の事前の合意が必要です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "WebSocket クライアントとサーバーでは、HTTP ハンドシェイクリクエストの `Sec-WebSocket-Protocol` ヘッダーが、より高いレベルのメッセージングプロトコルのネゴシエーションを可能にします。このヘッダがない場合、サーバーとクライアントは独自の規約を確立する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSocketsとQuarkus WebSockets Nextの比較"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr "このガイドでは、WebSocket API の実装である `quarkus-websockets-next` エクステンションを使用します。このエクステンションは、従来の `quarkus-websockets` エクステンションよりも効率と使いやすさが向上しています。オリジナルの `quarkus-websockets` エクステンションは引き続きアクセス可能で、継続的なサポートを受けられますが、機能開発が行われる可能性は低いです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr "`quarkus-websockets` とは異なり、 `quarkus-websockets-next` 拡張は Jakarta WebSocket 仕様を実装して *いません* 。その代わりに、使いやすさを優先した最新のAPIを導入しています。さらに、Quarkusのリアクティブアーキテクチャやネットワークレイヤーとシームレスに統合できるように調整されています。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr "Quarkus WebSockets Nextエクステンションで使用されるアノテーションは、JSR 356のアノテーションと名前が同じであるにもかかわらず、異なります。JSRのアノテーションは、Quarkus WebSockets Nextエクステンションが従わないセマンティクスを持ちます。"

#: _guides/websockets-next-reference.adoc
msgid "Project setup"
msgstr "プロジェクトのセットアップ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To use the `websockets-next` extension, you need to add the `io.quarkus:quarkus-websockets-next` depencency to your project."
msgstr "`websockets-next` エクステンションを使用するには、 `io.quarkus:quarkus-websockets-next` ディペンセンシーをプロジェクトに追加する必要があります。"

#: _guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Endpoints"
msgstr "エンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Both the <<server-api>> and <<client-api>> define _endpoints_ that are used to consume and send messages.\n"
"The endpoints are implemented as CDI beans and support injection.\n"
"Endpoints declare <<callback-methods,_callback methods_>> annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnPingMessage`, `@OnPongMessage`, `@OnOpen`, `@OnClose` and `@OnError`.\n"
"These methods are used to handle various WebSocket events.\n"
"Typically, a method annotated with `@OnTextMessage` is called when the connected client sends a message to the server and vice versa."
msgstr "<<server-api>> と <<client-api>> の両方が、メッセージの消費と送信に使われる _エンドポイントを_ 定義しています。エンドポイントはCDI Beanとして実装され、インジェクションをサポートします。エンドポイントは、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnPingMessage` 、 `@OnPongMessage` 、 `@OnOpen` 、 `@OnClose` 、 `@OnError` でアノテーションされた xref:callback-methods[コールバックメソッド] を宣言します。これらのメソッドは、さまざまな WebSocket イベントを処理するために使用されます。通常、 `@OnTextMessage` でアノテーションされたメソッドは、接続されたクライアントがサーバーにメッセージを送信するときに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The client API also includes <<client-connectors,connectors>> that are used to configure and create new WebSocket connections."
msgstr "クライアント API には、新しい WebSocket 接続の設定や作成に使用する xref:client-connectors[コネクタ] も含まれています。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server endpoints"
msgstr "サーバーエンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Server endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocket`.\n"
"The value of `WebSocket#path()` is used to define the path of the endpoint."
msgstr "サーバ・エンドポイントは `@io.quarkus.websockets.next.WebSocket` でアノテーションされたクラスです。 `WebSocket#path()` の値は、エンドポイントのパスを定義するために使用されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr "したがって、クライアントは `ws://localhost:8080/chat/your-name` を使ってこのウェブソケットエンドポイントに接続できます。TLSを使用する場合、URLは `wss://localhost:8443/chat/your-name` になります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The endpoint path is relative to the xref:http-reference.adoc#context-path[root context] configured by the `quarkus.http.root-path` (which is `/` by default). For example, if you add `quarkus.http.root-path=/api` to your `application.properties` then a client can connect to this endpoint using `http://localhost:8080/api/chat/the-name`."
msgstr "エンドポイントのパスは、 `quarkus.http.root-path` （デフォルトでは `/` ）で設定された xref:http-reference.adoc#context-path[ルートコンテキストからの] 相対パスです。例えば、 `application.properties` に `quarkus.http.root-path=/api` を追加した場合、クライアントはこのエンドポイントに接続するために `http://localhost:8080/api/chat/the-name` ."

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoints"
msgstr "クライアントエンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Client endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocketClient`.\n"
"The value of `WebSocketClient#path()` is used to define the path of the endpoint this client will be connected to."
msgstr "クライアントのエンドポイントは `@io.quarkus.websockets.next.WebSocketClient` でアノテーションされたクラスです。 `WebSocketClient#path()` の値は、このクライアントが接続されるエンドポイントのパスを定義するために使用されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoints are used to consume and send messages. You'll need the <<client-connectors,connectors API>> to configure and open new WebSocket connections."
msgstr "クライアントエンドポイントは、メッセージの受信と送信に使用されます。新しい WebSocket 接続を設定したり開いたりするには、 xref:client-connectors[コネクタ API] が必要です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path parameters"
msgstr "パスパラメータ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The path of a WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr "WebSocket エンドポイントのパスには、パス・パラメータを含めることができます。構文は JAX-RS リソースと同じです： `{parameterName}` ."

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"You can access the path parameter values using the `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` method, or `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` respectively.\n"
"Alternatively, an endpoint callback method parameter annotated with `@io.quarkus.websockets.next.PathParam` is injected automatically."
msgstr "それぞれ `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` メソッドまたは `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` を使用して、パス・パラメータの値にアクセスできます。あるいは、 `@io.quarkus.websockets.next.PathParam` でアノテーションされたエンドポイントコールバックメソッドパラメータが自動的に注入されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection#pathParam(String)` example"
msgstr "`WebSocketConnection#pathParam(String)` 例"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` method returns `null`.\n"
"If there is an endpoint callback method parameter annotated with `@PathParam` and the parameter name is not defined in the endpoint path, then the build fails."
msgstr "パスパラメータの値は常に文字列です。パスパラメータがパスに存在しない場合、 `WebSocketConnection#pathParam(String)` / `WebSocketClientConnection#pathParam(String)` メソッドは `null` を返します。 `@PathParam` でアノテーションされたエンドポイントコールバックメソッドパラメータがあり、パラメータ名がエンドポイントパスで定義されていない場合、ビルドは失敗します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Query parameters are not supported. However, you can access the query using `WebSocketConnection#handshakeRequest().query()`"
msgstr "クエリ・パラメータはサポートされていません。しかし `WebSocketConnection#handshakeRequest().query()`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI scopes"
msgstr "CDIスコープ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Endpoints are managed as CDI beans.\n"
"By default, the `@Singleton` scope is used.\n"
"However, developers can specify alternative scopes to fit their specific requirements."
msgstr "エンドポイントはCDI Beanとして管理されます。デフォルトでは、 `@Singleton` スコープが使用されます。しかし、開発者は特定の要件に合うように別のスコープを指定することができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@Singleton` and `@ApplicationScoped` endpoints are shared across all WebSocket connections.\n"
"Therefore, implementations should be either stateless or thread-safe."
msgstr "`@Singleton` と のエンドポイントは、すべての WebSocket 接続で共有されます。したがって、実装はステートレスかスレッドセーフである必要があります。 `@ApplicationScoped`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Session context"
msgstr "セッションコンテキスト"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"If an endpoint is annotated with `@SessionScoped`, or depends directly or indirectly on a `@SessionScoped` bean, then each WebSocket connection is associated with its own _session context_.\n"
"The session context is active during endpoint callback invocation.\n"
"Subsequent invocations of <<callback-methods>> within the same connection utilize the same session context.\n"
"The session context remains active until the connection is closed (usually when the `@OnClose` method completes execution), at which point it is terminated."
msgstr "エンドポイントが `@SessionScoped` でアノテートされている場合、または `@SessionScoped` Bean に直接的または間接的に依存している場合、各 WebSocket 接続はそれ自身の _セッションコンテキストに_ 関連付けられます。セッションコンテキストは、エンドポイントコールバックの呼び出し中にアクティブになります。同じ接続内で <<callback-methods>> を呼び出すと、同じセッションコンテキストが使用されます。セッションコンテキストは、接続がクローズされるまで (通常は `@OnClose` メソッドの実行が完了するまで) アクティブなままです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-session-context` config property to `always`. In this case, the session context is always activated, no matter if a `@SessionScoped` bean participates in the dependency tree."
msgstr "`quarkus.websockets-next.server.activate-session-context` `always` この場合、 `@SessionScoped` Bean が依存ツリーに参加していても、セッションコンテキストは常にアクティブになります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@SessionScoped` Endpoint"
msgstr "`@SessionScoped` エンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This server endpoint is not shared and is scoped to the session/connection."
msgstr "このサーバーエンドポイントは共有されず、セッション/接続にスコープされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Request context"
msgstr "リクエストコンテキスト"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Each WebSocket endpoint callback method execution is associated with a new CDI _request context_ if the endpoint is:"
msgstr "各 WebSocket エンドポイントコールバックメソッドの実行は、エンドポイントがそうである場合、新しい CDI _リクエストコンテキストに_ 関連付けられます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Annotated with the `@RequestScoped` annotation."
msgstr "`@RequestScoped` 注釈付き。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Has a method annotated with a security annotation such as `@RolesAllowed`."
msgstr "`@RolesAllowed` のようなセキュリティアノテーションを持つメソッド。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Depends directly or indirectly on a `@RequestScoped` bean."
msgstr "`@RequestScoped` ビーンに直接または間接的に依存します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Depends directly or indirectly on a CDI beans secured with a standard security annotation."
msgstr "標準的なセキュリティ注釈で担保されたCDIビーンズに直接的または間接的に依存。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-request-context` config property to `always`. In this case, the request context is always activated when an endpoint callback is invoked."
msgstr "`quarkus.websockets-next.server.activate-request-context` config プロパティを `always` に設定することも可能です。 この場合、エンドポイントコールバックが呼び出されると、リクエストコンテキストは常にアクティブになります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@RequestScoped` Endpoint"
msgstr "`@RequestScoped` エンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This server endpoint is instantiated for each callback method execution."
msgstr "このサーバーエンドポイントは、コールバックメソッドの実行ごとにインスタンス化されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Callback methods"
msgstr "コールバックメソッド"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A WebSocket endpoint may declare:"
msgstr "WebSocketエンドポイントは宣言することができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnTextMessage` method: Handles the text messages from the connected client/server."
msgstr "`@OnTextMessage` メソッドは1つまで：接続されたクライアント/サーバからのテキストメッセージを処理します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages from the connected client/server."
msgstr "`@OnBinaryMessage` メソッドは最大1つ：接続されたクライアント/サーバからのバイナリメッセージを処理します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnPingMessage` method: Handles the ping messages from the connected client/server."
msgstr "`@OnPingMessage` メソッドは最大1つ：接続されたクライアント/サーバからの ping メッセージを処理します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnPongMessage` method: Handles the pong messages from the connected client/server."
msgstr "`@OnPongMessage` メソッドは1つだけ：接続されたクライアント/サーバからのポンメッセージを処理します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnOpen` method: Invoked when a connection is opened."
msgstr "`@OnOpen` メソッドは1つまで：接続がオープンされたときに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnClose` method: Executed when the connection is closed."
msgstr "`@OnClose` メソッドは1つまで：接続が閉じられたときに実行されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任意の数の `@OnError` メソッド：つまり、エンドポイントコールバックがランタイムエラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` が失敗したときです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr "すべてのメソッドを含める必要があるのは一部のエンドポイントだけです。ただし、少なくとも `@On[Text|Binary]Message` か `@OnOpen` を含む必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr "これらの規則に違反するエンドポイントがあると、ビルド時にエラーがスローされます。サブ・ウェブソケットを表す静的な入れ子クラスも、同じガイドラインに従います。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "WebSocket エンドポイントの外側で、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnOpen` 、 `@OnClose` でアノテーションされたメソッドはエラーと見なされ、適切なエラーメッセージとともにビルドが失敗します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Processing messages"
msgstr "メッセージの処理"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "クライアントからメッセージを受け取るメソッドは、 `@OnTextMessage` または `@OnBinaryMessage` でアノテーションされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr "`OnTextMessage` `OnBinaryMessage` はクライアントが _バイナリ_ メッセージを受信するたびに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Invocation rules"
msgstr "呼び出しルール"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When invoking the callback methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr "コールバックメソッドを呼び出すとき、WebSocket 接続にリンクされた _セッション_ スコープはアクティブのままです。さらに、リクエスト スコープはメソッドが完了するまで (または非同期メソッドと反応型メソッドの場合は結果が生成されるまで) アクティブです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined from the return type of the method and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr "WebSocket Nextは、Quarkus RESTに似た _ブロッキングと_ _ノンブロッキングの_ ロジックをサポートしており、メソッドの戻り値の型と、 `@Blocking` や `@NonBlocking` などの追加アノテーションから決定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are the rules governing execution:"
msgstr "以下は実行に関するルールです："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@RunOnVirtualThread`, `@Blocking` or `@Transactional` are considered blocking."
msgstr "`@RunOnVirtualThread` , `@Blocking` または `@Transactional` でアノテーションされたメソッドはブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods declared in a class annotated with `@RunOnVirtualThread` are considered blocking."
msgstr "`@RunOnVirtualThread` でアノテーションされたクラスで宣言されたメソッドは、ブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@NonBlocking` are considered non-blocking."
msgstr "`@NonBlocking` でアノテーションされたメソッドはノンブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods declared in a class annotated with `@Transactional` are considered blocking unless annotated with `@NonBlocking`."
msgstr "`@Transactional` でアノテーションされたクラスで宣言されたメソッドは、 `@NonBlocking` でアノテーションされていない限り、ブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "If the method does not declare any of the annotations listed above the execution model is derived from the return type:"
msgstr "メソッドが上記のアノテーションを宣言していない場合、実行モデルは戻り値の型から派生します："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `Uni` and `Multi` are considered non-blocking."
msgstr "`Uni` と `Multi` を返すメソッドはノンブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods returning `void` or any other type are considered blocking."
msgstr "`void` やその他の型を返すメソッドはブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Kotlin `suspend` functions are always considered non-blocking and may not be annotated with `@Blocking`, `@NonBlocking`\n"
"or `@RunOnVirtualThread` and may not be in a class annotated with `@RunOnVirtualThread`."
msgstr "Kotlin `suspend` 関数は常にノンブロッキングとみなされ、 `@Blocking` 、 `@NonBlocking` または `@RunOnVirtualThread` のアノテーションを付けることはできず、 `@RunOnVirtualThread` のアノテーションを付けたクラス内に存在することはできません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Non-blocking methods must execute on the connection's event loop thread."
msgstr "ノンブロッキングメソッドは、接続のイベントループスレッドで実行する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Blocking methods must execute on a worker thread unless annotated with `@RunOnVirtualThread` or in a class annotated\n"
"with `@RunOnVirtualThread`."
msgstr "ブロッキング・メソッドは、 `@RunOnVirtualThread` でアノテーションされているか、 `@RunOnVirtualThread` でアノテーションされているクラスでない限り、ワーカースレッドで実行されなければなりません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Methods annotated with `@RunOnVirtualThread` or declared in class annotated with `@RunOnVirtualThread` must execute on\n"
"a virtual thread, each invocation spawns a new virtual thread."
msgstr "`@RunOnVirtualThread` でアノテーションされたメソッド、または `@RunOnVirtualThread` でアノテーションされたクラスで宣言されたメソッドは、仮想スレッド上で実行する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method parameters"
msgstr "メソッドパラメータ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept exactly one message parameter:"
msgstr "このメソッドは、正確に1つのメッセージ・パラメータを受け入れなければなりません："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object (of any type)."
msgstr "メッセージ・オブジェクト（任意の型）。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A `Multi<X>` with X as the message type."
msgstr "X をメッセージ・タイプとする `Multi<X>` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "However, it may also accept the following parameters:"
msgstr "ただし、以下のパラメータを受け付けることもあります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection`/`WebSocketClientConnection`"
msgstr "`WebSocketConnection` / `WebSocketClientConnection`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`String` パラメータは `@PathParam`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "メッセージ・オブジェクトは送信されたデータを表し、生のコンテンツ（ `String` , `JsonObject` , `JsonArray` , `Buffer` , `byte[]` ）またはデシリアライズされた高レベル・オブジェクトとしてアクセスできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"If the method returns a `Multi` (constructed from the received one), Quarkus will automatically subscribe to it and write the emitted items until completion, failure, or cancellation.\n"
"However, if your method does not return a `Multi`, you must subscribe to the incoming `Multi` to consume the data."
msgstr "`Multi` を受信すると、このメソッドは接続ごとに 1 回呼び出され、提供された `Multi` はこの接続によって送信されたアイテムを受信します。メソッドが（受信したものから構築された） `Multi` を返す場合、Quarkus は自動的にそれをサブスクライブし、完了、失敗、またはキャンセルされるまで、発行されたアイテムを書き込みます。しかし、メソッドが `Multi` を返さない場合、データを消費するには、受信した `Multi` を購読する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are two examples:"
msgstr "ここに2つの例があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the incoming `Multi`."
msgstr "<<subscribe-or-not-subscribe>> `Multi` をご覧ください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Supported return types"
msgstr "サポートされるリターン・タイプ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "`@OnTextMessage` または `@OnBinaryMessage` でアノテーションされたメソッドは、WebSocket 通信を効率的に処理するためにさまざまな型を返すことができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void` :明示的な応答がクライアントに返されないブロッキング・メソッドを示します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>` :返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを表します。明示的なレスポンスはクライアントに返されません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` 型のオブジェクトは、返されたオブジェクトがシリアライズされ、レスポンスとしてクライアントに送り返されるブロッキングメソッドを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>` :ノンブロッキングメソッドを指定し、 `Uni` によって生成されたアイテムがレスポンスとしてクライアントに送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>` :ノンブロッキングメソッドを表し、ノンヌル `Multi` によって発行されたアイテムは、完了またはキャンセルされるまでクライアントに順次送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit response is sent back to the client."
msgstr "Kotlin `Unit` を返す `suspend` 関数 : 明示的なレスポンスがクライアントに送り返されないノンブロッキングメソッドを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client as a response."
msgstr "Kotlin `X` を返す `suspend` 関数 : 返されたアイテムがレスポンスとしてクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are some examples of these methods:"
msgstr "以下はその方法の例です："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Methods returning `Uni` and `Multi` are considered non-blocking.\n"
"In addition, Quarkus automatically subscribes to the returned `Multi` / `Uni` and writes the emitted items until completion, failure, or cancellation.\n"
"Failure or cancellation terminates the connection."
msgstr "`Uni` と `Multi` を返すメソッドは、ノンブロッキングと見なされます。さらに、Quarkusは自動的に返された `Multi` / `Uni` を購読し、完了、失敗、またはキャンセルされるまで、発行されたアイテムを書き込みます。失敗またはキャンセルすると、接続が終了します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Streams"
msgstr "ストリーム"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr "個々のメッセージに加えて、WebSocket エンドポイントはメッセージのストリームを扱うことができます。この場合、メソッドは `Multi<X>` をパラメータとして受け取ります。 `X` の各インスタンスは、上記と同じルールでデシリアライズされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr "`Multi` を受信したメソッドは、別の `Multi` か `void` を返すことができます。メソッドが `Multi` を返す場合、受信した `multi` を購読する必要はありません："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This approach allows bi-directional streaming."
msgstr "このアプローチは双方向ストリーミングを可能にします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When the method returns `void`, and so does not return a `Multi`, the code must subscribe to the incoming `Multi`.\n"
"Otherwise, no data will be consumed, and the connection will not be closed:"
msgstr "メソッドが `void` を返し、 `Multi` を返さない場合、コードは `Multi` を受信しなければなりません。そうしないと、データは消費されず、接続は閉じられません："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Also note that the `stream` method will complete before the `Multi` completes."
msgstr "また、 `Multi` が完了する前に `stream` メソッドが完了することにも注意してください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Skipping reply"
msgstr "返信省略"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr "メソッドがクライアントに書き込むメッセージを生成することを意図している場合、それは `null` を発することができます。 `null` を発することは、クライアントにレスポンスを送らないことを意味します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "JsonObject and JsonArray"
msgstr "JsonObject と JsonArray"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr "Vert.x `JsonObject` および `JsonArray` インスタンスは、シリアライズおよびデシリアライズのメカニズムをバイパスします。メッセージはテキストメッセージとして送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "OnOpen and OnClose methods"
msgstr "OnOpenメソッドとOnCloseメソッド"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "WebSocket エンドポイントは、クライアントが接続または切断したときに通知することもできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "これは、メソッドに `@OnOpen` または `@OnClose` のアノテーションを付けることで行います："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` はクライアント接続時に起動され、 は切断時に起動されます。 `@OnClose` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "これらのメソッドは、 _セッション・スコープの_ `WebSocketConnection` Bean にアクセスできます。"

#: _guides/websockets-next-reference.adoc
msgid "Parameters"
msgstr "パラメーター"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "`@OnOpen` と `@OnClose` でアノテーションされたメソッドは、以下のパラメータを受け取ることができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "`@OnClose` でアノテーションされたエンドポイントメソッドは、接続を閉じる理由を示す `io.quarkus.websockets.next.CloseReason` パラメータも受け取ることができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` メソッドと メソッドでは、返される型が異なります。 `@OnClose` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr "`@OnOpen` メソッドについては、 `@On[Text|Binary]Message` と同じルールが適用されます。したがって、 `@OnOpen` でアノテーションされたメソッドは、接続後すぐにクライアントにメッセージを送信できます。 `@OnOpen` メソッドでサポートされている戻り値の型は以下のとおりです："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void` :接続されたクライアントに明示的なメッセージを送り返さないブロッキング・メソッドを示します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>` :返された `Uni` の完了が処理の終了を意味するノンブロッキングメソッドを表します。クライアントにメッセージは返されません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` 型のオブジェクト：返されたオブジェクトがシリアライズされてクライアントに送り返されるブロッキングメソッドを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>` :ノンブロッキング・メソッドを指定し、 `Uni` によって生成されたアイテムがクライアントに送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit message is sent back to the client."
msgstr "Kotlin `suspend` 関数 return `Unit` : 明示的なメッセージがクライアントに送り返されないノンブロッキングメソッドを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client."
msgstr "Kotlin `X` を返す `suspend` 関数 : 返されたアイテムがクライアントに送信されるノンブロッキングメソッドを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Items sent to the client are <<serialization,serialized>> except for the `String`, `io.vertx.core.json.JsonObject`, `io.vertx.core.json.JsonArray`, `io.vertx.core.buffer.Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr "クライアントに送信されるアイテムは、 `String` 、 `io.vertx.core.json.JsonObject` 、 `io.vertx.core.json.JsonArray` 、 `io.vertx.core.buffer.Buffer` 、 `byte[]` のタイプを除き、 xref:serialization[シリアライズさ] れます。 `Multi` の場合、Quarkus は返された `Multi` を購読し、アイテムが送信されると `WebSocket` に書き込みます。 `String` `JsonObject` と `JsonArray` はテキストメッセージとして送信されます。 `Buffers` とバイト配列はバイナリメッセージとして送信されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For `@OnClose` methods, the supported return types include:"
msgstr "`@OnClose` メソッドの場合、サポートされている戻り値の型は以下のとおりです："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: The method is considered blocking."
msgstr "`void` :このメソッドはブロッキングと見なされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>` :このメソッドはノンブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: The method is considered non-blocking."
msgstr "Kotlin `suspend` 関数 return `Unit` : メソッドはノンブロッキングとみなされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@OnClose` methods declared on a server endpoint cannot send items to the connected client by returning objects.\n"
"They can only send messages to the other clients by using the `WebSocketConnection` object."
msgstr "`@OnClose` サーバエンドポイントで宣言されたメソッドは、オブジェクトを返すことによって接続中のクライアントにアイテムを送信することはできません。他のクライアントにメッセージを送信するには、 オブジェクトを使用します。 `WebSocketConnection`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Error handling"
msgstr "エラー処理"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "WebSocket エンドポイントは、エラーが発生したときに通知することもできます。 `@io.quarkus.websockets.next.OnError` でアノテーションされた WebSocket エンドポイントメソッドは、エンドポイントコールバックが実行時エラーをスローしたとき、変換エラーが発生したとき、または返された `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` が失敗したときに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method must accept exactly one _error_ parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr "このメソッドは、1つの _エラー_ パラメータ、つまり `java.lang.Throwable` から代入可能なパラメータを受け入れなければなりません。 このメソッドは、以下のパラメータも受け入れることができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr "`@io.quarkus.websockets.next.OnError` ただし、各メソッドは異なるエラー・パラメータを宣言する必要があります。実際の例外の最も特異的なスーパータイプを宣言しているメソッドが選択されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` parameters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr "`@io.quarkus.websockets.next.OnError` アノテーションを使用して、グローバルエラーハンドラ、つまり WebSocket エンドポイントで宣言されていないメソッドを宣言することもできます。このようなメソッドは `@PathParam` パラメータを受け付けません。エンドポイントで宣言されたエラーハンドラは、グローバルエラーハンドラよりも優先されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy`.\n"
"For server endpoints, the error message is logged and the connection is closed by default.\n"
"For client endpoints, the error message is logged by default."
msgstr "エラーが発生したが、エラーハンドラで処理できない場合、Quarkus は `quarkus.websockets-next.server.unhandled-failure-strategy` で指定された戦略を使用します。サーバーエンドポイントの場合、デフォルトでエラーメッセージがログに記録され、接続が閉じられます。クライアントエンドポイントの場合、エラーメッセージはデフォルトでログに記録されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Serialization and deserialization"
msgstr "シリアライズとデシリアライズ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next 拡張は、メッセージの自動シリアライズとデシリアライズをサポートします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and bypass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization convert the message from/to JSON automatically."
msgstr "`String` , `JsonObject` , `JsonArray` , `Buffer` , `byte[]` 型のオブジェクトはそのまま送信され、シリアライズとデシリアライズをバイパスします。コーデックが提供されていない場合、シリアライズとデシリアライズは自動的にメッセージをJSONに変換します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "シリアライズとデシリアライズをカスタマイズする必要がある場合は、カスタムコーデックを提供することができます。"

#: _guides/websockets-next-reference.adoc
msgid "Custom codec"
msgstr "カスタムコーデック"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To implement a custom codec, you must provide a CDI bean implementing:"
msgstr "カスタムコーデックを実装するには、実装するCDIビーンを提供する必要があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.BinaryMessageCodec` for binary messages"
msgstr "`io.quarkus.websockets.next.BinaryMessageCodec` バイナリメッセージの場合"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.TextMessageCodec` for text messages"
msgstr "`io.quarkus.websockets.next.TextMessageCodec` テキストメッセージ用"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "次の例は、 `Item` クラスにカスタムコーデックを実装する方法を示しています："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec should be used explicitly:"
msgstr "`OnTextMessage` メソッドや メソッドでは、使用するコーデックを明示的に指定することもできます： `OnBinaryMessage` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "メッセージのデシリアライズとシリアライズの両方に使用するコーデックを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "シリアライズとデシリアライズで異なるコーデックを使用する必要がある場合は、シリアライズとデシリアライズで使用するコーデックを別々に指定できます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the deserialization of the incoming message"
msgstr "受信メッセージのデシリアライズに使用するコーデックを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "送信メッセージのシリアライゼーションに使用するコーデックを指定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Ping/Pong messages"
msgstr "ピンポンメッセージ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping message] may serve as a keepalive or to verify the remote endpoint.\n"
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong message] is sent in response to a ping message and it must have an identical payload."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[pingメッセージは] キープアライブとして、あるいはリモート・エンドポイントを確認するために使われます。 link:https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong メッセージは] ping メッセージに応答して送信され、同一のペイロードを持たなければなりません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sending ping messages"
msgstr "pingメッセージの送信"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Ping messages are optional and not sent by default. However, server and client endpoints can be configured to automatically send ping messages on an interval."
msgstr "Pingメッセージはオプションであり、デフォルトでは送信されません。ただし、サーバーとクライアントのエンドポイントは、一定間隔で自動的にPingメッセージを送信するように設定できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sends a ping message from the server to each connected client every 2 seconds."
msgstr "サーバーから各接続クライアントに2秒ごとにpingメッセージを送信します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sends a ping message from all connected client instances to their remote servers every 10 seconds."
msgstr "接続されているすべてのクライアント・インスタンスからリモート・サーバに10秒ごとにpingメッセージを送信します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Servers and clients can send ping messages programmatically at any time using `WebSocketConnection` or `WebSocketClientConnection`.\n"
"There is a non-blocking variant: `Sender#sendPing(Buffer)` and a blocking variant: `Sender#sendPingAndAwait(Buffer)`."
msgstr "サーバーとクライアントは、 `WebSocketConnection` または `WebSocketClientConnection` を使用して、いつでもプログラムで ping メッセージを送信できます。ノンブロッキングのバリエーションとして `Sender#sendPing(Buffer)` があり、ブロッキングのバリエーションとして `Sender#sendPingAndAwait(Buffer)` があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sending pong messages"
msgstr "ポンメッセージの送信"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Server and client endpoints will always respond to a ping message sent from the remote party with a corresponding pong message, using the application data from the ping message.\n"
"This behavior is built-in and requires no additional code or configuration."
msgstr "サーバとクライアントのエンドポイントは、リモート・パーティから送信された ping メッセージに対して、ping メッセージのアプリケーション・データを使用して、常に対応する pong メッセージで応答します。この動作はビルトインされており、追加のコードや設定は必要ありません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Servers and clients can send unsolicited pong messages that may serve as a unidirectional heartbeat using `WebSocketConnection` or `WebSocketClientConnection`. There is a non-blocking variant: `Sender#sendPong(Buffer)` and a blocking variant: `Sender#sendPongAndAwait(Buffer)`."
msgstr "サーバーとクライアントは、 `WebSocketConnection` または `WebSocketClientConnection` を使って、一方向のハートビートとして機能する未承諾のポンメッセージを送信することができます。ノンブロッキングのバリアント： `Sender#sendPong(Buffer)` とブロッキングのバリアント： `Sender#sendPongAndAwait(Buffer)` があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Handling ping/pong messages"
msgstr "ピンポンメッセージの処理"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Because ping messages are handled automatically and pong messages require no response, it is not necessary to write handlers for these messages to comply with the WebSocket protocol.\n"
"However, it is sometimes useful to know when ping or pong messages are received by an endpoint."
msgstr "ping メッセージは自動的に処理され、pong メッセージは応答を必要としないため、WebSocket プロトコルに準拠するためにこれらのメッセージ用のハンドラを記述する必要はありません。しかし、ping や pong メッセージがいつエンドポイントで受信されたかを知っておくと便利な場合があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `@OnPingMessage` and `@OnPongMessage` annotations can be used to define callbacks that consume ping or pong messages sent from the remote party.\n"
"An endpoint may declare at most one `@OnPingMessage` callback and at most  one `@OnPongMessage` callback.\n"
"The callback method must return either `void` or `Uni<Void>` (or be a Kotlin `suspend` function returning `Unit`), and it must accept a single parameter of type `Buffer`."
msgstr "`@OnPingMessage` および `@OnPongMessage` アノテーションを使用して、リモート・パーティから送信される ping または pong メッセージを消費するコールバックを定義できます。エンドポイントは、最大で 1 つの `@OnPingMessage` コールバックと、最大で 1 つの `@OnPongMessage` コールバックを宣言できます。コールバックメソッドは `void` または `Uni<Void>` のいずれかを返す必要があり（または `Unit` を返す Kotlin `suspend` 関数である必要があります）、 `Buffer` 型のパラメータを 1 つ受け入れる必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inbound processing mode"
msgstr "インバウンド処理モード"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can define the mode used to process incoming events for a specific connection using the `@WebSocket#inboundProcessingMode()`, and `@WebSocketClient.inboundProcessingMode()` respectively.\n"
"An incoming event can represent a message (text, binary, pong), opening connection and closing connection.\n"
"By default, events are processed serially and ordering is guaranteed.\n"
"This means that if an endpoint receives events `A` and `B` (in this particular order) then callback for event `B` will be invoked after the callback for event `A` completed.\n"
"However, in some situations it is preferable to process events concurrently, i.e. with no ordering guarantees but also with no concurrency limits.\n"
"For this cases, the `InboundProcessingMode#CONCURRENT` should be used."
msgstr "WebSocket エンドポイントは、それぞれ `@WebSocket#inboundProcessingMode()` 、 `@WebSocketClient.inboundProcessingMode()` を使用して、特定の接続の着信イベントを処理するために使用するモードを定義できます。着信イベントは、メッセージ（テキスト、バイナリ、ポン）、接続の開始、接続の終了を表すことができます。デフォルトでは、イベントはシリアルに処理され、順序は保証されます。つまり、エンドポイントがイベント `A` と `B` を（特定の順番で）受信した場合、イベント `A` のコールバックが完了した後に、イベント `B` のコールバックが呼び出されます。しかし、状況によっては、イベントを同時並行で処理することが望ましい場合があります。このような場合は、 `InboundProcessingMode#CONCURRENT` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server API"
msgstr "サーバーAPI"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP server configuration"
msgstr "HTTPサーバーの設定"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "This extension reuses the _main_ HTTP server."
msgstr "このエクステンションは _メインの_ HTTPサーバーを再利用します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "したがって、WebSocketサーバーの設定は `quarkus.http.` の設定セクションで行います。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to `/`).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr "アプリケーション内で設定された WebSocket パスは、 `quarkus.http.root` （デフォルトは `/` ）で定義されたルートパスに連結されます。この連結により、WebSocket のエンドポイントがアプリケーションの URL 構造内に適切に配置されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "詳しくは xref:http-reference.adoc[HTTPガイド] をご覧ください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sub-websockets endpoints"
msgstr "サブウェブソケットエンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A `@WebSocket` endpoint can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-websockets_.\n"
"The resulting path of these sub-websockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr "`@WebSocket` エンドポイントは、静的な入れ子クラスをカプセル化することができ、そのクラスも `@WebSocket` でアノテートされ、 _サブ・ウェブソケットを_ 表します。これらのサブ・ウェブソケットの結果のパスは、包含クラスとネストされたクラスからのパスを連結したものです。結果のパスは、HTTP URL ルールに従って正規化されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Sub-websockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr "サブ・ウェブソケットは、包含クラスと入れ子クラスの両方の `@WebSocket` アノテーションで宣言されたパス・パラメー タへのアクセスを継承します。以下の例では、包含クラス内の `consumePrimary` メソッドが `version` パラメータにアクセスできます。一方、入れ子クラス内の `consumeNested` メソッドは、 `version` と `id` の両方のパラメータにアクセスできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket connection"
msgstr "ウェブソケット接続"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocket` endpoint and used to interact with the connected client."
msgstr "`io.quarkus.websockets.next.WebSocketConnection` オブジェクトは、WebSocket 接続を表します。Quarkusは、このインターフェイスを実装し、 `WebSocket` エンドポイントに注入して接続クライアントとの対話に使用できる、 `@SessionScoped` CDI Beanを提供します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketConnection` object:"
msgstr "`@OnOpen` 、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnClose` でアノテーションされたメソッドは、注入された `WebSocketConnection` オブジェクトにアクセスできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methods, the `WebSocketConnection` object is not available. However, it is possible to <<list-open-connections,list all open connections>>."
msgstr "これらのメソッド以外では、 `WebSocketConnection` オブジェクトは利用できないことに注意してください。しかし xref:list-open-connections[、開いている接続をすべてリストアップ] することは可能です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, broadcast messages to all connected clients, etc."
msgstr "接続は、クライアントへのメッセージ送信、パス・パラメーターへのアクセス、接続されているすべてのクライアントへのメッセージのブロードキャストなどに使用できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketConnection` はメッセージ送信にブロッキングとノンブロッキングの両方のメソッドを提供します："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)` :テキスト・メッセージをクライアントに送信し、メッセージが送信されるのを待ちます。これはブロックされるので、実行スレッドからのみ呼び出されるべきです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking. Make sure you or Quarkus subscribes to the returned `Uni` to send the message.\n"
"If you return the `Uni` from a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), it will subscribe to it and send the message.\n"
"For example:"
msgstr "`sendText(String message)` :テキスト・メッセージをクライアントに送信します。 `Uni` を返します。 ノンブロッキングです。メッセージを送信するには、あなたまたはQuarkusが返された `Uni` を購読していることを確認してください。Quarkusによって呼び出されたメソッド（Quarkus REST、Quarkus WebSocket Next、Quarkus Messagingなど）から `Uni` 。例えば"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the `Uni`."
msgstr "`Uni` の購読については <<subscribe-or-not-subscribe>> をご覧ください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "List open connections"
msgstr "開いている接続のリスト"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenConnections` that declares convenient methods to access the connections."
msgstr "また、開いている接続をすべて一覧表示することも可能です。Quarkusでは、接続にアクセスするための便利なメソッドを宣言した `io.quarkus.websockets.next.OpenConnections` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OpenConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenConnections#listAll()` は、指定された時刻に開いているすべての接続の不変スナップショットを返します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenConnections#findByEndpointId(String)` makes it easy to find connections for a specific endpoint."
msgstr "他にも便利な方法があります。例えば、 `OpenConnections#findByEndpointId(String)` を使えば、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "User data"
msgstr "ユーザーデータ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketConnection#userData()` method represents mutable user data associated with a connection."
msgstr "また、任意のユーザー・データを特定の接続に関連付けることも可能です。 `WebSocketConnection#userData()` メソッドで得られる `io.quarkus.websockets.next.UserData` オブジェクトは、接続に関連付けられた変更可能なユーザー・データを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`CoolService#isCool()` returns `Boolean` that is associated with the current connection."
msgstr "`CoolService#isCool()` 現在の接続に関連する を返します。 `Boolean` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `TypedKey.forBoolean(\"isCool\")` is the key used to obtain the data stored when the connection was created."
msgstr "`TypedKey.forBoolean(\"isCool\")` は、接続作成時に保存されたデータを取得するためのキーです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI events"
msgstr "CDIイベント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr "Quarkusでは、新しい接続が開かれると、 `@io.quarkus.websockets.next.Open` 修飾子が付いた `io.quarkus.websockets.next.WebSocketConnection` 型のCDIイベントが非同期に発生します。さらに、接続が閉じられると、 `@io.quarkus.websockets.next.Closed` の修飾子を持つ `WebSocketConnection` 型の CDI イベントが非同期に発生します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "An asynchronous observer method is executed using the default blocking executor service."
msgstr "非同期オブザーバー・メソッドは、デフォルトのブロッキング・エグゼキューター・サービスを使用して実行されます。"

#: _guides/websockets-next-reference.adoc
msgid "Security"
msgstr "セキュリティー"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Security capabilities are provided by the Quarkus Security extension.\n"
"Any xref:security-identity-providers.adoc[Identity provider] can be used to convert authentication credentials on the initial HTTP request into a `SecurityIdentity` instance.\n"
"The `SecurityIdentity` is then associated with the websocket connection.\n"
"Authorization options are demonstrated in following sections."
msgstr "セキュリティ機能は、Quarkus Securityエクステンションによって提供されます。任意の xref:security-identity-providers.adoc[ID プロバイダ] を使用して、最初の HTTP リクエストの認証情報を `SecurityIdentity` インスタンスに変換できます。その後、 `SecurityIdentity` が Web ソケット接続に関連付けられます。認証オプションについては、次のセクションで説明します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When an OpenID Connect extension, `quarkus-oidc`, is used and token expires, Quarkus automatically closes connection."
msgstr "OpenID Connectのエクステンションである `quarkus-oidc` 、トークンの有効期限が切れると、Quarkusは自動的に接続を閉じます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Secure HTTP upgrade"
msgstr "安全なHTTPアップグレード"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An HTTP upgrade is secured when a standard security annotation is placed on an endpoint class or an HTTP Security policy is defined.\n"
"The advantage of securing HTTP upgrade is less processing, the authorization is performed early and only once.\n"
"You should always prefer HTTP upgrade security unless you need to perform an action on error (see <<secure-callback-methods>>) or a security check based on the payload (see <<secure-endpoints-with-permission-checkers>>)."
msgstr "エンドポイント・クラスに標準のセキュリティ・アノテーションを付けるか、HTTP セキュリティ・ポリシーを定義すると、HTTP アップグレードが保護されます。HTTP アップグレードをセキュアにする利点は、処理が少なくて済むことです。エラー時のアクション ( <<secure-callback-methods>> を参照) や、ペイロードに基づくセキュリティチェック ( <<secure-endpoints-with-permission-checkers>> を参照) が必要な場合を除き、常に HTTP アップグレードのセキュリティを優先すべきです。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use standard security annotation to secure an HTTP upgrade"
msgstr "標準的なセキュリティ・アノテーションを使用して、HTTPアップグレードを保護します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Initial HTTP handshake ends with the 401 status for anonymous users.\n"
"You can also redirect the handshake request on authorization failure with the `quarkus.websockets-next.server.security.auth-failure-redirect-url` configuration property."
msgstr "最初の HTTP ハンドシェイクは、匿名ユーザの場合、401 ステータスで終了します。また、 `quarkus.websockets-next.server.security.auth-failure-redirect-url` 構成プロパティを使用して、認証失敗時にハンドシェイク要求をリダイレクトすることもできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"HTTP upgrade is only secured when a security annotation is declared on an endpoint class next to the `@WebSocket` annotation.\n"
"Placing a security annotation on an endpoint bean will not secure bean methods, only the HTTP upgrade.\n"
"You must always verify that your endpoint is secured as intended."
msgstr "HTTP アップグレードは、 `@WebSocket` アノテーションの隣にあるエンドポイント・クラス上で セキュリティ・アノテーションが宣言されている場合にのみ保護されます。エンドポイント Bean にセキュリティ注釈を付けても、Bean メソッドは保護されず、HTTP アップグレードのみが保護されます。エンドポイントが意図したとおりにセキュアであることを常に検証する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use HTTP Security policy to secure an HTTP upgrade"
msgstr "HTTPセキュリティポリシーを使用してHTTPアップグレードを保護します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Secure WebSocket endpoint callback methods"
msgstr "セキュアな WebSocket エンドポイントのコールバック・メソッド"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr "WebSocket のエンドポイント・コールバック・メソッドは、 `io.quarkus.security.Authenticated` 、 `jakarta.annotation.security.RolesAllowed` などのセキュリティ注釈や、 xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[サポートされているセキュリティ注釈の] ドキュメントに記載されている注釈で保護することができます。"

#: _guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例えば、以下のようになります:"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr "echo コールバックメソッドは、現在のセキュリティ ID が `admin` ロールを持つ場合にのみ呼び出すことができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The error handler is invoked in case of the authorization failure."
msgstr "エラーハンドラは、認証に失敗した場合に呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Secure server endpoints with permission checkers"
msgstr "パーミッションチェッカーによるセキュアなサーバーエンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can be secured with the xref:security-authorize-web-endpoints-reference.adoc#permission-checker[permission checkers].\n"
"We recommend to <<secure-http-upgrade>> rather than individual endpoint methods. For example:"
msgstr "WebSocket エンドポイントは、 xref:security-authorize-web-endpoints-reference.adoc#permission-checker[パーミッションチェッカー] で保護することができます。個々のエンドポイントメソッドではなく、 <<secure-http-upgrade>> 。例えば"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example of a WebSocket endpoint with secured HTTP upgrade"
msgstr "セキュアな HTTP アップグレードを伴う WebSocket エンドポイントの例"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example of a permission checker authorizing the HTTP upgrade"
msgstr "HTTP アップグレードを許可するパーミッションチェッカーの例"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "A permission checker authorizing an HTTP upgrade must declare exactly one method parameter, the `SecurityIdentity`."
msgstr "HTTP アップグレードを許可するパーミッションチェッカーは、 `SecurityIdentity` というメソッドパラメーターを 1 つだけ宣言しなければなりません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "It is also possible to run security checks on every message. For example, a message payload can be accessed like this:"
msgstr "すべてのメッセージに対してセキュリティ・チェックを実行することも可能です。例えば、メッセージのペイロードはこのようにアクセスできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `getProduct` callback method can only be invoked if the current security identity has an `admin` role or the user is allowed to get the product detail."
msgstr "`getProduct` コールバックメソッドは、現在のセキュリティ ID が `admin` ロールを持つか、ユーザが商品詳細の取得を許可されている場合にのみ呼び出すことができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Bearer token authentication"
msgstr "ベアラートークン認証"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] expects that the bearer token is passed in the `Authorization` header during the initial HTTP handshake.\n"
"Java WebSocket clients such as <<client-api, WebSockets Next Client>> and https://vertx.io/docs/vertx-core/java/#_websockets_on_the_client[Vert.x WebSocketClient] support adding custom headers to the WebSocket opening handshake.\n"
"However, JavaScript clients that follow the https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] do not support adding custom headers.\n"
"Therefore, passing a bearer access token using a custom `Authorization` header is impossible with JavaScript-based WebSocket clients.\n"
"The JavaScript WebSocket client only allows to configure the HTTP https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Protocol[Sec-WebSocket-Protocol] request header for negotiating a sub-protocol.\n"
"If absolutely necessary, the `Sec-WebSocket-Protocol` header might be used as a carrier for custom headers, to provide a workaround the https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API] restrictions.\n"
"Here is an example of a JavaScript client propagating the `Authorization` header as a sub-protocol value:"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラートークン認証] では、最初の HTTP ハンドシェイク中に `Authorization` ヘッダーにベアラートークンが渡されることを想定しています。 xref:client-api[WebSockets Next Client] や link:https://vertx.io/docs/vertx-core/java/#_websockets_on_the_client[Vert.x WebSocketClient] などの Java WebSocket クライアントは、WebSocket のオープニングハンドシェイクにカスタムヘッダーを追加できます。しかし、 link:https://websockets.spec.whatwg.org/#the-websocket-interface[WebSockets API ] に従う JavaScript クライアントは、カスタムヘッダの追加をサポートしていません。そのため、カスタムヘッダ `Authorization` を使用してベアラアクセストークンを渡すことは、JavaScript ベースの WebSocket クライアントでは不可能です。JavaScript WebSocket クライアントでは、サブプロトコルをネゴシエートするための HTTP link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Protocol[Sec-WebSocket-Protocol] リクエストヘッダのみを設定できます。どうしても必要な場合は、 `Sec-WebSocket-Protocol` ヘッダをカスタムヘッダのキャリアとして使用することで、 link:https://websockets.spec.whatwg.org/#the-websocket-interface[WebSocket API の] 制限を回避することができます。以下は、JavaScript クライアントが `Authorization` ヘッダをサブプロトコル値として伝播する例です："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Expected format for the Quarkus Header sub-protocol is `quarkus-http-upgrade#header-name#header-value`.\n"
"Do not forget to encode the sub-protocol value as a URI component to avoid encoding issues."
msgstr "Quarkus Headerサブプロトコルに期待されるフォーマットは `quarkus-http-upgrade#header-name#header-value` です。エンコーディングの問題を避けるために、サブプロトコル値をURIコンポーネントとしてエンコードすることを忘れないでください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Indicate 2 sub-protocols supported by the client, the sub-protocol of your choice and the Quarkus HTTP upgrade sub-protocol."
msgstr "クライアントがサポートする2つのサブプロトコル、選択したサブプロトコル、およびQuarkus HTTPアップグレードサブプロトコルを示します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For the WebSocket server to accept the `Authorization` passed as a sub-protocol, we must:"
msgstr "WebSocketサーバーがサブプロトコルとして渡された `Authorization` ："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configure our WebSocket server with the supported sub-protocols. When the WebSocket client provides a lists of supported sub-protocols in the HTTP `Sec-WebSocket-Protocol` request header, the WebSocket server must agree to serve content with one of them."
msgstr "サポートされているサブプロトコルで WebSocket サーバーを設定します。WebSocket クライアントが HTTP `Sec-WebSocket-Protocol` リクエストヘッダでサポートされているサブプロトコルのリストを提供する場合、WebSocket サーバーはそのうちの 1 つでコンテンツを提供することに同意する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enable Quarkus HTTP upgrade sub-protocol mapping to the opening WebSocket handshake request headers."
msgstr "QuarkusのHTTPアップグレードサブプロトコルを、オープニングWebSocketハンドシェイクリクエストヘッダーにマッピングできるようにします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket security model is origin-based and is not designed for the client-side authentication with headers or cookies.\n"
"For example, web browsers do not enforce the Same-origin policy for the opening WebSocket handshake request.\n"
"When you plan to use bearer access tokens during the opening WebSocket handshake request, we strongly recommend to follow the additional security measures listed below to minimize the security risks:"
msgstr "WebSocket のセキュリティ・モデルはオリジン・ベースであり、ヘッダーやクッキーを使ったクライアント側の認証のために設計されていません。たとえば、Web ブラウザは、WebSocket ハンドシェーク・リクエストの開始時に Same-origin ポリシーを適用しません。WebSocket ハンドシェイク要求の開始時にベアラアクセストークンを使用する場合は、セキュリティリスクを最小化するために、以下に示す追加のセキュリティ対策に従うことを強くお勧めします："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Restrict supported Origins to trusted Origins only with the xref:security-cors.adoc#cors-filter[CORS filter]."
msgstr "xref:security-cors.adoc#cors-filter[CORSフィルター] を使用して、サポートされるオリジンを信頼できるオリジンのみに制限します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use the `wss` protocol to enforce encrypted HTTP connection via TLS."
msgstr "`wss` プロトコルを使用して、TLS による HTTP 接続を暗号化します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use a custom WebSocket ticket system which supplies a random token with the HTML page which hosts the JavaScript WebSockets client which must provide this token during the initial handshake request as a query parameter."
msgstr "JavaScriptのWebSocketクライアントをホストするHTMLページにランダムなトークンを供給するカスタムWebSocketチケットシステムを使用し、クエリパラメータとして最初のハンドシェイクリクエスト中にこのトークンを提供する必要があります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inspect and/or reject HTTP upgrade"
msgstr "HTTPアップグレードの検査と拒否"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"To inspect an HTTP upgrade, you must provide a CDI bean implementing the `io.quarkus.websockets.next.HttpUpgradeCheck` interface.\n"
"Quarkus calls the `HttpUpgradeCheck#perform` method on every HTTP request that should be upgraded to a WebSocket connection.\n"
"Inside this method, you can perform any business logic and/or reject the HTTP upgrade."
msgstr "HTTP アップグレードを検査するには、 `io.quarkus.websockets.next.HttpUpgradeCheck` インターフェイスを実装する CDI Bean を提供する必要があります。Quarkus は、WebSocket 接続にアップグレードする必要がある HTTP 要求ごとに `HttpUpgradeCheck#perform` メソッドを呼び出します。このメソッドの内部で、任意のビジネスロジックを実行したり、HTTPアップグレードを拒否したりできます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example HttpUpgradeCheck"
msgstr "HttpUpgradeCheck の例"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The CDI beans implementing `HttpUpgradeCheck` interface can be either `@ApplicationScoped`, `@Singleton` or `@Dependent` beans, but never the `@RequestScoped` beans."
msgstr "`HttpUpgradeCheck` インタフェースを実装するCDIビーンズは、 `@ApplicationScoped` , `@Singleton` , `@Dependent` ビーンズのいずれでもかまいませんが、 `@RequestScoped` ビーンズになることはありません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Reject the HTTP upgrade. Initial HTTP handshake ends with the 400 Bad Request response status code."
msgstr "HTTP アップグレードを拒否します。最初の HTTP ハンドシェイクは、400 Bad Request 応答ステータス・コードで終了します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "You can choose WebSocket endpoints to which the `HttpUpgradeCheck` is applied with the `HttpUpgradeCheck#appliesTo` method."
msgstr "`HttpUpgradeCheck#appliesTo` メソッドで、 `HttpUpgradeCheck` を適用する WebSocket エンドポイントを選択できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "TLS"
msgstr "TLS"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "As a direct consequence of the fact this extension reuses the _main_ HTTP server, all the relevant server configurations apply. See Refer to the xref:http-reference.adoc#ssl[HTTP guide] for more details."
msgstr "このエクステンションが _メインの_ HTTP サーバーを再利用していることの直接的な結果として、関連するすべてのサーバー設定が適用されます。詳細は xref:http-reference.adoc#ssl[HTTP ガイド] を参照してください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Hibernate multitenancy"
msgstr "Hibernateマルチテナンシー"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `RoutingContext` is not available after the HTTP upgrade. However, it is possible to inject the `WebSocketConnection` and access the headers of the initial HTTP request."
msgstr "HTTP アップグレード後は `RoutingContext` を利用できません。しかし、 `WebSocketConnection` を注入し、最初の HTTP リクエストのヘッダにアクセスすることは可能です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "If a custom `TenantResolver` is used and you would like to combine REST/HTTP and WebSockets, the code may look like this:"
msgstr "カスタム `TenantResolver` を使用し、REST/HTTP と WebSocket を組み合わせたい場合、コードは次のようになります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "For more information on Hibernate multitenancy, refer to the https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate documentation]."
msgstr "Hibernate のマルチテナントの詳細については、 link:https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate のドキュメント] を参照してください。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client API"
msgstr "クライアントAPI"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client connectors"
msgstr "クライアントコネクタ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A connector can be used to configure and open a new client connection backed by a client endpoint that is used to consume and send messages.\n"
"Quarkus provides a CDI bean with bean type `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` and default qualifer that can be injected in other beans.\n"
"The actual type argument of an injection point is used to determine the client endpoint.\n"
"The type is validated during build - if it does not represent a client endpoint the build fails."
msgstr "コネクタを使用して、メッセージの消費と送信に使用されるクライアントエンドポイントに裏付けされた新しいクライアント接続を構成し、開くことができます。Quarkus は、他の Bean に注入できる Bean 型 `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` とデフォルトの Qualifer を持つ CDI Bean を提供します。注入ポイントの実際の型引数は、クライアントエンドポイントを決定するために使用されます。型はビルド中に検証され、クライアントエンドポイントを表していない場合、ビルドは失敗します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Let’s consider the following client endpoint:"
msgstr "次のようなクライアント・エンドポイントを考えてみましょう："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoint"
msgstr "クライアントエンドポイント"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connector for this client endpoint is used as follows:"
msgstr "このクライアント・エンドポイントのコネクタは、以下のように使用されます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Connector"
msgstr "コネクタ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inject the connector for `ClientEndpoint`."
msgstr "`ClientEndpoint` 用のコネクタを挿入します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "If the base `URI` is not supplied we attempt to obtain the value from the config. The key consists of the client id and the `.base-uri` suffix."
msgstr "ベースとなる `URI` が提供されない場合、設定から値を取得しようとします。キーはクライアント ID と `.base-uri` のサフィックスで構成されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the path param value. Throws `IllegalArgumentException` if the client endpoint path does not contain a parameter with the given name."
msgstr "パスパラメータ値を設定します。クライアントのエンドポイントパスに、指定した名前のパラメータが含まれていない場合は `IllegalArgumentException` をスローします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use the connection to send messages, if needed."
msgstr "必要であれば、接続を使用してメッセージを送信します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "If an application attempts to inject a connector for a missing endpoint, an error is thrown."
msgstr "アプリケーションが見つからないエンドポイントのコネクタを注入しようとすると、エラーがスローされます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Connectors are not thread-safe and should not be used concurrently.\n"
"Connectors should also not be reused.\n"
"If you need to create multiple connections in a row you'll need to obtain a new connetor instance programmatically using `Instance#get()`:"
msgstr "コネクタはスレッドセーフではないので、同時に使用しないでください。また、コネクターは再利用しないでください。複数の接続を連続して作成する必要がある場合は、 `Instance#get()` を使用して新しいコネクターのインスタンスをプログラムで取得する必要があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Basic connector"
msgstr "基本コネクタ"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In the case where the application developer does not need the combination of the client endpoint and the connector, a _basic connector_ can be used.\n"
"The basic connector is a simple way to create a connection and consume/send messages without defining a client endpoint."
msgstr "アプリケーション開発者がクライアント・エンドポイントとコネクタの組み合わせを必要としない場合、 _基本コネクタを_ 使用できます。基本コネクタは、クライアント・エンドポイントを定義せずに接続を作成し、メッセージを消費/送信する簡単な方法です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inject the connector."
msgstr "コネクタを挿入します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The base URI must be always set."
msgstr "ベースURIは常に設定されていなければなりません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The additional path that should be appended to the base URI."
msgstr "ベース URI に追加されるべき追加パス。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the execution model for callback handlers. By default, the callback may block the current thread. However in this case, the callback is executed on the event loop and may not block the current thread."
msgstr "コールバックハンドラの実行モデルを設定します。デフォルトでは、コールバックは現在のスレッドをブロックする可能性があります。しかし、この場合、コールバックはイベントループ上で実行され、現在のスレッドをブロックすることはありません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The lambda will be called for every text message sent from the server."
msgstr "このラムダは、サーバーからテキストメッセージが送信されるたびに呼び出されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The basic connector is closer to a low-level API and is reserved for advanced users.\n"
"However, unlike others low-level WebSocket clients, it is still a CDI bean and can be injected in other beans.\n"
"It also provides a way to configure the execution model of the callbacks, ensuring optimal integration with the rest of Quarkus."
msgstr "基本コネクタは低レベルAPIに近く、上級者向けです。しかし、他の低レベルWebSocketクライアントとは異なり、CDIビーンであり、他のビーンに注入することができます。また、コールバックの実行モデルを設定する方法を提供し、Quarkusの他の部分との最適な統合を保証します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket client connection"
msgstr "WebSocketクライアント接続"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketClientConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocketClient` endpoint and used to interact with the connected server."
msgstr "`io.quarkus.websockets.next.WebSocketClientConnection` オブジェクトは、WebSocket 接続を表します。Quarkus では、このインタフェースを実装した `@SessionScoped` CDI Bean を提供しており、 `WebSocketClient` エンドポイントに注入して、接続されているサーバーとの対話に使用できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketClientConnection` object:"
msgstr "`@OnOpen` 、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnClose` でアノテーションされたメソッドは、注入された `WebSocketClientConnection` オブジェクトにアクセスできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methods, the `WebSocketClientConnection` object is not available. However, it is possible to <<list-open-client-connections,list all open client connections>>."
msgstr "これらのメソッド以外では、 `WebSocketClientConnection` オブジェクトは利用できないことに注意してください。しかし xref:list-open-client-connections[、開いているクライアント接続をすべてリストアップ] することは可能です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, etc."
msgstr "接続は、クライアントへのメッセージ送信、パス・パラメーターへのアクセスなどに使用できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketClientConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketClientConnection` はメッセージ送信にブロッキングとノンブロッキングの両方のメソッドを提供します："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "List open client connections"
msgstr "オープンなクライアント接続のリスト"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenClientConnections` that declares convenient methods to access the connections."
msgstr "また、開いている接続をすべて一覧表示することも可能です。Quarkusでは、接続にアクセスするための便利なメソッドを宣言した `io.quarkus.websockets.next.OpenClientConnections` 。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OpenClientConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenClientConnections#listAll()` は、指定された時刻に開いているすべての接続の不変スナップショットを返します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenClientConnections#findByClientId(String)` makes it easy to find connections for a specific endpoint."
msgstr "他にも便利な方法があります。例えば、 `OpenClientConnections#findByClientId(String)` を使えば、特定のエンドポイントの接続を簡単に見つけることができます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketClientConnection#userData()` method represents mutable user data associated with a connection."
msgstr "また、任意のユーザー・データを特定の接続に関連付けることも可能です。 `WebSocketClientConnection#userData()` メソッドで得られる `io.quarkus.websockets.next.UserData` オブジェクトは、接続に関連付けられた変更可能なユーザー・データを表します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr "Quarkusでは、新しい接続が開かれると、 `@io.quarkus.websockets.next.Open` 修飾子が付いた `io.quarkus.websockets.next.WebSocketClientConnection` 型のCDIイベントが非同期に発生します。さらに、接続が閉じられると、 `@io.quarkus.websockets.next.Closed` の修飾子を持つ `WebSocketClientConnection` 型の CDI イベントが非同期に発生します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configuring SSL/TLS"
msgstr "SSL/TLSの設定"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "To establish a TLS connection, you need to configure a _named_ configuration using the xref:./tls-registry-reference.adoc[TLS registry]:"
msgstr "TLS接続を確立するには、 xref:./tls-registry-reference.adoc[TLSレジストリ] を使用して _名前付き_ コンフィグレーションを設定する必要があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When using the WebSocket client, using a _named_ configuration is required to avoid conflicts with other TLS configurations.\n"
"The client will not use the default TLS configuration."
msgstr "WebSocketクライアントを使用する場合、他のTLS設定との競合を避けるために、 _名前付き_ 設定を使用する必要があります。クライアントはデフォルトのTLS構成を使用しません。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you configure a _named_ TLS configuration, TLS is enabled by default."
msgstr "_名前付き_ TLSコンフィギュレーションを設定すると、デフォルトでTLSが有効になります。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Traffic logging"
msgstr "トラフィックの記録"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus can log the messages sent and received for debugging purposes.\n"
"To enable traffic logging for the server, set the `quarkus.websockets-next.server.traffic-logging.enabled` configuration property to `true`.\n"
"To enable traffic logging for the client, set the `quarkus.websockets-next.client.traffic-logging.enabled` configuration property to `true`.\n"
"The payload of text messages is logged as well.\n"
"However, the number of logged characters is limited.\n"
"The default limit is 100, but you can change this limit with the `quarkus.websockets-next.server.traffic-logging.text-payload-limit` and `quarkus.websockets-next.client.traffic-logging.text-payload-limit` configuration property, respectively."
msgstr "Quarkus では、デバッグ目的で送受信されたメッセージをログに記録できます。サーバーのトラフィックロギングを有効にするには、 `quarkus.websockets-next.server.traffic-logging.enabled` 構成プロパティを `true` に設定します。 クライアントのトラフィックロギングを有効にするには、 `quarkus.websockets-next.client.traffic-logging.enabled` 構成プロパティを `true` に設定します。 テキストメッセージのペイロードもログに記録されます。ただし、記録される文字数には制限があります。既定の制限は 100 ですが、この制限はそれぞれ `quarkus.websockets-next.server.traffic-logging.text-payload-limit` および `quarkus.websockets-next.client.traffic-logging.text-payload-limit` 構成プロパティで変更できます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "The messages are only logged if the `DEBUG` level is enabled for the logger `io.quarkus.websockets.next.traffic`."
msgstr "メッセージは、ロガー `io.quarkus.websockets.next.traffic` で `DEBUG` レベルが有効になっている場合にのみログに記録されます。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example server configuration"
msgstr "サーバー構成例"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enables traffic logging."
msgstr "トラフィックのロギングを有効にします。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the number of characters of a text message payload which will be logged."
msgstr "ログに記録されるテキスト・メッセージ・ペイロードの文字数を設定します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enable `DEBUG` level is for the logger `io.quarkus.websockets.next.traffic`."
msgstr "有効 `DEBUG` レベルは、ロガー `io.quarkus.websockets.next.traffic` 用です。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When to subscribe to a `Uni` or `Multi`"
msgstr "`Uni` または `Multi`"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni` and `Multi` are lazy types, which means that they do not start processing until they are subscribed to."
msgstr "`Uni` と は遅延型です。つまり、サブスクライブされるまで処理を開始しません。 `Multi` "

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you get (from a parameter or from a method you called) a `Uni` or a `Multi`, whether you should subscribe to it depends on the context:"
msgstr "パラメータや呼び出したメソッドから） `Uni` や `Multi` を受け取ったとき、それを購読すべきかどうかはコンテキストによります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "if you return the `Uni` or `Multi` in a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), Quarkus subscribes to it and processes the items emitted by the `Multi` or the item emitted by the `Uni`:"
msgstr "Quarkusによって呼び出されたメソッド（Quarkus REST、Quarkus WebSocket Next、Quarkus Messagingなど）で `Uni` または `Multi` を返すと、Quarkusはそれを購読し、 `Multi` によって発行されたアイテムまたは `Uni` によって発行されたアイテムを処理します："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "When a `Uni` or `Multi` is returned from a method annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, or `@OnClose`, Quarkus subscribes to it automatically."
msgstr "`@OnOpen` 、 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnClose` でアノテーションされたメソッドから `Uni` または `Multi` が返されると、Quarkus は自動的にそのメソッドを購読します。"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "if you do not return the `Uni` or `Multi` in a method invoked by Quarkus, you should subscribe to it:"
msgstr "Quarkusによって呼び出されたメソッドで、 `Uni` または `Multi` を返さない場合は、サブスクライブする必要があります："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Telemetry"
msgstr "テレメトリー"

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When the OpenTelemetry extension is present, traces for opened and closed WebSocket connections are collected by default.\n"
"If you do not require WebSocket traces, you can disable collecting of traces like in the example below:"
msgstr "OpenTelemetry エクステンションが存在する場合、デフォルトで WebSocket コネクションのオープンとクローズのトレースが収集されます。WebSocket のトレースが不要な場合は、以下の例のようにトレースの収集を無効にすることができます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When the Micrometer extension is present, Quarkus can collect metrics for messages, errors and bytes transferred.\n"
"If you require a WebSocket metrics, you can enable the metrics like in the example below:"
msgstr "Micrometerエクステンションがある場合、Quarkusはメッセージ、エラー、転送バイトのメトリクスを収集できます。WebSocketメトリクスが必要な場合は、以下の例のようにメトリクスを有効にできます："

#: _guides/websockets-next-reference.adoc
#, fuzzy
msgid "Telemetry for the `BasicWebSocketConnector` is currently not supported."
msgstr "`BasicWebSocketConnector` のテレメトリーは現在サポートされていません。"

#: _guides/websockets-next-reference.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _guides/websockets-next-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
