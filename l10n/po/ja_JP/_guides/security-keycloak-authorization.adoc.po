msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#: _guides/security-keycloak-authorization.adoc
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr "OpenID Connect (OIDC)とKeycloakを使用した認可の一元化"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Learn how to enable bearer token authorization in your Quarkus application by using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr "保護されたリソースへのセキュアなアクセスを実現するために、 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak認証サービス] を使用して、Quarkusアプリケーションでベアラートークン認証を有効にする方法を説明します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Overview"
msgstr "概要"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Authorization extension, `quarkus-keycloak-authorization`, extends the OpenID Connect extension, `quarkus-oidc`, to provide advanced authorization capabilities.\n"
"It features a policy enforcer that dynamically manages access to secured resources.\n"
"Access is governed by permissions defined in Keycloak, supporting flexible and dynamic Resource-Based Access Control (RBAC)."
msgstr "Keycloak Authorizationエクステンション（ `quarkus-keycloak-authorization` ）は、OpenID Connectエクステンション（ `quarkus-oidc` ）を拡張し、高度な認証機能を提供します。セキュリティで保護されたリソースへのアクセスを動的に管理するポリシーエンフォーサーを備えています。アクセスはKeycloakで定義されたパーミッションによって管理され、柔軟で動的なリソースベースのアクセス制御（RBAC）をサポートします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Use the `quarkus-keycloak-authorization` extension only if you are using Keycloak and Keycloak Authorization Services is enabled in your environment to handle authorization decisions."
msgstr "`quarkus-keycloak-authorization` 、Keycloakを使用し、Keycloak Authorization Servicesが認証決定を処理するために有効になっている場合にのみ、エクステンションを使用してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you are not using Keycloak, or if Keycloak is configured without Keycloak Authorization Services, use the `quarkus-oidc` extension instead."
msgstr "Keycloakを使用していない場合、またはKeycloak Authorization Servicesを使用せずにKeycloakが設定されている場合は、代わりに `quarkus-oidc` エクステンションを使用してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "How it works"
msgstr "動作原理"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `quarkus-keycloak-authorization` extension centralizes authorization responsibilities in Keycloak, enhancing security and simplifying application maintenance:"
msgstr "`quarkus-keycloak-authorization` エクステンションは、Keycloakに認可の責任を集中させ、セキュリティを強化し、アプリケーションのメンテナンスを簡素化します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It uses the `quarkus-oidc` extension to verify bearer tokens."
msgstr "ベアラ・トークンの検証には、 `quarkus-oidc` 拡張を使用します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It sends verified tokens to Keycloak Authorization Services."
msgstr "認証されたトークンをKeycloak認証サービスに送信します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It allows Keycloak to evaluate resource-based permissions dynamically by using attributes such as resource name, identifier, or URI."
msgstr "これにより、Keycloakは、リソース名、識別子、またはURIなどの属性を使用して、リソースベースのパーミッションを動的に評価することができます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By externalizing authorization decisions, you can:"
msgstr "認可の決定を外部化することで、それが可能になります："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Implement diverse access control strategies without modifying application code."
msgstr "アプリケーションコードを変更することなく、多様なアクセス制御戦略を実装します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Reduce redeployment needs as security requirements evolve."
msgstr "セキュリティ要件の進化に伴う再配置の必要性を低減します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Compatibility"
msgstr "互換性"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This extension is compatible only with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications].\n"
"It complements explicit mechanisms such as role-based access control with dynamic authorization policies."
msgstr "このエクステンションは、Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDCサービスアプリケーションとのみ] 互換性があります。ロールベースのアクセス制御のような明示的なメカニズムを、動的な認可ポリシーで補完します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Key Features"
msgstr "主な特徴"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Centralized Management**: Delegate authorization decisions to Keycloak for consistent security policies across applications."
msgstr "*集中管理* ：認証の決定をKeycloakに委ねることで、アプリケーション間で一貫したセキュリティポリシーを実現します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Dynamic Permissions**: Define access control dynamically by using resource attributes."
msgstr "*動的パーミッション* ：リソース属性を使用してアクセス制御を動的に定義します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Simplified Maintenance**: Reduce the need to update and redeploy applications when access policies change."
msgstr "*メンテナンスの簡素化* ：アクセスポリシーの変更に伴うアプリケーションの更新と再デプロイの必要性を削減します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Setting Up"
msgstr "セッティング"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Before using this extension, ensure the following:"
msgstr "このエクステンションを使用する前に、以下を確認してください："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Keycloak Authorization Services is enabled in your Keycloak instance."
msgstr "Keycloak認証サービスがKeycloakインスタンスで有効になっています。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Your Quarkus application includes the `quarkus-keycloak-authorization` extension."
msgstr "Quarkusアプリケーションには、 `quarkus-keycloak-authorization` エクステンションが含まれています。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For detailed steps, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr "詳細な手順については、 xref:security-oidc-bearer-token-authentication.adoc[OIDC ベアラ・トークン認証] ガイドを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "Additional resources"
msgstr "追加リソース"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To learn more about Keycloak Authorization Services and the policy enforcer, visit the official documentation:\n"
"https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services Documentation]."
msgstr "Keycloak認証サービスとポリシーエンフォーサーの詳細については、公式ドキュメントをご覧ください： link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak認証サービスのドキュメント] をご覧ください。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org[Keycloak]"
msgstr "link:https://www.keycloak.org[キークローク]"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This example demonstrates a simple microservice setup with two protected endpoints:"
msgstr "この例では、2つの保護されたエンドポイントを持つ単純なマイクロサービスのセットアップを示します："

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Token-based access control"
msgstr "トークン・ベースのアクセス制御"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Access to these endpoints is controlled by using bearer tokens.\n"
"To gain access, the following conditions must be met:"
msgstr "これらのエンドポイントへのアクセスは、ベアラートークンを使用して制御されます。アクセスするには、以下の条件を満たす必要があります："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Valid token**: The token must have a correct signature, a valid expiration date, and the appropriate audience."
msgstr "*有効なトークン* ：トークンには正しい署名、有効期限、適切な利用者が必要です。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Trust**: The microservice must trust the issuing Keycloak server."
msgstr "*信頼* ：マイクロサービスは発行元のKeycloakサーバーを信頼しなければなりません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The bearer tokens issued by the Keycloak server serve as:"
msgstr "Keycloakサーバーが発行するベアラートークンは、以下の役割を果たします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**User identifiers**: Indicating the subject (user) for whom the token was issued."
msgstr "*ユーザー識別子* ：トークンが発行された主体（ユーザー）を示します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Client references**: Identifying the client application acting on behalf of the user, per OAuth 2.0 Authorization Server standards."
msgstr "*クライアント参照* ：OAuth 2.0 Authorization Server 標準に従って、ユーザの代理を務めるクライアントアプリケーションを識別します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Endpoints and access policies"
msgstr "エンドポイントとアクセスポリシー"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For `/api/users/me`:"
msgstr "`/api/users/me` ："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Access policy**: Open to users with a valid bearer token and the `user` role."
msgstr "*アクセスポリシー* 有効なベアラートークンを持ち、 `user` ロールを持つユーザーに公開されます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Response**: Returns user details as a JSON object derived from the token."
msgstr "*レスポンス* トークンから派生したJSONオブジェクトとしてユーザの詳細を返します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Example response"
msgstr "回答例"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For `/api/admin`:"
msgstr "`/api/admin` ："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "*Access policy*: Restricted to users with a valid bearer token and the `admin` role."
msgstr "*アクセス・ポリシー* ：有効なベアラートークンと `admin` ロールを持つユーザーに制限されます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Decoupled authorization"
msgstr "認可の分離"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This example highlights the use of role-based access control (RBAC) policies to protect resources.\n"
"Key points include:"
msgstr "この例では、役割ベースのアクセス制御（RBAC）ポリシーを使用してリソースを保護する方法を紹介します。主なポイントは次のとおりです："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "*Policy flexibility*: Keycloak supports various policy types, such as attribute-based and custom policies, enabling fine-grained control."
msgstr "*ポリシーの柔軟性* ：Keycloakは、属性ベースやカスタムポリシーなど、さまざまなポリシータイプをサポートし、きめ細かな制御を可能にします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "*Decoupled application logic*: Authorization policies are managed entirely by Keycloak, allowing your application to focus on its core functionality."
msgstr "*アプリケーションロジックの分離* ：認証ポリシーはすべてKeycloakによって管理されるため、アプリケーションはコア機能に集中できます。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解決策は `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[ディレクトリ] にあります。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Creating the project"
msgstr "プロジェクトの作成"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To get started, create a new project by using the following command:"
msgstr "はじめに、以下のコマンドを使用して新しいプロジェクトを作成します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This command generates a new project with the `keycloak-authorization` extension.\n"
"The extension integrates a Keycloak Adapter into your Quarkus application, providing the necessary capabilities to interact with a Keycloak server and perform bearer token authorization."
msgstr "このコマンドにより、 `keycloak-authorization` エクステンションを持つ新しいプロジェクトが生成されます。このエクステンションは、KeycloakアダプターをQuarkusアプリケーションに統合し、Keycloakサーバーと対話し、ベアラートークンの認証を実行するために必要な機能を提供します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Adding extensions to an existing project"
msgstr "既存のプロジェクトへのエクステンションの追加"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you already have an existing Quarkus project, you can add the `oidc` and `keycloak-authorization` extensions by running the following command in your project's base directory:"
msgstr "既存のQuarkusプロジェクトがある場合は、プロジェクトのベースディレクトリで次のコマンドを実行することで、 `oidc` と `keycloak-authorization` のエクステンションを追加できます："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This command adds the following dependencies to your build file:"
msgstr "このコマンドは、ビルドファイルに以下の依存関係を追加します："

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Implementing the `/api/users/me` endpoint"
msgstr "`/api/users/me` エンドポイントの実装"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Start by implementing the `/api/users/me` endpoint.\n"
"The following code defines a Jakarta REST resource that provides user details:"
msgstr "`/api/users/me` エンドポイントを実装することから始めます。次のコードは、ユーザーの詳細を提供する Jakarta REST リソースを定義します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Implementing the `/api/admin` endpoint"
msgstr "`/api/admin` エンドポイントの実装"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Next, define the `/api/admin` endpoint.\n"
"The following code represents a simple Jakarta REST resource protected with authentication:"
msgstr "次に、 `/api/admin` エンドポイントを定義します。以下のコードは、認証で保護されたシンプルな Jakarta REST リソースを表しています："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Role-based access control with Keycloak"
msgstr "Keycloakによるロールベースのアクセス制御"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Notice that explicit annotations such as `@RolesAllowed` are not defined to enforce access control for the resources.\n"
"Instead, the `keycloak-authorization` extension dynamically maps the URIs of protected resources in Keycloak."
msgstr "リソースのアクセス制御を強制するために、 `@RolesAllowed` のような明示的な注釈は定義されていないことに注意してください。その代わりに、 `keycloak-authorization` 拡張は、保護されたリソースのURIをKeycloakに動的にマッピングします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access control is managed as follows:"
msgstr "アクセスコントロールは以下のように管理されます："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Keycloak evaluates permissions for each request based on its configured policies."
msgstr "Keycloakは、設定されたポリシーに基づいて各リクエストの許可を評価します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The extension enforces these permissions, granting or denying access based on the roles or policies defined in Keycloak."
msgstr "エクステンションは、Keycloakで定義されたロールやポリシーに基づいてアクセスを許可または拒否し、これらのパーミッションを実施します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This decouples access control logic from the application code, making it easier to manage and update access policies directly in Keycloak."
msgstr "これにより、アクセス制御ロジックがアプリケーションコードから切り離され、Keycloakでアクセスポリシーを直接管理・更新することが容易になります。"

#. type: Title ===
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can use the OpenID Connect extension to configure the adapter settings through the `application.properties` file, typically located in the `src/main/resources` directory.\n"
"For example:"
msgstr "OpenID Connect エクステンションを使用して、通常 `src/main/resources` ディレクトリにある `application.properties` ファイルからアダプタの設定を行うことができます。例えば"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Specifies the URL of the Keycloak server and the realm used for authentication."
msgstr "KeycloakサーバーのURLと認証に使用するレルムを指定します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Identifies the client application within the Keycloak realm."
msgstr "Keycloak領域内のクライアント・アプリケーションを識別します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Defines the client secret for authentication with the Keycloak server."
msgstr "Keycloakサーバーとの認証のためのクライアントシークレットを定義します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Disables TLS verification for development purposes, not recommended for production."
msgstr "本番環境では推奨しません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Enables the Keycloak policy enforcer to manage access control based on defined permissions."
msgstr "Keycloakポリシーエンフォーサーが定義されたアクセス許可に基づいてアクセス制御を管理できるようにします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Configures Dev Services to import a specified realm file, effective only in dev mode and not in JVM or native modes."
msgstr "指定されたrealmファイルをインポートするようにDev Servicesを設定します。Devモードでのみ有効で、JVMモードやネイティブ・モードでは有効ではありません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Adding the `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak automatically launches a container in development mode.\n"
"For more details, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "`quarkus.oidc.auth-server-url` に `%prod.` プロファイル接頭辞を追加すると、Dev Services for Keycloak が自動的に開発モードでコンテナを起動するようになります。詳細については、「 xref:keycloak-dev-mode[Devモードでアプリケーションを実行する] 」のセクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"By default, applications using the `quarkus-oidc` extension are treated as `service` type applications.\n"
"However, the extension also supports `web-app` type applications under the following conditions:"
msgstr "デフォルトでは、 `quarkus-oidc` 拡張を使用するアプリケーションは、 `service` タイプのアプリケーションとして扱われます。しかし、このエクステンションは以下の条件下で `web-app` タイプのアプリケーションもサポートします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The access token returned during the authorization code grant flow must be the source of roles (`quarkus.oidc.roles.source=accesstoken`)."
msgstr "認可コード付与フローで返されるアクセストークンは、ロール( `quarkus.oidc.roles.source=accesstoken` )のソースでなければなりません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Note: For `web-app` type applications, ID token roles are checked by default."
msgstr "注: `web-app` タイプのアプリケーションでは、ID トークンの役割はデフォルトでチェックされています。"

#: _guides/security-keycloak-authorization.adoc
msgid "Starting and configuring the Keycloak server"
msgstr "Keycloak サーバーの起動と設定"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "アプリケーションをdevモードで実行するときは、Keycloakサーバーを起動しないでください。Dev Services for Keycloakはコンテナを起動します。詳細については、 xref:keycloak-dev-mode[Devモードでアプリケーションを実行] するセクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To start a Keycloak server, use the following Docker command:"
msgstr "Keycloakサーバーを起動するには、以下のDockerコマンドを使用します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For `keycloak.version`, ensure the version is `26.0.7` or later."
msgstr "`keycloak.version` の場合、バージョンが `26.0.7` 以降であることを確認してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For Keycloak keystore, use the `keycloak-keystore.jks` file located at https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr "Keycloakキーストアの場合は、 link:https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config] にある `keycloak-keystore.jks` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Accessing the Keycloak server"
msgstr "Keycloakサーバーへのアクセス"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open your browser and navigate to https://localhost:8543[https://localhost:8543]."
msgstr "ブラウザを開き、 link:https://localhost:8543[https://localhost:8543。]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log in to the Keycloak Administration Console by using the following credentials:"
msgstr "以下の認証情報を使用してKeycloak管理コンソールにログインします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Username**: `admin`"
msgstr "*ユーザー名* `admin`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Password**: `admin`"
msgstr "*パスワード* `admin`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Importing the realm configuration"
msgstr "レルム設定のインポート"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To create a new realm, import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file].\n"
"For detailed steps on creating realms, refer to the Keycloak documentation: https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[Create a new realm]."
msgstr "新しいrealmを作成するには、 link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm設定ファイル] をインポートしてください。レルムを作成する詳細な手順については、Keycloakのドキュメントを参照してください： link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいレルムを作成します] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After importing the realm, you can review the resource permissions:"
msgstr "レルムをインポートした後、リソースの権限を確認することができます："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Role of Keycloak in resource permissions"
msgstr "リソース許可におけるキークロークの役割"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The resource access permissions are configured directly in Keycloak, which eliminates the need for `@RolesAllowed` annotations in your application code.\n"
"This approach centralizes access control management within Keycloak, simplifying application maintenance and security updates."
msgstr "リソースのアクセス許可はKeycloakで直接設定されるため、アプリケーションコードに `@RolesAllowed` アノテーションを付ける必要がありません。このアプローチは、Keycloak内でアクセス制御管理を集中化し、アプリケーションの保守とセキュリティ更新を簡素化します。"

#: _guides/security-keycloak-authorization.adoc
msgid "Running the application in dev mode"
msgstr "開発モードでのアプリケーションの実行"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To run the application in development mode, use the following command:"
msgstr "開発モードでアプリケーションを実行するには、以下のコマンドを使用します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] starts a Keycloak container and imports the `quarkus-realm.json` configuration file."
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloakは] Keycloakコンテナを起動し、 `quarkus-realm.json` 設定ファイルをインポートします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a **Provider: Keycloak** link on an **OpenID Connect** card in the Dev UI."
msgstr "link:http://localhost:8080/q/dev-ui[q/dev-ui] にある xref:dev-ui.adoc[Dev UI] を開き、 *Providerを* クリック *します：* Dev UIで *OpenID Connect* カードの *Keycloak* リンクをクリックします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Interacting with Dev UI"
msgstr "開発UIとの対話"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open the xref:dev-ui.adoc[Dev UI] at http://localhost:8080/q/dev-ui[/q/dev-ui]."
msgstr "link:http://localhost:8080/q/dev-ui[q/dev-ui] でxref:dev-ui.adoc[Dev UI] を開きます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Click the **Provider: Keycloak** link within the **OpenID Connect** card in the Dev UI."
msgstr "*プロバイダを* クリック *します：* Dev UIの *OpenID Connect* カード内の *Keycloak* リンクをクリックします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Testing user permissions"
msgstr "ユーザー権限のテスト"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When prompted to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`, do the following:"
msgstr "`OpenID Connect Dev UI` が提供する `Single Page Application` にログインするよう求められたら、次のようにします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr "`/api/users/me` リソースにアクセスするための `User Permission` しか持っていない `alice` (パスワード: `alice` ) としてログインします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `403`."
msgstr "`403` を返す `/api/admin` にアクセスします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/users/me`, which returns `200`."
msgstr "`200` を返す `/api/users/me` にアクセスします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr "ログアウトし、 `admin` （パスワード： `admin` ）としてログインします。 `Admin Permission` は `/api/admin` リソースにアクセスするため、 `User Permission` は `/api/users/me` リソースにアクセスするためです："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `200`."
msgstr "`200` を返す `/api/admin` にアクセスします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Customizing the Keycloak realm"
msgstr "キークローク領域のカスタマイズ"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you started Dev Services for Keycloak without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json], create a default `quarkus` realm without Keycloak authorization policies:"
msgstr "link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.jsonなどの] realmファイルをインポートせずにDev Services for Keycloakを開始した場合は、Keycloak認証ポリシーなしでデフォルトの `quarkus` realmを作成します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Select the **Keycloak Admin** link from the **OpenID Connect** card in the Dev UI."
msgstr "Dev UIの *OpenID Connect* カードから *Keycloak Admin* リンクを選択します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Log in to the Keycloak admin console.\n"
"The username and password are both `admin`."
msgstr "Keycloak管理コンソールにログインしてください。ユーザー名とパスワードはどちらも `admin` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Follow the instructions at link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services documentation] to enable authorization policies in the `quarkus` realm."
msgstr "link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Servicesドキュメントの] 指示に従って、 `quarkus` レルムで認可ポリシーを有効にします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The **Keycloak Admin** link is easy to find in Dev UI:"
msgstr "*Keycloak Adminの* リンクはDev UIで簡単に見つけることができます："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Adding custom JavaScript policies"
msgstr "カスタム JavaScript ポリシーの追加"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR archive, Dev Services for Keycloak can transfer this archive to the Keycloak container.\n"
"Use the following properties in `application.properties` to configure the transfer:"
msgstr "アプリケーションがJARアーカイブにデプロイされた link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScriptポリシー] で構成されたKeycloak認証を使用する場合、Dev Services for KeycloakはこのアーカイブをKeycloakコンテナに転送できます。 `application.properties` 、以下のプロパティを使用して転送を設定します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Creates a `policies` alias for the `/policies.jar` classpath resource.\n"
"The policies archive can also be located on the file system."
msgstr "`/policies.jar` クラスパスリソースの `policies` エイリアスを作成します。ポリシー・アーカイブは、ファイル・システム上に配置することもできます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Maps the policies archive to the `/opt/keycloak/providers/policies.jar` location inside the Keycloak container."
msgstr "ポリシーアーカイブをKeycloakコンテナ内の `/opt/keycloak/providers/policies.jar` 。"

#: _guides/security-keycloak-authorization.adoc
msgid "Running the application in JVM mode"
msgstr "JVM モードでのアプリケーションの実行"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After exploring the application in dev mode, you can run it as a standard Java application in JVM mode."
msgstr "devモードでアプリケーションを探索した後、JVMモードで標準のJavaアプリケーションとして実行することができます。"

#: _guides/security-keycloak-authorization.adoc
msgid "Compile the application:"
msgstr "アプリケーションをコンパイルします:"

#: _guides/security-keycloak-authorization.adoc
msgid "Run the application:"
msgstr "アプリケーションの実行:"

#: _guides/security-keycloak-authorization.adoc
msgid "Running the application in native mode"
msgstr "ネイティブモードでアプリケーションの実行"

#: _guides/security-keycloak-authorization.adoc
msgid "You can compile this demo into native code; no modifications are required."
msgstr "このデモはネイティブコードにコンパイルできます。変更は必要ありません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Native compilation eliminates the need for a JVM in the production environment because the produced binary includes the runtime and is optimized for minimal resource usage."
msgstr "ネイティブ・コンパイルでは、生成されるバイナリにランタイムが含まれ、最小限のリソース使用で最適化されるため、本番環境でのJVMの必要性がなくなります。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Compilation takes longer and is disabled by default.\n"
"To build the application, enable the `native` profile."
msgstr "コンパイルには時間がかかるため、デフォルトでは無効になっています。アプリケーションをビルドするには、 `native` プロファイルを有効にします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Build the native binary:"
msgstr "ネイティブ・バイナリをビルドします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After a while, run the native binary:"
msgstr "しばらくしたら、ネイティブ・バイナリを実行してください："

#: _guides/security-keycloak-authorization.adoc
msgid "Testing the application"
msgstr "アプリケーションのテスト"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section for instructions on testing your application in development mode."
msgstr "開発モードでアプリケーションをテストする手順については、前述の「 xref:keycloak-dev-mode[開発モードでアプリケーションを実行する] 」セクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can test the application running in JVM or native modes by using `curl`."
msgstr "`curl` を使って、JVMまたはネイティブ・モードで動作するアプリケーションをテストできます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Obtaining an access token"
msgstr "アクセストークンの取得"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The application uses bearer token authorization.\n"
"To access its resources, first obtain an access token from the Keycloak server:"
msgstr "このアプリケーションはベアラートークン認証を使用します。リソースにアクセスするには、まずKeycloakサーバーからアクセストークンを取得します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If the `quarkus.oidc.authentication.user-info-required` property is set to `true`, the application requires that an access token is used to request `UserInfo`.\n"
"In that case, you must add the `scope=openid` query parameter to the token grant request; for example:"
msgstr "`quarkus.oidc.authentication.user-info-required` プロパティが `true` に設定されている場合、アプリケーションはアクセストークンを使用して `UserInfo` を要求する必要があります。この場合、トークン付与リクエストに `scope=openid` クエリ・パラメータを追加する必要があります："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The preceding example obtains an access token for the user `alice`."
msgstr "前述の例では、ユーザー `alice` のアクセストークンを取得しています。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Accessing the `/api/users/me` endpoint"
msgstr "`/api/users/me` エンドポイントへのアクセス"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Any user with a valid access token can access the `http://localhost:8080/api/users/me` endpoint, which returns a JSON payload with user details:"
msgstr "有効なアクセストークンを持つユーザーであれば誰でも `http://localhost:8080/api/users/me` エンドポイントにアクセスすることができます："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Accessing the `/api/admin` endpoint"
msgstr "`/api/admin` エンドポイントへのアクセス"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `http://localhost:8080/api/admin` endpoint is restricted to users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, the server returns a `403 Forbidden` response:"
msgstr "エンドポイントは `http://localhost:8080/api/admin` エンドポイントは `admin` ロールを持つユーザーに制限されています。以前に発行されたアクセストークンを使用してこのエンドポイントにアクセスしようとすると、サーバーは `403 Forbidden` 応答を返します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Getting an admin access token"
msgstr "管理者アクセストークンの取得"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To access the admin endpoint, get an access token for the `admin` user:"
msgstr "admin エンドポイントにアクセスするには、 `admin` ユーザーのアクセストークンを取得します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Injecting the authorization client"
msgstr "認可クライアントの注入"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can use the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] for advanced tasks, such as managing resources and getting permissions directly from Keycloak.\n"
"To enable this functionality, inject an `AuthzClient` instance into your beans:"
msgstr "リソースの管理やKeycloakから直接パーミッションを取得するなどの高度なタスクのために、 link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] を使用することができます。この機能を有効にするには、 `AuthzClient` インスタンスをBeanに注入します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you want to use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`; otherwise, no bean is available for injection."
msgstr "`AuthzClient` を直接使用したい場合は、 `quarkus.keycloak.policy-enforcer.enable=true` を設定します ; そうでない場合は、インジェクションに使用できる Bean はありません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`.\n"
"Otherwise, no bean is available for injection."
msgstr "`AuthzClient` を直接使用するには、 `quarkus.keycloak.policy-enforcer.enable=true` を設定します。そうでない場合は、インジェクションに使用できるBeanはありません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Mapping protected resources"
msgstr "保護された資源のマッピング"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By default, the extension fetches resources from Keycloak on demand, using their URI to identify and map the application resources that require protection."
msgstr "デフォルトでは、エクステンションは、保護が必要なアプリケーションリソースを識別してマッピングするために、そのURIを使用して、オンデマンドでKeycloakからリソースを取得します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To disable on-demand fetching and instead pre-load resources at startup, configure the following property:"
msgstr "オンデマンド・フェッチを無効にし、代わりに起動時にリソースをプリロードするには、以下のプロパティを設定します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The time required to pre-load resources from Keycloak during startup depends on the number of resources, which might impact your application's initial load time."
msgstr "起動時にKeycloakからリソースをプリロードするのに必要な時間は、リソースの数によって異なり、アプリケーションの初期ロード時間に影響を与える可能性があります。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "More about configuring protected resources"
msgstr "保護されたリソースの設定の詳細"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr "デフォルトの設定では、Keycloakはロールを管理し、誰がどのルートにアクセスできるかを決定します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr "`@RolesAllowed` アノテーションまたは `application.properties` ファイルを使用して保護ルートを設定するには、 xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) ベアラートークン認証] および xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認可] ガイドを参照してください。詳細については、 xref:security-overview.adoc[Quarkusセキュリティ] の概要を参照してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access to public resources"
msgstr "公共資源へのアクセス"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To allow access to a public resource without applying `quarkus-keycloak-authorization` policies, define a `permit` HTTP policy in the `application.properties` file.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr "`quarkus-keycloak-authorization` ポリシーを適用せずにパブリックリソースへのアクセスを許可するには、 `application.properties` ファイルで `permit` HTTP ポリシーを定義します。詳細については、「 xref:security-authorize-web-endpoints-reference.adoc[Web エンドポイントの認証] 」ガイドを参照してください。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You do not need to disable policy checks for a Keycloak Authorization Policy when using configurations like the following:"
msgstr "次のような設定を使用する場合、Keycloak認証ポリシーのポリシーチェックを無効にする必要はありません："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To restrict access to public resources for anonymous users, define an enforcing Keycloak Authorization Policy:"
msgstr "匿名ユーザーの公開リソースへのアクセスを制限するには、Keycloak認証ポリシーを定義します："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "公開リソースへの匿名アクセスを制御する必要がある場合は、デフォルトのテナント構成のみが適用されます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Checking permission scopes programmatically"
msgstr "プログラムで権限スコープをチェック"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In addition to resource permissions, you can define method scopes.\n"
"A scope typically represents an action performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr "リソースパーミッションに加えて、メソッドスコープも定義できます。スコープは通常、リソースに対して実行されるアクションを表します。メソッド・スコープで強制Keycloak認証ポリシーを作成できます。たとえば"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "User must have resource permission `Scope Permission Resource` and scope `read`"
msgstr "ユーザーはリソース権限 `Scope Permission Resource` とスコープを持っている必要があります。 `read`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Policy Enforcer secures the `/api/protected/standard-way` request path, removing the need for annotations such as `@RolesAllowed`.\n"
"However, in some scenarios, you may need to perform a programmatic check."
msgstr "Keycloak Policy Enforcerは、 `/api/protected/standard-way` リクエストパスを保護し、 `@RolesAllowed` のような注釈の必要性を取り除きます。 しかし、シナリオによっては、プログラム的なチェックを実行する必要があるかもしれません。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr "次の例に示すように、 `SecurityIdentity` インスタンスを Bean に注入することでこれを実現できます。あるいは、リソースメソッドに `@PermissionsAllowed` をアノテーションしても同じ結果が得られます。次の例では、3つのリソースメソッドを示します。 それぞれが同じ `read` スコープを必要とします："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `/standard-way` sub-path requires both the resource permission and the `read` scope, based on the configuration set in the `application.properties` file."
msgstr "`/standard-way` サブパスは、 `application.properties` ファイルで設定されたコンフィギュレーションに基づき、リソースパーミッションと `read` スコープの両方を必要とします。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `/programmatic-way` sub-path checks only for the `Scope Permission Resource` permission by default. However, you can enforce additional constraints, such as scope requirements, by using `SecurityIdentity#checkPermission`."
msgstr "`/programmatic-way` サブパスは、デフォルトでは `Scope Permission Resource` パーミッションのみをチェックします。しかし、 `SecurityIdentity#checkPermission` を使用することで、スコープ要件などの追加制約を強制することができます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `@PermissionsAllowed` annotation at `/annotation-way` restricts access to requests that have the `Scope Permission Resource` permission along with the `read` scope.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Security Authorization guide."
msgstr "`/annotation-way` の `@PermissionsAllowed` アノテーションは、 `Scope Permission Resource` パーミッションと `read` スコープを持つリクエストへのアクセスを制限します。詳しくは、セキュリティ認可ガイドの xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[アノテーションを使った認可の] セクションを参照してください。"

#: _guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy].\n"
"For example:"
msgstr "xref:security-openid-connect-multitenancy.adoc[OpenID Connect（OIDC）のマルチテナント] と同様に、テナントごとにポリシーエンフォーサーの設定を行うことができます。例えば"

#: _guides/security-keycloak-authorization.adoc
msgid "Dynamic tenant configuration resolution"
msgstr "動的なテナント設定の解決"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To create configurations for multiple tenants while avoiding excessive entries in your configuration file, you can use the `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` interface to define them programmatically at runtime."
msgstr "複数のテナント用の設定を作成する一方で、設定ファイルに過剰なエントリが追加されないようにするには、 `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` インターフェイスを使用して、実行時にプログラムで定義します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Define or update the `/enhanced-config` path in the default tenant configuration."
msgstr "デフォルトのテナント構成で `/enhanced-config` パスを定義または更新します。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Add the `/new-config` path to the tenant configuration, including custom claims and values that are populated programmatically."
msgstr "`/new-config` パスをテナント構成に追加します。これには、カスタムクレームやプログラムによって入力される値も含まれます。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Fallback to the default static tenant configuration resolution defined in the `application.properties` file or other SmallRye Config sources."
msgstr "`application.properties` 、またはその他のSmallRye Configソースで定義されたデフォルトの静的テナント構成解決にフォールバックします。"

#: _guides/security-keycloak-authorization.adoc
msgid "Configuration reference"
msgstr "設定リファレンス"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This configuration adheres to the official https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration] guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr "この構成は、公式の link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer構成] ガイドラインに準拠しています。さまざまな設定オプションの詳細については、次のドキュメントを参照してください："

#: _guides/security-keycloak-authorization.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"ビルド時に固定\"></i></span>ビルド時に固定される構成プロパティ - 他のすべての構成プロパティは実行時にオーバーライド可能 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "References"
msgstr "リファレンス"

#: _guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "https://www.keycloak.org/documentation.html[Keycloakドキュメント]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr "link:https://www.keycloak.org/docs/latest/authorization_services/index.html[キークローク認可サービス]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"
