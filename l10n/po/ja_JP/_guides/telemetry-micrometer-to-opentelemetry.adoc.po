msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.5\n"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Micrometer and OpenTelemetry extension"
msgstr "Micrometer と OpenTelemetry エクステンション"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This extension provides support for both Micrometer and OpenTelemetry in Quarkus applications. It streamlines integration by incorporating both extensions along with a bridge that enables sending Micrometer metrics via OpenTelemetry."
msgstr "このエクステンションは、Quarkus アプリケーションで Micrometer と OpenTelemetry の両方をサポートします。OpenTelemetry 経由で Micrometer メトリクスを送信できるようにするブリッジとともに両方のエクステンションを組み込むことでインテグレーションを効率化します。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This document is part of the xref:observability.adoc[Observability in Quarkus reference guide] which features this and other observability related components."
msgstr "このドキュメントは、可観測性コンポーネントとその他の可観測性関連コンポーネントを取り上げている xref:observability.adoc[Quarkus の可観測性リファレンスガイド] の一部です。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This extension is available since Quarkus version 3.19."
msgstr "このエクステンションは、Quarkus バージョン 3.19 以降で利用できます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The xref:telemetry-micrometer.adoc[Micrometer Guide] is available for detailed information about the Micrometer extension."
msgstr "Micrometer エクステンションの詳細は、xref:telemetry-micrometer.adoc[Micrometer ガイド] を参照してください。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The xref:opentelemetry.adoc[OpenTelemetry Guide] provides information about the OpenTelemetry extension."
msgstr "xref:opentelemetry.adoc[OpenTelemetry ガイド] には、OpenTelemetry エクステンションに関する情報が記載されています。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The extension allows the normal use of the Micrometer API, but have the metrics handled by the OpenTelemetry extension."
msgstr "このエクステンションにより、Micrometer API の通常の使用が可能になりますが、メトリクスは OpenTelemetry エクステンションによって処理されます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "As an example, the `@Timed` annotation from Micrometer is used to measure the execution time of a method:"
msgstr "たとえば、Micrometer の `@Timed` アノテーションは、メソッドの実行時間を測定するために使用します。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The output telemetry data is handled by the OpenTelemetry SDK and sent by the `quarkus-opentelemetry` extension exporter using the OTLP protocol."
msgstr "出力テレメトリーデータは OpenTelemetry SDK によって処理され、OTLP プロトコルを使用して `quarkus-opentelemetry` エクステンションエクスポーターによって送信されます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This reduces the overhead of having an independent Micrometer registry plus the OpenTelemetry SDK in memory for the same application when both `quarkus-micrometer` and `quarkus-opentelemetry` extensions are used independently."
msgstr "これにより、`quarkus-micrometer` エクステンションと `quarkus-opentelemetry` エクステンションの両方が独立して使用される場合に、同じアプリケーションに対して独立した Micrometer レジストリーと OpenTelemetry SDK をメモリー内に保持することによるオーバーヘッドが削減されます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "*The OpenTelemetry SDK will handle all metrics.* Either Micrometer metrics (manual or automatic) and OpenTelemetry Metrics can be used. All are available with this single extension."
msgstr "*OpenTelemetry SDK はすべてのメトリクスを処理します。* Micrometer メトリクス (手動または自動) と OpenTelemetry メトリクスのいずれかを使用できます。この単一のエクステンションですべてが利用できます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "All the configurations from the OpenTelemetry and Micrometer extensions are available with `quarkus-micrometer-opentelemetry`."
msgstr "OpenTelemetry および Micrometer エクステンションのすべての設定は、`quarkus-micrometer-opentelemetry` で利用できます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The bridge is more than the simple OTLP registry found in Quarkiverse. In this extension, the OpenTelemetry SDK provides a Micrometer registry implementation based on the https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/micrometer/micrometer-1.5/library[`micrometer/micrometer-1.5`] OpenTelemetry instrumentation library."
msgstr "このブリッジは、Quarkiverse にある単純な OTLP レジストリー以上のものです。このエクステンションでは、OpenTelemetry SDK は、https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/micrometer/micrometer-1.5/library[`micrometer/micrometer-1.5`] OpenTelemetry 計装ライブラリーに基づく Micrometer レジストリー実装を提供します。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Usage"
msgstr "使用法"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "If you already have your Quarkus project configured, you can add the `quarkus-micrometer-opentelemetry` extension to your project by running the following command in your project base directory:"
msgstr "Quarkus プロジェクトがすでに設定されている場合、プロジェクトのベースディレクトリーで次のコマンドを実行することで、\n"
"`quarkus-micrometer-opentelemetry` エクステンションをプロジェクトに追加できます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This will add the following to your build file:"
msgstr "これにより、ビルドファイルに次の内容が追加されます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Configuration"
msgstr "設定"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "When the extension is present, Micrometer is enabled by default as are OpenTelemetry tracing, metrics and logs."
msgstr "エクステンションが存在する場合、Micrometer は、OpenTelemetry トレース、メトリクス、ログと同様にデフォルトで有効になります。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "OpenTelemetry metrics auto-instrumentation for HTTP server and JVM metrics are disabled by default because those metrics can be  collected by Micrometer."
msgstr "HTTP サーバーおよび JVM メトリクスの OpenTelemetry メトリクス自動計装は、Micrometer によって収集できるため、デフォルトでは無効になっています。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Specific automatic Micrometer metrics are all disabled by default and can be enabled by setting, for example in the case of JVM metrics:"
msgstr "特定の自動 Micrometer メトリクスはすべてデフォルトで無効になっていますが、設定によって有効にできます。たとえば、JVM メトリクスの場合: "

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "in the `application.properties` file."
msgstr "`application.properties` ファイルは以下のとおりです。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "For this and other properties you can use with the extension, Please refer to:"
msgstr "このプロパティーやエクステンションで使用できるその他のプロパティーについては、以下を参照してください。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "xref:telemetry-micrometer.adoc#configuration-reference[Micrometer metrics configuration properties]"
msgstr "xref:telemetry-micrometer.adoc#configuration-reference[Micrometer メトリクス設定プロパティー]"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "xref:opentelemetry.adoc#configuration-reference[OpenTelemetry configuration properties]"
msgstr "xref:opentelemetry.adoc#configuration-reference[OpenTelemetry 設定プロパティー]"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Metric differences between Micrometer and OpenTelemetry"
msgstr "Micrometer と OpenTelemetry のメトリクスの違い"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "API differences"
msgstr "API の違い"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The metrics produced with each framework follow different APIs and the mapping is not 1:1."
msgstr "各フレームワークで生成されるメトリクスは異なる API に従うため、マッピングは 1:1 ではありません。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "One fundamental API difference is that Micrometer uses a https://docs.micrometer.io/micrometer/reference/concepts/timers.html[Timer] and OpenTelemetry uses a https://opentelemetry.io/docs/specs/otel/metrics/data-model/#histogram[Histogram] to record latency (execution time) metrics and the frequency of the events."
msgstr "基本的な API の違いの 1 つは、Micrometer は https://docs.micrometer.io/micrometer/reference/concepts/timers.html[タイマー] を使用し、OpenTelemetry は https://opentelemetry.io/docs/specs/otel/メトリクス/data-model/#histogram[ヒストグラム] を使用して、レイテンシー (実行時間) メトリクスとイベントの頻度を記録する点です。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "When using the `@Timed` annotation with Micrometer, 2 different metrics are https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/324fdbdd452ddffaf2da2c5bf004d8bb3fdfa1dd/instrumentation/micrometer/micrometer-1.5/library/src/main/java/io/opentelemetry/instrumentation/micrometer/v1_5/OpenTelemetryTimer.java#L31[created on the OpenTelemetry side], one `Gauge` for the `max` value and one `Histogram`."
msgstr "Micrometer で `@Timed` アノテーションを使用する場合、2 つの異なるメトリクスが https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/324fdbdd452ddffaf2da2c5bf004d8bb3fdfa1dd/instrumentation/micrometer/micrometer-1.5/library/src/main/java/io/opentelemetry/instrumentation/micrometer/v1_5/OpenTelemetryTimer.java#L31[OpenTelemetry 側で作成] されます。1 つは、`max` 値用の `Gauge`、もう 1 つが `Histogram` です。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The `DistributionSummary` from Micrometer is transformed into a `Histogram` and a `DoubleGauge` for the `max` value. If service level objectives (slo) are set to `true` when creating a `DistributionSummary`, an additional histogram is created for them."
msgstr "Micrometer の `DistributionSummary` は、`max` 値の `Histogram` と `DoubleGauge` に変換されます。`DistributionSummary` の作成時にサービスレベル目標 (slo) が `true` に設定されている場合、追加のヒストグラムが作成されます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This table shows the differences between the two frameworks:"
msgstr "この表は、2 つのフレームワークの違いを示しています。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Micrometer"
msgstr "Micrometer"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "OpenTelemetry"
msgstr "OpenTelemetry"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "DistributionSummary"
msgstr "DistributionSummary"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`<Metric name>` (Histogram), `<Metric name>.max` (DoubleGauge)"
msgstr "`<Metric name>` (Histogram), `<Metric name>.max` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "DistributionSummary with SLOs"
msgstr "SLO による分布サマリー"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`<Metric name>` (Histogram), `<Metric name>.max` (DoubleGauge), `<Metric name>.histogram` (DoubleGauge)"
msgstr "`<Metric name>` (Histogram), `<Metric name>.max` (DoubleGauge), `<Metric name>.histogram` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "LongTaskTimer"
msgstr "LongTaskTimer"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`<Metric name>.active` (ObservableLongUpDownCounter), `<Metric name>.duration` (ObservableDoubleUpDownCounter)"
msgstr "`<Metric name>.active` (ObservableLongUpDownCounter), `<Metric name>.duration` (ObservableDoubleUpDownCounter)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Timer"
msgstr "Timer"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`<Metric name>` (Histogram), `<Metric name>.max` (ObservableDoubleGauge)"
msgstr "`<Metric name>` (Histogram), `<Metric name>.max` (ObservableDoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Semantic convention differences"
msgstr "意味上の慣習の違い"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The 2 frameworks follow different semantic conventions. The OpenTelemetry Metrics are based on the https://opentelemetry.io/docs/concepts/semantic-conventions/[OpenTelemetry Semantic Conventions] and are still under active development (early 2025). Micrometer metrics convention format is around for a long time and has not changed much."
msgstr "2 つのフレームワークは、異なるセマンティック規則に従います。OpenTelemetry メトリクスは、https://opentelemetry.io/docs/concepts/semantic-conventions/[OpenTelemetry Semantic Conventions] に基づいており、現在も活発に開発中です (2025 年初頭)。Micrometer メトリクス規則の形式は長い間使用されており、あまり変更されていません。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "When these 2 configurations are set in the `application.properties` file:"
msgstr "`application.properties` ファイルで次の 2 つの設定が指定されている場合: "

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "The JVM and HTTP server metrics are collected by Micrometer."
msgstr "JVM および HTTP サーバーのメトリクスは Micrometer によって収集されます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Next, are examples of the metrics collected by Micrometer and a comparison of what would be the `quarkus-micrometer-registry-prometheus` output vs the one on this bridge. A link to the equivalent OpenTelemetry Semantic Convention is also provided for reference and is not currently used in the bridge."
msgstr "次に、Micrometer によって収集されたメトリクスの例と、`quarkus-micrometer-registry-prometheus` の出力とこのブリッジの出力の比較を示します。同等の OpenTelemetry セマンティックコンベンションへのリンクも参照用に提供されていますが、これは現在ブリッジでは使用されていません。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Micrometer Meter"
msgstr "マイクロメーターのメトリクス"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Quarkus Micrometer Prometheus output"
msgstr "Quarkus Micrometer Prometheus の出力"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "This bridge OpenTelemetry output name"
msgstr "このブリッジの OpenTelemetry 出力名"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Related OpenTelemetry Semantic Convention (not applied)"
msgstr "関連する OpenTelemetry セマンティック規約 (適用されません)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Using the @Timed interceptor."
msgstr "@Timed インターセプターの使用。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "method.timed (Histogram), method.timed.max (DoubleGauge)"
msgstr "method.timed (Histogram), method.timed.max (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "NA"
msgstr "該当なし"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Using the @Counted interceptor."
msgstr "@Counted インターセプターの使用。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "method.counted (DoubleSum)"
msgstr "method.counted (DoubleSum)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.active.requests` (Gauge)"
msgstr "`http.server.active.requests` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http_server_active_requests` (Gauge)"
msgstr "`http_server_active_requests` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.active.requests` (DoubleGauge)"
msgstr "`http.server.active.requests` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserveractive_requests[`http.server.active_requests`] (UpDownCounter)"
msgstr "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserveractive_requests[`http.server.active_requests`] (UpDownCounter)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.requests` (Timer)"
msgstr "`http.server.requests` (Timer)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, `http_server_requests_seconds_max` (Gauge)"
msgstr "`http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, `http_server_requests_seconds_max` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.requests` (Histogram), `http.server.requests.max` (DoubleGauge)"
msgstr "`http.server.requests` (Histogram), `http.server.requests.max` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration[`http.server.request.duration`] (Histogram)"
msgstr "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestduration[`http.server.request.duration`] (Histogram)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.bytes.read` (DistributionSummary)"
msgstr "`http.server.bytes.read` (DistributionSummary)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http_server_bytes_read_count`, `http_server_bytes_read_sum` , `http_server_bytes_read_max` (Gauge)"
msgstr "`http_server_bytes_read_count`, `http_server_bytes_read_sum` , `http_server_bytes_read_max` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.bytes.read` (Histogram), `http.server.bytes.read.max` (DoubleGauge)"
msgstr "`http.server.bytes.read` (Histogram), `http.server.bytes.read.max` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestbodysize[`http.server.request.body.size`] (Histogram)"
msgstr "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverrequestbodysize[`http.server.request.body.size`] (Histogram)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.bytes.write` (DistributionSummary)"
msgstr "`http.server.bytes.write` (DistributionSummary)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http_server_bytes_write_count`, `http_server_bytes_write_sum` , `http_server_bytes_write_max` (Gauge)"
msgstr "`http_server_bytes_write_count`, `http_server_bytes_write_sum` , `http_server_bytes_write_max` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.bytes.write` (Histogram), `http.server.bytes.write.max` (DoubleGauge)"
msgstr "`http.server.bytes.write` (Histogram), `http.server.bytes.write.max` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverresponsebodysize[`http.server.response.body.size`] (Histogram)"
msgstr "https://opentelemetry.io/docs/specs/semconv/http/http-metrics/#metric-httpserverresponsebodysize[`http.server.response.body.size`] (Histogram)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.connections` (LongTaskTimer)"
msgstr "`http.server.connections` (LongTaskTimer)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http_server_connections_seconds_active_count`, `http_server_connections_seconds_duration_sum` `http_server_connections_seconds_max` (Gauge)"
msgstr "`http_server_connections_seconds_active_count`, `http_server_connections_seconds_duration_sum` `http_server_connections_seconds_max` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`http.server.connections.active` (LongSum), `http.server.connections.duration` (DoubleGauge)"
msgstr "`http.server.connections.active` (LongSum), `http.server.connections.duration` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "N/A"
msgstr "該当なし"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.live` (Gauge)"
msgstr "`jvm.threads.live` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm_threads_live_threads` (Gauge)"
msgstr "`jvm_threads_live_threads` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.live` (DoubleGauge)"
msgstr "`jvm.threads.live` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "https://opentelemetry.io/docs/specs/semconv/runtime/jvm-metrics/#metric-jvmthreadcount[`jvm.threads.live`] (UpDownCounter)"
msgstr "https://opentelemetry.io/docs/specs/semconv/runtime/jvm-metrics/#metric-jvmthreadcount[`jvm.threads.live`] (UpDownCounter)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.started` (FunctionCounter)"
msgstr "`jvm.threads.started` (FunctionCounter)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm_threads_started_threads_total` (Counter)"
msgstr "`jvm_threads_started_threads_total` (Counter)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.started` (DoubleSum)"
msgstr "`jvm.threads.started` (DoubleSum)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.daemon` (Gauge)"
msgstr "`jvm.threads.daemon` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm_threads_daemon_threads` (Gauge)"
msgstr "`jvm_threads_daemon_threads` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.daemon` (DoubleGauge)"
msgstr "`jvm.threads.daemon` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.peak` (Gauge)"
msgstr "`jvm.threads.peak` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm_threads_peak_threads` (Gauge)"
msgstr "`jvm_threads_peak_threads` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.peak` (DoubleGauge)"
msgstr "`jvm.threads.peak` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.states` (Gauge per state)"
msgstr "`jvm.threads.states` (Gauge per state)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm_threads_states_threads` (Gauge)"
msgstr "`jvm_threads_states_threads` (Gauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "`jvm.threads.states` (DoubleGauge)"
msgstr "`jvm.threads.states` (DoubleGauge)"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Some metrics might be missing from the output if they contain no data."
msgstr "一部のメトリクスは、データが含まれていない場合、出力に含まれない可能性があります。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "See the output"
msgstr "出力を参照してください。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Grafana-OTel-LGTM Dev Service"
msgstr "Grafana-OTel-LGTM 開発サービス"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "You can use the xref:observability-devservices-lgtm.adoc[Grafana-OTel-LGTM] Dev Service."
msgstr "xref:observability-devservices-lgtm.adoc[Grafana-OTel-LGTM] Dev Service を使用できます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid ""
"This Dev Service includes Grafana for visualizing data, Loki to store logs, Tempo to store traces and Prometheus to store metrics.\n"
"It also provides an OTel collector to receive the data"
msgstr "この Dev Service には、データを視覚化する Grafana、ログを保存する Loki、トレースを保存する Tempo、メトリクスを保存する Prometheus が含まれています。\n"
"また、データを受信する OTel コレクターも提供します。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Logging exporter"
msgstr "Logging エクスポーター"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "You can output all metrics to the console by setting the exporter to `logging` in the `application.properties` file:"
msgstr "`application.properties` ファイルでエクスポーターを `logging` に設定して、すべてのメトリクスをコンソールに出力できます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid ""
"Set the exporter to `logging`.\n"
"Normally you don't need to set this.\n"
"The default is `cdi`."
msgstr "エクスポーターを `logging` に設定します。\n"
"通常、これを設定する必要はありません。\n"
"デフォルトは `cdi` です。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid ""
"Set the interval to export the metrics.\n"
"The default is `1m`, which is too long for debugging."
msgstr "メトリクスのエクスポート間隔を設定します。\n"
"デフォルトは `1m` ですが、デバッグには長すぎます。"

#: _guides/telemetry-micrometer-to-opentelemetry.adoc
msgid "Also add this dependency to your project:"
msgstr "次の依存関係もプロジェクトに追加します。"
